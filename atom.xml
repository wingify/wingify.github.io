<?xml version="1.0" encoding="UTF-8"?><rss xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:content="http://purl.org/rss/1.0/modules/content/" xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title><![CDATA[Wingify Engineering]]></title><description><![CDATA[This is the engineering blog from the hackers at Wingify]]></description><link>https://engineering.wingify.com/</link><image><url>https://engineering.wingify.com//logos/logo-48.png</url><title>Wingify Engineering</title><link>https://engineering.wingify.com/</link></image><generator>GatsbyJS Advanced Starter</generator><lastBuildDate>Tue, 02 Jun 2020 14:54:24 GMT</lastBuildDate><atom:link href="https://engineering.wingify.com//atom.xml" rel="self" type="application/rss+xml"/><copyright><![CDATA[Copyright © Wingify. All rights reserved.]]></copyright><item><title><![CDATA[Performance improvements in VWO Smartcode]]></title><description><![CDATA[VWO puts a lot of focus on ensuring websites remain performant enough while using VWO. We have been increasing the efforts in this area and…]]></description><link>https://engineering.wingify.com//posts/performance-improvements-in-vwo-smart-code/</link><guid isPermaLink="false">https://engineering.wingify.com//posts/performance-improvements-in-vwo-smart-code/</guid><pubDate>Tue, 07 Jan 2020 18:30:00 GMT</pubDate><content:encoded>&lt;p&gt;VWO puts a lot of focus on ensuring websites remain performant enough while using VWO. We have been increasing the efforts in this area and due to this, we are able to bring two very big optimizations which would directly reduce the impact on the performance of the websites.&lt;/p&gt;
&lt;h2 id=&quot;jquery-dependency-removed&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#jquery-dependency-removed&quot; aria-label=&quot;jquery dependency removed permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;jQuery Dependency Removed&lt;/h2&gt;
&lt;p&gt;&lt;a href=&quot;https://vwo.com/&quot;&gt;VWO&lt;/a&gt; primarily used to be an A/B testing tool (now a complete Experience Optimization Platform) wherein customers can apply changes to their websites using VWO’s editor without having to make changes in their website code. To achieve this we required a DOM manipulation and traversal library which was well supported on all the browsers and jQuery was the best choice back then.&lt;/p&gt;
&lt;p&gt;It has served us well over the years but we could not update jQuery and were stuck with its version 1.4.2 because of a &lt;a href=&quot;https://help.vwo.com/hc/en-us/articles/360020730394-What-Is-VWO-Code-Editor&quot;&gt;feature&lt;/a&gt; we provide to our customers wherein they can use any API of jQuery(exposed by VWO as vwo_$). It allowed customers not to include jQuery twice on the page if the customer’s website was already using it. It was the right choice back then as jQuery was very popular and almost every website had it. But as people started using various methods of jQuery, there was a risk in upgrading jQuery version because we can’t be sure what methods are being used by customers and what changes in those methods’ APIs had been done in newer versions of jQuery.&lt;/p&gt;
&lt;p&gt;To improve the performance of the library we decided to write a small alternative of jQuery based on &lt;a href=&quot;https://github.com/kenwheeler/cash/&quot;&gt;cash.js&lt;/a&gt; and jQuery.js, this new library is around 13KB (Minified and Uncompressed) as compared to 70.5 KB(Minified and Uncompressed) of jQuery 1.4.2.&lt;/p&gt;
&lt;p&gt;Why not jQuery&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;jQuery is huge in uncompressed size (70.5KB).&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;jQuery needs to take care of all the browser quirks and in all possible ways, a method is called.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;We were also not using all the features that it had to offer.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;jQuery provides a lot of methods and not all of them are required for our purpose, For example, we don’t require animation support in CSS&lt;/li&gt;
&lt;li&gt;It provides a &lt;a href=&quot;https://projects.jga.me/jquery-builder/&quot;&gt;custom builder&lt;/a&gt; that allows users to skip certain modules but the resulting JS size was still a lot as it has unwanted things not used by us.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;So, the solution was to create our own alternative of jQuery which would meet the following requirements.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;A very custom solution implementing only the functionality required by VWO - to keep the code size smallest possible supporting IE11+ and all other browsers (Chrome/Firefox/Opera/Safari/Edge). We used &lt;a href=&quot;https://browserl.ist/?q=defaults&quot;&gt;Browserlist&lt;/a&gt; to identify browsers’ share and decided to not support browsers with percentage share less than 1 percent.&lt;/li&gt;
&lt;li&gt;It should conform to jQuery API so that almost no change is required in the code using jQuery earlier.&lt;/li&gt;
&lt;li&gt;It should be as stable as jQuery. &lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&quot;steps-we-took-to-migrate-to-no-jquery&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#steps-we-took-to-migrate-to-no-jquery&quot; aria-label=&quot;steps we took to migrate to no jquery permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Steps we took to migrate to “no jQuery”&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;We started by scanning the entire library codebase for calls matching vwo_$().methodName with a regular expression search and were able to get a list of jQuery methods being used by VWO.&lt;/li&gt;
&lt;li&gt;We found out methods that were just “syntactic sugar” and were being used e.g. there was first() method which is technically equivalent to eq(0). So, we changed the usage of the first method to eq(0).&lt;/li&gt;
&lt;li&gt;We started taking the implementation of the methods from the latest jQuery version as-is and started removing the code that wasn’t for us.&lt;/li&gt;
&lt;li&gt;We took the tests from cash.js and ran its tests. We chose cash.js tests for this because it’s functionality is a very small subset of jQuery and is mostly a superset of our requirements. A lot of tests failed and we identified which failures are acceptable and which are not and accordingly modified the tests.&lt;/li&gt;
&lt;li&gt;We integrated the new library with our codebase and ran tests. We have a good number of Integration tests and E2E Tests apart from Unit tests for our libraries using the jQuery. Even though our existing Unit Tests didn’t help here but good coverage with Integration and E2E tests helped in finding bugs.&lt;/li&gt;
&lt;li&gt;Apart from Automated Tests, we did a good amount of Manual Testing across various browsers and platforms with all the libraries which took the major effort.&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Once all testing passed, we decided to enable this new library for &lt;a href=&quot;https://vwo.com/&quot;&gt;vwo.com&lt;/a&gt; as the website uses VWO itself to monitor the errors in production.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;This was required to test the library in production with all sorts of devices and browsers visitors come from.&lt;/li&gt;
&lt;li&gt;The website has &lt;a href=&quot;https://sentry.io/organizations/vwo/issues/&quot;&gt;sentry&lt;/a&gt; in place to track any errors coming on the website.&lt;/li&gt;
&lt;li&gt;We monitored the errors for a few days and were able to identify a few bugs from it which neither our automation nor manual testing was able to catch.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;After the bugs were fixed, we monitored for a few more days just to be sure and then we enabled it for all the new users signing up for VWO. It isn’t possible to enable it for existing accounts as they might be using some methods of jQuery directly.&lt;/li&gt;
&lt;li&gt;Next, we would be working on a way to reliably identify accounts for which the new library can be automatically enabled.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Below are the performance stats for a static and local website (we chose this to eliminate network fluctuations) using the two different versions of our library. All the stats are median of five performance audits we did.&lt;/p&gt;
&lt;table style=&quot;width:70%&quot;  align=&quot;center&quot; border=&quot;1px solid black&quot;&gt;
&lt;thead&gt;
  &lt;tr align=&quot;center&quot;&gt;
    &lt;th&gt;&lt;/th&gt;
    &lt;th&gt;Time to Interactive&lt;/th&gt; 
    &lt;th&gt;First CPU Idle&lt;/th&gt;
    &lt;th&gt;Performance Score&lt;/th&gt;
  &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
  &lt;tr&gt;
    &lt;td&gt;With jQuery &lt;/td&gt;
    &lt;td&gt;6.1&lt;/td&gt;
    &lt;td&gt;5.9&lt;/td&gt;
    &lt;td&gt;74&lt;/td&gt;
  &lt;/tr&gt;
  &lt;tr&gt;
    &lt;td&gt;Without jQuery&lt;/td&gt;
    &lt;td&gt;5.4&lt;/td&gt;
    &lt;td&gt;5.1&lt;/td&gt;
    &lt;td&gt;79&lt;/td&gt;
  &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;
&lt;h2 id=&quot;brotli-compression-for-all-static-files&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#brotli-compression-for-all-static-files&quot; aria-label=&quot;brotli compression for all static files permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Brotli Compression for all Static Files&lt;/h2&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/google/brotli/blob/master/c/tools/brotli.md&quot;&gt;Brotli&lt;/a&gt; is a compression technique introduced by google. It is a lossless compression algorithm that compresses data by using the combination of the LZ77 algorithm, Huffman coding, and 2nd order context modelling. It is similar in speed to deflate but offers denser compression.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://caniuse.com/#search=brotli&quot;&gt;&lt;img src=&quot;https://lh5.googleusercontent.com/AevuoDiVqRfwwk6feRa7dxx4rk-EPH0QnDWj0-Z5qmJUQJ_OfaKisc2s340Mo4BlS19UczC5ck6C48m-TtETAHiqsTiCgL7hCuL9ntT-rSzpeAqZboNPx-QR8JMVMlOOrPzC4dPE&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;why-brotli&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#why-brotli&quot; aria-label=&quot;why brotli permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Why brotli?&lt;/h3&gt;
&lt;p&gt;It is well supported by all popular browsers. It is reported to have &lt;a href=&quot;https://paulcalvano.com/index.php/2018/07/25/brotli-compression-how-much-will-it-reduce-your-content/&quot;&gt;gains up to 25%&lt;/a&gt; over gzip compression. This info was enough to get us focussed on implementing Brotli on our &lt;a href=&quot;https://engineering.wingify.com/posts/dynamic-cdn/&quot;&gt;CDN&lt;/a&gt;. Fewer bytes transferred over the network not only leads to a decrease in the page load time but also decreases the cost of serving the file.&lt;/p&gt;
&lt;h3 id=&quot;why-just-static-files&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#why-just-static-files&quot; aria-label=&quot;why just static files permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Why just Static Files?&lt;/h3&gt;
&lt;p&gt;We found that compressing resources on the fly won’t lead to performance optimization in a straightforward manner as compression time which is on the higher side for brotli as compared to gzip might impact response time. See &lt;a href=&quot;https://blogs.dropbox.com/tech/2017/04/deploying-brotli-for-static-content/&quot;&gt;https://blogs.dropbox.com/tech/2017/04/deploying-brotli-for-static-content/&lt;/a&gt;  for more details. So we avoided that in the first implementation. Also, as Brotli is meant to compress text files and shouldn’t be used for binary files, we skipped images from brotli compression.&lt;/p&gt;
&lt;h3 id=&quot;steps-we-took-to-move-from-gzip-to-brotli-for-static-files&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#steps-we-took-to-move-from-gzip-to-brotli-for-static-files&quot; aria-label=&quot;steps we took to move from gzip to brotli for static files permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Steps we took to move from gzip to Brotli for Static Files&lt;/h3&gt;
&lt;p&gt;Brotli Compression was something that would be enabled for all of our customers at once(Per account strategy wasn’t possible as the static requests don’t contain VWO Account Id) and we had to be extra sure that in no circumstance our customers’ data is impacted. So, carefully followed the following steps:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;We compressed all the static files during our NodeJS based Build process with the highest level of compression Level(i.e. 11)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;The built files contained three versions of the files&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Uncompressed&lt;/li&gt;
&lt;li&gt;Brotli Compressed (.br)&lt;/li&gt;
&lt;li&gt;Gzip Compressed (.gz)&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Earlier we used &lt;a href=&quot;https://github.com/foliojs/brotli.js&quot;&gt;https://github.com/foliojs/brotli.js&lt;/a&gt; but we found that it failed to compress small files(&lt;a href=&quot;https://github.com/foliojs/brotli.js/issues/19&quot;&gt;https://github.com/foliojs/brotli.js/issues/19&lt;/a&gt;). So, we moved to &lt;a href=&quot;https://github.com/MayhemYDG/iltorb&quot;&gt;https://github.com/MayhemYDG/iltorb&lt;/a&gt;. Our automation caught this bug. More on automation later.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;We use OpenResty at our &lt;a href=&quot;https://engineering.wingify.com/posts/dynamic-cdn/&quot;&gt;CDN&lt;/a&gt; and we already had certain rewrite rules in Lua in place to be able to serve different content to different browsers. There we added support for serving already compressed brotli files.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;We read the ‘Accept-Encoding’ header and identified the encoding supported by the UserAgent from there.&lt;/li&gt;
&lt;li&gt;If the UserAgent claimed to support brotli we served brotli otherwise, we served gzip. We assume that there is no browser that doesn’t support gzip which is validated by &lt;a href=&quot;https://caniuse.com/#search=gzip&quot;&gt;https://caniuse.com/#search=gzip&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;We made sure the Vary: Accept-Encoding response header is set in all cases. More on this later.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Before making it to the production we wanted to be sure that in the production all browsers which claim to have the support of brotli are able to decompress at the highest level of compression. For this, we decided to compress our most used library and served it on vwo.com as an independent request. We identified a particular string in the library and made sure that it was present every time. In case it’s not present or the response code wasn’t 200 we logged it as an error on Sentry. We monitored the logs for 2 days and found no issues. So, all ok from this angle.&lt;/li&gt;
&lt;li&gt;Due to the relatively complex release process of VWO libraries, it wasn’t practical to create brotli files for all the possible static files [We have versioning for all files]. Due to this, we had to modify Nginx conf location blocks to force any requests to deprecated files to redirect to the latest stable version of that file. It required all possible static content serving endpoints to be tested.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;how-did-we-make-sure-that-there-were-no-issues-with-the-release&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#how-did-we-make-sure-that-there-were-no-issues-with-the-release&quot; aria-label=&quot;how did we make sure that there were no issues with the release permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;How did we make sure that there were no issues with the release?&lt;/h3&gt;
&lt;p&gt;To ensure that there were no issues with the new version of the VWO library we wrote Request Response based automation test cases for our CDN in addition to the existing e2e test cases. We created a list of all possible static files that are served by our CDN by scanning all our libraries built code through automation. We combined it with all the possible versions of our libraries and it created a list of all possible endpoints (including some non-existent endpoints as some files are not servable in certain versions) that we have.&lt;/p&gt;
&lt;p&gt;It verified the following things for all those endpoints:-&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;For different variations of the Accept-Encoding request header file with the expected compression was served. Expected Compression was verified by Checking the Content-Encoding Response Header.&lt;/li&gt;
&lt;li&gt;Status Code is 200. If the Status Code is non-200 (Remember there were non-existent endpoints in it), it would verify it with one of the designated production CDN nodes to see if that also returned the same non-200 status code. If yes, then it’s a non-existent endpoint otherwise it’s a bug.&lt;/li&gt;
&lt;li&gt;We have endpoints like &lt;a href=&quot;http://dev.visualwebsiteoptimizer.com/6.0/va.js&quot;&gt;https://dev.visualwebsiteoptimizer.com/6.0/va.js&lt;/a&gt;. Here 6.0 means 6.0 version of the library. We used the framework to ensure that the content for the request corresponds to the requested version. Almost all of our files have versioning information in them.&lt;/li&gt;
&lt;li&gt;Bonus, we used the effort done in framework implementation to verify licenses also for all of our endpoints. Plus, the framework is flexible enough to verify anything in response.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;We didn’t make the changes live in one go on all our CDN nodes. We started with a node with the least amount of traffic with careful monitoring. We monitored the logs for a day and then proceeded to make it live on the other servers as well.&lt;/p&gt;
&lt;p&gt;Our Testing library - Most Used[Sizes are with the new version in which jQuery doesn’t exist]&lt;/p&gt;
&lt;p&gt;With gzip&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://lh5.googleusercontent.com/tgRjC_VNMrWMr0Lirng3CyPMQzxfFEsfvCbWf4WpPkvP-9ArudoMXCP8OhHbWxhOi-bAMAHAW_w1eFBs2A-cb9TWQBcQ0k3icv1Lvv9FZO43uWpSuHQiV_jIhPntr4xNKoG5ggfB&quot;&gt;&lt;/p&gt;
&lt;p&gt;With Brotli&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://lh6.googleusercontent.com/knj7kYBN3217lPwqPC25gsL4lwB9u0L2r2XYOTnjnvzzCZoCIAmJgn-6Esh-eLZmLQOn0MUV-XO_c7ocZhoi_2l8xUIII_88hU7z6aMS30e6fKudh42HdUOAKqZ5W4WemHVhVGOp&quot;&gt;&lt;/p&gt;
&lt;h3 id=&quot;the-importance-of-vary-header&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#the-importance-of-vary-header&quot; aria-label=&quot;the importance of vary header permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;The importance of Vary Header&lt;/h3&gt;
&lt;p&gt;To make sure that any HTTP Cache does not cache a specific compressed file and serve it for all UserAgents regardless of the decompression support at that UserAgent, we are using the vary header with Accept-Encoding to make sure the right file is served to the User-Agent. You can read more about it at &lt;a href=&quot;https://www.fastly.com/blog/best-practices-using-vary-header&quot;&gt;https://www.fastly.com/blog/best-practices-using-vary-header&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;future-plans&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#future-plans&quot; aria-label=&quot;future plans permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Future Plans&lt;/h3&gt;
&lt;p&gt;Currently this library is available for new customers only. But we are planning to deploy this library for all of our existing customers. It would require to figure out if they are using any jQuery method directly or not.
Also, we would be experimenting with brotli compression on the fly for our non-static files.&lt;/p&gt;
&lt;p&gt;This is not the end of our performance improvement journey. Stay tuned !&lt;/p&gt;</content:encoded><author>Shubham Soni, Udit Chawla</author></item><item><title><![CDATA[Three Wingifighters at the BountyCon]]></title><description><![CDATA[On March 29th, 2019, our team members Ankit Jain, Dheeraj Joshi and I had the privilege to attend a very exclusive event called BountyCon in…]]></description><link>https://engineering.wingify.com//posts/three-wingifighters-at-the-bountycon/</link><guid isPermaLink="false">https://engineering.wingify.com//posts/three-wingifighters-at-the-bountycon/</guid><pubDate>Tue, 17 Dec 2019 18:30:00 GMT</pubDate><content:encoded>&lt;p&gt;      On March 29th, 2019, our team members &lt;a href=&quot;https://twitter.com/ankneo&quot;&gt;Ankit Jain&lt;/a&gt;, &lt;a href=&quot;https://twitter.com/dheerajhere&quot;&gt;Dheeraj Joshi&lt;/a&gt; and I had the privilege to attend a very exclusive event called &lt;a href=&quot;https://www.facebook.com/notes/facebook-bug-bounty/introducing-bountycon/2415701251777420/&quot;&gt;&lt;strong&gt;BountyCon&lt;/strong&gt;&lt;/a&gt; in Singapore at Facebook APAC HQ. This was an invitation-only event organized by &lt;strong&gt;Facebook&lt;/strong&gt; and &lt;strong&gt;Google&lt;/strong&gt;, that gave Security Researchers and University Students an opportunity to hear from some of the brightest minds in the field of &lt;strong&gt;Bug Bounty Hunting.&lt;/strong&gt; The purpose of BountyCon was to bring together researchers from all over the Asia-Pacific region under one roof to collaborate, network and submit security flaws across both platforms during the live hacking event. In this blog post, I will cover my experience with the BountyCon, how the conference turned out, impression on the CTF event, and overall thoughts about the Conference experience!&lt;/p&gt;
&lt;h2 id=&quot;how-did-we-get-the-invitation&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#how-did-we-get-the-invitation&quot; aria-label=&quot;how did we get the invitation permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;How did we get the invitation?&lt;/h2&gt;
&lt;p&gt;      In January 2019, Facebook and Google launched a &lt;strong&gt;Capture the Flag&lt;/strong&gt; competition (CTF) for the first time to identify new whitehats in the Asia-Pacific region. Like everyone, we signed up for this competition and were super excited about this event.&lt;/p&gt;
&lt;p&gt;So there were several reasons that led me to participate in this competition.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Chance to visit Singapore:&lt;/strong&gt;
Top 20 winners were to be awarded free flight tickets and accommodations in Singapore to attend the event.&lt;/li&gt;
&lt;/ul&gt;
&lt;div style=&quot;text-align:left;margin:50px&quot;&gt;
  &lt;img src=&quot;https://static.wingify.com/gcp/uploads/sites/5/2019/12/excited.gif&quot; style=&quot;box-shadow: 2px 2px 10px 1px #222; width: 320px; height: auto;&quot;&gt;
&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Meeting new Researchers:&lt;/strong&gt;
How could I miss a chance to be in an environment where everyone speaks your language.&lt;/li&gt;
&lt;/ul&gt;
&lt;div style=&quot;text-align:left;margin:50px&quot;&gt;
  &lt;img src=&quot;/images/2019/12/harry_potter.gif&quot; style=&quot;box-shadow: 1px 1px 10px 1px #222; width: 320px; height: auto;&quot;&gt;
&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Facebook, Singapore HQ:&lt;/strong&gt;  - Yes!
The venue for this event was at the Facebook office and I was thrilled to visit their new APAC HQ.&lt;/li&gt;
&lt;/ul&gt;
&lt;div style=&quot;text-align:left;margin:50px&quot;&gt;
  &lt;img src=&quot;/images/2019/12/facebook_office.jpg&quot; style=&quot;box-shadow: 1px 1px 10px 1px #222; width: 320px; height: auto;&quot;&gt;
&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Facebook and Google swags:&lt;/strong&gt; Just a cherry on the top!&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Anyways, the objective of this competition was to perform passive recon (the number of flags planted wasn&apos;t revealed) against the target (Google and Facebook) and capture as many flags as possible. Most of the challenges were related to OSINT and some of them were related to Web, Cryptography, steganography, and Reverse Engineering.&lt;/p&gt;
&lt;p&gt;I started the challenge by googling &quot; &lt;strong&gt;Bountycon&lt;/strong&gt;&quot; and at the end of the search, I got a flag inside security.txt file ;)&lt;/p&gt;
&lt;div style=&quot;text-align:center;margin:50px&quot;&gt;
  &lt;img src=&quot;/images/2019/12/security_txt.png&quot; style=&quot;box-shadow: 1px 1px 10px 1px #222; width: 420px; height: auto;&quot;&gt;
&lt;/div&gt;
&lt;p&gt;After capturing the first flag I felt a sense of adrenaline build up inside of me. Over the next two hours, I continued hammering away at my keyboard, consequently solving a few more challenges.&lt;/p&gt;
&lt;div style=&quot;text-align:center;margin:50px&quot;&gt;
  &lt;img src=&quot;/images/2019/12/hunting_mode.gif&quot; style=&quot;box-shadow: 1px 1px 10px 1px #222; width: 420px; height: auto;&quot;&gt;
&lt;/div&gt;
&lt;p&gt;A problem that was both interesting and challenging was the &lt;strong&gt;Deeplink challenge&lt;/strong&gt;. It involved reverse-engineering facebook app and reconstructing the flag from assembly code. So here is how I solved this challenge, thanks to &lt;a href=&quot;https://twitter.com/mgill25&quot;&gt;Manish Gill&lt;/a&gt; for pointing me in the right direction.&lt;/p&gt;
&lt;p&gt;The first thing that comes to mind when relating CTF and the executable(APK) file is Reverse-Engineering.&lt;/p&gt;
&lt;p&gt;I quickly downloaded the latest app from &lt;a href=&quot;https://www.facebook.com/android_upgrade&quot;&gt;https://www.facebook.com/android_upgrade&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Using the all-purpose decompiler &lt;a href=&quot;https://ibotpeaches.github.io/Apktool/&quot;&gt;tool&lt;/a&gt; as my first resort, I found the first flag in the AndroidManifest.xml file.&lt;/p&gt;
&lt;div style=&quot;text-align:center;margin:50px&quot;&gt;
  &lt;img src=&quot;/images/2019/12/bountycon_manifest_flag.png&quot; style=&quot;box-shadow: 1px 1px 10px 1px #222; width: 820px; height: auto;&quot;&gt;
&lt;/div&gt;
&lt;p&gt;But wait, &lt;strong&gt;this is not the solution for Deeplink Challenge&lt;/strong&gt; :P&lt;/p&gt;
&lt;p&gt;The second flag was even more elusive. To solve the Deeplink challenge, I had to download and decompile the previous release of the facebook app.&lt;/p&gt;
&lt;p&gt;I downloaded the previous-release(Facebook 203.0.0.16.293) of the Facebook app from &lt;a href=&quot;https://www.apkmirror.com/apk/facebook-2/facebook/facebook-203-0-0-16-293-release/&quot;&gt;&lt;strong&gt;apkmirror&lt;/strong&gt;&lt;/a&gt; and decompiled the resources using apktool.&lt;/p&gt;
&lt;p&gt;After searching for some time, I found an interesting file called PSaaActivity.smali.&lt;/p&gt;
&lt;div style=&quot;text-align:center;margin:50px&quot;&gt;
  &lt;img src=&quot;/images/2019/12/bountycon_deeplink_flag.png&quot; style=&quot;box-shadow: 1px 1px 10px 1px #222; width: 420px; height: auto;&quot;&gt;
&lt;/div&gt;
&lt;p&gt;After going through the assembly code and some debugging I finally found the second flag &lt;strong&gt;BountyCon{cr4zy_d33pl1nk_m461c}&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;By the end of the competition, I solved 18 challenges and earned a total of 943 points. Though it was nowhere near the 1200+ points achieved by Ankit and Dheeraj, I really enjoyed the competition :P :P&lt;/p&gt;
&lt;div style=&quot;text-align:center;margin:50px&quot;&gt;
  &lt;img src=&quot;/images/2019/12/bountycon_score.png&quot; style=&quot;box-shadow: 1px 1px 10px 1px #222; width: 750px; height: auto;&quot;&gt;
&lt;/div&gt;
&lt;p&gt;After a couple of days, the three of us got an email from the Facebook team and we were delighted to know that we were selected as one of the top 20 winners from the APAC zone.&lt;/p&gt;
&lt;h2 id=&quot;meeting-the-legend-jeff-moss&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#meeting-the-legend-jeff-moss&quot; aria-label=&quot;meeting the legend jeff moss permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Meeting the legend Jeff Moss&lt;/h2&gt;
&lt;p&gt;      On March 28, we started from Delhi at around 11:00 PM and we reached Singapore on Friday morning. After a quick fresh-up at our hotel, we headed out for a walk in the city and ended up at Starbucks.&lt;/p&gt;
&lt;p&gt;While we were chilling at Starbucks, Dheeraj got to know about an event &quot;&lt;a href=&quot;https://www.meetup.com/A-CON-Meetup/events/259861622/&quot;&gt;ALIBABA SECURITY Meetup&lt;/a&gt;&quot; on twitter. This was a security meetup that was hosted by the Lazada security team and the Alibaba Security Response Center. So, quickly we guys registered ourselves on their online forum and set out to attend the meetup.&lt;/p&gt;
&lt;p&gt;We reached at around 7:00 PM to the venue of the meetup, Lazada Visitor Centre. After the opening ceremony, we had a chance to meet and greet the legend &lt;a href=&quot;https://twitter.com/thedarktangent&quot;&gt;Jeff Moss&lt;/a&gt;, Founder of &lt;a href=&quot;https://www.defcon.org/&quot;&gt;&lt;strong&gt;Defcon&lt;/strong&gt;&lt;/a&gt; and &lt;a href=&quot;https://www.blackhat.com/&quot;&gt;&lt;strong&gt;Blackhat&lt;/strong&gt;&lt;/a&gt;. It was a great honor to meet him in person!&lt;/p&gt;
&lt;div style=&quot;text-align:center;margin:50px&quot;&gt;
  &lt;img src=&quot;/images/2019/12/alibaba_1.png&quot; style=&quot;box-shadow: 1px 1px 10px 1px #222; width: 700px; height: auto;&quot;&gt;
  &lt;div style=&quot;text-align:center;margin-top:5px;&quot;&gt;
  	Picture Courtesy: &lt;a href=&quot;https://twitter.com/AsrcSecurity&quot;&gt;@AsrcSecurity&lt;/a&gt;
  &lt;/div&gt;
&lt;/div&gt;
&lt;div style=&quot;text-align:center;margin:50px&quot;&gt;
  &lt;img src=&quot;/images/2019/12/alibaba_2.png&quot; style=&quot;box-shadow: 1px 1px 10px 1px #222; width: 300px; height: auto;&quot;&gt;
  &lt;div style=&quot;text-align:center;margin-top:5px;&quot;&gt;
  	Picture Courtesy: &lt;a href=&quot;https://twitter.com/AsrcSecurity&quot;&gt;@AsrcSecurity&lt;/a&gt;
  &lt;/div&gt;
&lt;/div&gt;
&lt;div style=&quot;text-align:center;margin:50px&quot;&gt;
  &lt;img src=&quot;/images/2019/12/alibaba_3.png&quot; style=&quot;box-shadow: 1px 1px 10px 1px #222; width: 700px; height: auto;&quot;&gt;
  &lt;div style=&quot;text-align:center;margin-top:5px;&quot;&gt;
  	Picture Courtesy: &lt;a href=&quot;https://twitter.com/AsrcSecurity&quot;&gt;@AsrcSecurity&lt;/a&gt;
  &lt;/div&gt;
&lt;/div&gt;
&lt;div style=&quot;text-align:center;margin:50px&quot;&gt;
  &lt;img src=&quot;/images/2019/12/alibaba_4.png&quot; style=&quot;box-shadow: 1px 1px 10px 1px #222; width: 700px; height: auto;&quot;&gt;
  &lt;div style=&quot;text-align:center;margin-top:5px;&quot;&gt;
  	Picture Courtesy: &lt;a href=&quot;https://twitter.com/AsrcSecurity&quot;&gt;@AsrcSecurity&lt;/a&gt;
  &lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;The rest of our day consisted of an awesome dinner and afterward, we returned to our hotel and called it a night.&lt;/p&gt;
&lt;h2 id=&quot;first-day-of-bountycon&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#first-day-of-bountycon&quot; aria-label=&quot;first day of bountycon permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;First Day of BountyCon&lt;/h2&gt;
&lt;p&gt;      On the 30th March 2019, the first day of BountyCon, we reached at the venue of BountyCon, Facebook APAC HQ at around 8:30 AM. After registration, we got a cool badge, a BountyCon goodie bag with Google Tshirt, a BountyCon hoodie, a thermos flask and Notepad in it.&lt;/p&gt;
&lt;p&gt;The first talk was by &lt;a href=&quot;https://twitter.com/fransrosen&quot;&gt;Frans Rosen&lt;/a&gt;, Security Advisor at Detectify, he gave a walkthrough on methodology and strategies to win big bounties. Here is a link to his &lt;a href=&quot;https://speakerdeck.com/fransrosen/live-hacking-like-a-mvh-a-walkthrough-on-methodology-and-strategies-to-win-big&quot;&gt;presentation&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Some of the top Security Researchers and Security Engineers that included &lt;a href=&quot;https://twitter.com/fin1te&quot;&gt;Jack&lt;/a&gt;&lt;a href=&quot;https://twitter.com/fin1te&quot;&gt;Whitton&lt;/a&gt;, &lt;a href=&quot;https://www.linkedin.com/in/maciej-szaw%C5%82owski-90b18951&quot;&gt;Maciej Szawłowsk&lt;/a&gt;, &lt;a href=&quot;https://twitter.com/securityyasin&quot;&gt;Yasin Soliman&lt;/a&gt;, Richard Neal, &lt;a href=&quot;https://twitter.com/hivarekarpranav&quot;&gt;Pranav Hivarekar&lt;/a&gt;, &lt;a href=&quot;https://twitter.com/whhackersbr&quot;&gt;João Lucas Melo Brasio&lt;/a&gt;, Mykola Babii, and &lt;a href=&quot;https://www.linkedin.com/in/mjezierny/&quot;&gt;Michael Jezierny&lt;/a&gt; also shared tips like chaining vulnerabilities to increase the impact and also gave some guidelines to pentest android application. The content of the talks was quite interesting, informative and gave a broad overview of the entire bug bounty process.&lt;/p&gt;
&lt;p&gt;Top 4 CTF Winners, &lt;a href=&quot;https://twitter.com/kishanbagaria&quot;&gt;Kishan Bagaria&lt;/a&gt;, &lt;a href=&quot;https://www.linkedin.com/in/homing-tay-538baa58&quot;&gt;HoMing Tay&lt;/a&gt;, &lt;a href=&quot;https://twitter.com/rahulkankrale&quot;&gt;Rahul Kankrale&lt;/a&gt; and Sachin Thakur gave presentations on approaches they used to find the hidden flags across both the platforms. I recommend checking out the writeup of BountyCon flags by my friend, &lt;a href=&quot;https://twitter.com/kishanbagaria&quot;&gt;Kishan&lt;/a&gt;, here is a link to his &lt;a href=&quot;https://kishanbagaria.com/bountycon/&quot;&gt;writeup&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;The long first day ended with a good dinner at Cook &amp;#x26; Brew at The Westin Hotel.&lt;/p&gt;
&lt;h2 id=&quot;second-day-of-bountycon&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#second-day-of-bountycon&quot; aria-label=&quot;second day of bountycon permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Second Day of BountyCon&lt;/h2&gt;
&lt;p&gt;      On the second day of BountyCon, Facebook kicked off with a live hacking event where researchers were challenged to report security bugs across both Facebook and Google. On that day, researchers from various APAC regions and few top researchers from Hackerone had submitted 40 bugs in total and Facebook awarded over $120k for valid submissions. The top three researchers with maximum points were &lt;a href=&quot;https://twitter.com/xdzmitry&quot;&gt;Dzmitry Lukyanenka&lt;/a&gt;, &lt;a href=&quot;https://twitter.com/infosec_au&quot;&gt;Shubham Shah&lt;/a&gt; and &lt;a href=&quot;https://twitter.com/Im_AnbuSelvam&quot;&gt;Anbu Selvam Mercy&lt;/a&gt;. After the award ceremony, the event was wrapped up with an amazing dinner at Nude Grills and a few drinks.&lt;/p&gt;
&lt;p&gt;Overall it was a worthy learning experience and I would like to thank &lt;strong&gt;Facebook&lt;/strong&gt; and &lt;strong&gt;Google&lt;/strong&gt; for their effort in organizing this event.&lt;/p&gt;
&lt;p&gt;Here are some of the photos that we took in Singapore and BountyCon:&lt;/p&gt;
&lt;div style=&quot;text-align:center;margin:50px&quot;&gt;
  &lt;img src=&quot;/images/2019/12/bountycon_1.png&quot; style=&quot;box-shadow: 1px 1px 10px 1px #222; width: 700px; height: auto;&quot;&gt;
  &lt;div style=&quot;text-align:center;margin-top:5px;&quot;&gt;
  	Picture Courtesy: &lt;a href=&quot;https://twitter.com/rraahhuullk&quot;&gt;@rraahhuullk&lt;/a&gt;
  &lt;/div&gt;
&lt;/div&gt;
&lt;div style=&quot;text-align:center;margin:50px&quot;&gt;
  &lt;img src=&quot;/images/2019/12/bountycon_2.png&quot; style=&quot;box-shadow: 1px 1px 10px 1px #222; width: 700px; height: auto;&quot;&gt;
  &lt;div style=&quot;text-align:center;margin-top:5px;&quot;&gt;
  	Picture Courtesy: &lt;a href=&quot;https://twitter.com/GoogleVRP&quot;&gt;@GoogleVRP&lt;/a&gt;
  &lt;/div&gt;
&lt;/div&gt;
&lt;div style=&quot;text-align:center;margin:50px&quot;&gt;
  &lt;img src=&quot;/images/2019/12/bountycon_3.png&quot; style=&quot;box-shadow: 1px 1px 10px 1px #222; width: 700px; height: auto;&quot;&gt;
  &lt;div style=&quot;text-align:center;margin-top:5px;&quot;&gt;
  	Picture Courtesy: &lt;a href=&quot;https://twitter.com/ajdumanhug&quot;&gt;@ajdumanhug&lt;/a&gt;
  &lt;/div&gt;
&lt;/div&gt;
&lt;div style=&quot;text-align:center;margin:50px&quot;&gt;
  &lt;img src=&quot;/images/2019/12/bountycon_4.png&quot; style=&quot;box-shadow: 1px 1px 10px 1px #222; width: 700px; height: auto;&quot;&gt;
  &lt;div style=&quot;text-align:center;margin-top:5px;&quot;&gt;
  	Picture Courtesy: &lt;a href=&quot;https://twitter.com/InfoSecJon&quot;&gt;@InfoSecJon&lt;/a&gt;
  &lt;/div&gt;
&lt;/div&gt;</content:encoded><author>Varun PK</author></item><item><title><![CDATA[Wingify towards Docker and Kubernetes]]></title><description><![CDATA[Introduction: At Wingify, we follow microservices based architecture to leverage it's great scalability benefits. We have a lot of…]]></description><link>https://engineering.wingify.com//posts/wingify-towards-docker-kubernetes/</link><guid isPermaLink="false">https://engineering.wingify.com//posts/wingify-towards-docker-kubernetes/</guid><pubDate>Mon, 02 Dec 2019 18:30:00 GMT</pubDate><content:encoded>&lt;h2 id=&quot;introduction&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#introduction&quot; aria-label=&quot;introduction permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Introduction:&lt;/h2&gt;
&lt;p&gt;At Wingify, we follow microservices based architecture to leverage it&apos;s great scalability benefits. We have a lot of microservices along with a complex networking setup among them. Currently, all the services are deployed on virtual machines on the cloud. We wanted to improve this architecture set up and use the latest technologies available. To avoid all this we are moving towards &lt;a href=&quot;https://www.docker.com/&quot;&gt;Docker&lt;/a&gt; and &lt;a href=&quot;https://kubernetes.io/&quot;&gt;Kubernetes&lt;/a&gt; world!&lt;/p&gt;
&lt;h2 id=&quot;why-docker-and-kubernetes&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#why-docker-and-kubernetes&quot; aria-label=&quot;why docker and kubernetes permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Why Docker and Kubernetes?&lt;/h2&gt;
&lt;p&gt;The problems we are facing with the existing infrastructure:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Standardization and consistency&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;There is always an issue of a consistent/standard environment between production and development.&lt;/li&gt;
&lt;li&gt;Most of our time goes in creating a production like environment during development to rollout bugfixes or create any new features.&lt;/li&gt;
&lt;li&gt;With the new architecture, now we are more equipped to efficiently analyze and fix bugs within the application. It has drastically reduced the time wasted on &quot;local environment issues&quot; and in turn increased time available to fix actual issues and new feature development.&lt;/li&gt;
&lt;li&gt;Docker provides a repeatable production like development environment and eliminates the &quot;it works on my machine&quot; problem once and for all.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Local development&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;It&apos;s not easy to develop and debug a service locally and connect it to the rest of the services running on local environment.&lt;/li&gt;
&lt;li&gt;Constantly redeploying on local environment to test the changes is time consuming.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Auto scaling&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;The load on the services can never be the same all the time.&lt;/li&gt;
&lt;li&gt;Keeping the services up for the whole year just to handle the peak load which comes on a few days of the festive season is a waste of resources.&lt;/li&gt;
&lt;li&gt;Regularly benchmarking the load to scale the services with time is not an optimal way.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Auto service restarts&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;If the service goes in a hanged state or terminates due to memory leak, resource polling deadlocks, file descriptors issues or anything else, how it is going to restart automatically?&lt;/li&gt;
&lt;li&gt;Although there are different tools available for multiple languages but setting them up for each service on every server is not ideal.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Load balancing&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Adding and maintaining an extra entry point like nginx just to provide load balancing is an overhead.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;We are trying to tackle all these problems in an automated and easy way using Docker, Kubernetes and few open-source tools.&lt;/p&gt;
&lt;h2 id=&quot;our-journey&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#our-journey&quot; aria-label=&quot;our journey permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Our Journey&lt;/h2&gt;
&lt;p&gt;We started out from scratch. Read a lot of articles, documentation, tutorials and went through some existing testing and production level open source projects. Some of them solved a few of our problems, for some we found our own way and the rest of them are yet to be solved!&lt;/p&gt;
&lt;p&gt;Below is a brief idea of all the ideas and approaches we found to solve many of our problems, the final approach we took and comparison between them:&lt;/p&gt;
&lt;h3 id=&quot;common-repository-approach&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#common-repository-approach&quot; aria-label=&quot;common repository approach permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Common repository approach&lt;/h3&gt;
&lt;p&gt;Every dockerized service starts with a Dockerfile. But the initial issue is where to put them? There will be a lot of Dockerfiles combining all the services.&lt;/p&gt;
&lt;p&gt;There are two ways to put them:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Each service contains it&apos;s own dockerfile&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;All the repositories have separate dockerfiles specific to that service.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;A common repository of all dockerfiles&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;All the dockerfiles of every service are added to a common repository.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Below is the comparison among them:&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;/th&gt;
&lt;th&gt;Common Repository&lt;/th&gt;
&lt;th&gt;Separate Repositories&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;1.&lt;/td&gt;
&lt;td&gt;Need a proper structure to distinguish dockerfiles&lt;/td&gt;
&lt;td&gt;Separation of concerns&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2.&lt;/td&gt;
&lt;td&gt;Common Linters and Formatters&lt;/td&gt;
&lt;td&gt;Each repo has to add the same linter and formatter repetitively&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;3.&lt;/td&gt;
&lt;td&gt;Common githooks to regulate commit messages, pre-commit, pre-push, etc. tasks&lt;/td&gt;
&lt;td&gt;Same githooks in every service&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;4.&lt;/td&gt;
&lt;td&gt;Can contain reusable Docker base-files&lt;/td&gt;
&lt;td&gt;No central place to put reusable dockerfiles&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;5.&lt;/td&gt;
&lt;td&gt;A central place for DevOps to manage the permissions of all dockerfiles&lt;/td&gt;
&lt;td&gt;Very difficult to manage dockerfiles individually by Devops&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;You may be thinking about the ease of local development using volumes in the separate repository approach. We will get back to that later and show how easy it will be in a common repository approach.&lt;/p&gt;
&lt;p&gt;So, the common repository approach is a clear winner among them. But what about its folder structure? We gave it plenty of thoughts and finally, this is our Docker repository folder structure:&lt;/p&gt;
&lt;div style=&quot;text-align:center;margin:50px&quot;&gt;
  &lt;img src=&quot;/images/2019/11/docker_common_repo_structure.png&quot; style=&quot;height:500px;box-shadow: 2px 2px 10px 1px #222&quot;&gt;
&lt;/div&gt;
  
The folder structure is broadly categorized into 2 parts:
  * **Services directory:**
    - It contains the directories of all the services each having their own &apos;dockerfile&apos; and &apos;.dockerignore&apos; files.
    - Internally they inherit from the base images.
  * **Reusable base images directory:**
    - It contains all the reusable dockerfiles that are categorized broadly according to their respective languages like node, PHP, etc.
    - Dockerfiles containing only the languages are placed in the &apos;base&apos; folder.
    - All the extensions, plugins, tools, etc. of above base images are placed in the same directory, like &apos;thrift&apos; for node.js.
    - Versions are important as multiple services may use different versions of the same plugins. Like, one service may require MySQL 5.6 and the other one may require 5.7. So, each directory is further nested on the basis of versions.
&lt;p&gt;Using this folder structure has multiple advantages:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;All the services and reusable base dockerfiles are segregated.&lt;/li&gt;
&lt;li&gt;It becomes very clear that which dockerfile is for what service, language or plugin.&lt;/li&gt;
&lt;li&gt;Multiple versions can be easily served.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Next, we will discuss the reusable base images concept.&lt;/p&gt;
&lt;h3 id=&quot;dockerfile-linter&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#dockerfile-linter&quot; aria-label=&quot;dockerfile linter permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Dockerfile Linter&lt;/h3&gt;
&lt;p&gt;There are many opensource linters available for Docker files. We found &lt;a href=&quot;https://github.com/hadolint/hadolint&quot;&gt;hadolint&lt;/a&gt; meets most of the standards that Docker recommends. So, to lint all the files we just have to issue a simple command which can be easily integrated into the githooks.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;bash&quot;&gt;&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;hadolint **/*Dockerfile&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id=&quot;dockerfile-formatter&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#dockerfile-formatter&quot; aria-label=&quot;dockerfile formatter permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Dockerfile Formatter&lt;/h3&gt;
&lt;p&gt;We searched and tried multiple formatters, but none of them worked as per our requirements. We found &lt;a href=&quot;https://github.com/jessfraz/dockfmt&quot;&gt;dockfmt&lt;/a&gt; was close to our requirements but it also has some issues like it removes all the comments from dockerfile. So, we are yet to find a better formatter.&lt;/p&gt;
&lt;h3 id=&quot;reusable-docker-base-images&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#reusable-docker-base-images&quot; aria-label=&quot;reusable docker base images permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Reusable Docker base images&lt;/h3&gt;
&lt;p&gt;It&apos;s very common that a lot of services need the same OS, tools, libraries, etc like all the node services may need Debian stretch OS with node.js and yarn installed of a particular version. So, instead of adding them in all such Docker files, we can create some reusable, pluggable Docker base images.&lt;/p&gt;
&lt;p&gt;Below is the example of a Node.js service which requires:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Debian stretch OS&lt;/li&gt;
&lt;li&gt;Node.js version 9.11.2 + Yarn&lt;/li&gt;
&lt;li&gt;Apache thrift version 0.10.0&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Node.js base image:&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;dockerfile&quot;&gt;&lt;pre class=&quot;language-dockerfile&quot;&gt;&lt;code class=&quot;language-dockerfile&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;FROM&lt;/span&gt; debian&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;stretch&lt;span class=&quot;token punctuation&quot;&gt;-&lt;/span&gt;slim

&lt;span class=&quot;token comment&quot;&gt;# Install Node 9.11.x&lt;/span&gt;
&lt;span class=&quot;token comment&quot;&gt;# Defining builDeps as an argument in alphabetical order for better readability and avoiding duplicacy.&lt;/span&gt;
&lt;span class=&quot;token keyword&quot;&gt;ARG&lt;/span&gt; buildDeps=&quot; \  
  curl \
  g++ \
  make&quot;

&lt;span class=&quot;token comment&quot;&gt;# It causes a pipeline to produce a failure return code if any command results in an error.&lt;/span&gt;
&lt;span class=&quot;token keyword&quot;&gt;SHELL&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;/bin/bash&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;-o&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;pipefail&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;-c&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt; 
&lt;span class=&quot;token comment&quot;&gt;# hadolint ignore=DL3008,DL3015&lt;/span&gt;
&lt;span class=&quot;token keyword&quot;&gt;RUN&lt;/span&gt; apt&lt;span class=&quot;token punctuation&quot;&gt;-&lt;/span&gt;get update &amp;amp;&amp;amp; apt&lt;span class=&quot;token punctuation&quot;&gt;-&lt;/span&gt;get install &lt;span class=&quot;token punctuation&quot;&gt;-&lt;/span&gt;y —&lt;span class=&quot;token punctuation&quot;&gt;-&lt;/span&gt; no&lt;span class=&quot;token punctuation&quot;&gt;-&lt;/span&gt;install&lt;span class=&quot;token punctuation&quot;&gt;-&lt;/span&gt;recommends $buildDeps \
  &lt;span class=&quot;token comment&quot;&gt;# Use --no-install-recommends to avoid installing packages that aren&apos;t technically dependencies but are recommended to be installed alongside packages.&lt;/span&gt;
  &amp;amp;&amp;amp; curl &lt;span class=&quot;token punctuation&quot;&gt;-&lt;/span&gt;sL https&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;//deb.nodesource.com/setup_9.x &lt;span class=&quot;token punctuation&quot;&gt;|&lt;/span&gt; bash &lt;span class=&quot;token punctuation&quot;&gt;-&lt;/span&gt; &amp;amp;&amp;amp; apt&lt;span class=&quot;token punctuation&quot;&gt;-&lt;/span&gt;get install &lt;span class=&quot;token punctuation&quot;&gt;-&lt;/span&gt;y nodejs=9.11.* \
  &amp;amp;&amp;amp; npm i &lt;span class=&quot;token punctuation&quot;&gt;-&lt;/span&gt;g yarn@1.19.1 \
  &amp;amp;&amp;amp; apt&lt;span class=&quot;token punctuation&quot;&gt;-&lt;/span&gt;get clean \ 
  &lt;span class=&quot;token comment&quot;&gt;# Remove apt-cache to make the image smaller.&lt;/span&gt;
  &amp;amp;&amp;amp; rm &lt;span class=&quot;token punctuation&quot;&gt;-&lt;/span&gt;rf /var/lib/apt/lists/* &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Let&apos;s consider we build this with name &apos;wingify-node-9.11.2:1.0.5&apos;. Where &apos;wingify-node-9.11.2&apos; represents the docker image type and &apos;1.0.5&apos; is the image tag.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Apache thrift base image:&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;dockerfile&quot;&gt;&lt;pre class=&quot;language-dockerfile&quot;&gt;&lt;code class=&quot;language-dockerfile&quot;&gt;&lt;span class=&quot;token comment&quot;&gt;# Default base image&lt;/span&gt;
&lt;span class=&quot;token keyword&quot;&gt;ARG&lt;/span&gt; BASE=wingify&lt;span class=&quot;token punctuation&quot;&gt;-&lt;/span&gt;node&lt;span class=&quot;token punctuation&quot;&gt;-&lt;/span&gt;9.11.2&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;1.0.5

&lt;span class=&quot;token comment&quot;&gt;# hadolint ignore=DL3006&lt;/span&gt;
&lt;span class=&quot;token keyword&quot;&gt;FROM&lt;/span&gt; $&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;BASE&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;token comment&quot;&gt;# Declaring argument to be used in dockerfile to make it reusable.&lt;/span&gt;
&lt;span class=&quot;token keyword&quot;&gt;ARG&lt;/span&gt; THRIFT_VERSION=0.10.0 

&lt;span class=&quot;token comment&quot;&gt;# Referred from https://github.com/ahawkins/docker-thrift/blob/master/0.10/Dockerfile&lt;/span&gt;
&lt;span class=&quot;token comment&quot;&gt;# hadolint ignore=DL3008,DL3015&lt;/span&gt;
&lt;span class=&quot;token keyword&quot;&gt;RUN&lt;/span&gt; apt&lt;span class=&quot;token punctuation&quot;&gt;-&lt;/span&gt;get update \
    &amp;amp;&amp;amp; curl &lt;span class=&quot;token punctuation&quot;&gt;-&lt;/span&gt;sSL &lt;span class=&quot;token string&quot;&gt;&quot;http://apache.mirrors.spacedump.net/thrift/$THRIFT_VERSION/thrift-$THRIFT_VERSION.tar.gz&quot;&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;-&lt;/span&gt;o thrift.tar.gz \
    &amp;amp;&amp;amp; mkdir &lt;span class=&quot;token punctuation&quot;&gt;-&lt;/span&gt;p /usr/src/thrift \
    &amp;amp;&amp;amp; tar zxf thrift.tar.gz &lt;span class=&quot;token punctuation&quot;&gt;-&lt;/span&gt;C /usr/src/thrift &lt;span class=&quot;token punctuation&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;-&lt;/span&gt;strip&lt;span class=&quot;token punctuation&quot;&gt;-&lt;/span&gt;components=1 \
    &amp;amp;&amp;amp; rm thrift.tar.gz \
    &lt;span class=&quot;token comment&quot;&gt;# Clean the apt cache on.&lt;/span&gt;
    &amp;amp;&amp;amp; apt&lt;span class=&quot;token punctuation&quot;&gt;-&lt;/span&gt;get clean \
    &lt;span class=&quot;token comment&quot;&gt;# Remove apt cache to make the image smaller.&lt;/span&gt;
    &amp;amp;&amp;amp; rm &lt;span class=&quot;token punctuation&quot;&gt;-&lt;/span&gt;rf /var/lib/apt/lists/* 

&lt;span class=&quot;token keyword&quot;&gt;WORKDIR&lt;/span&gt; /usr/src/thrift
&lt;span class=&quot;token keyword&quot;&gt;RUN&lt;/span&gt; ./configure  &lt;span class=&quot;token punctuation&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;-&lt;/span&gt;without&lt;span class=&quot;token punctuation&quot;&gt;-&lt;/span&gt;python &lt;span class=&quot;token punctuation&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;-&lt;/span&gt;without&lt;span class=&quot;token punctuation&quot;&gt;-&lt;/span&gt;cpp \
    &amp;amp;&amp;amp; make \
    &amp;amp;&amp;amp; make install \
    &lt;span class=&quot;token comment&quot;&gt;# Removing the souce code after installation.&lt;/span&gt;
    &amp;amp;&amp;amp; rm &lt;span class=&quot;token punctuation&quot;&gt;-&lt;/span&gt;rf /usr/src/thrift&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Here, by default, we are using the above-created node&apos;s Docker image. But we can pass any other environment&apos;s base image as an argument to install thrift there. So, it&apos;s pluggable everywhere.&lt;/p&gt;
&lt;p&gt;Finally, the actual service can use above as a base image for it&apos;s dockerfile.&lt;/p&gt;
&lt;h3 id=&quot;access-private-repository-dependencies&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#access-private-repository-dependencies&quot; aria-label=&quot;access private repository dependencies permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Access private repository dependencies&lt;/h3&gt;
&lt;p&gt;We have multiple services that have some dependencies which are fetched from private repositories. Like in our node service, we have one of our dependencies listed in package.json as:&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;js&quot;&gt;&lt;pre class=&quot;language-js&quot;&gt;&lt;code class=&quot;language-js&quot;&gt;&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;token string&quot;&gt;&quot;my-dependency&quot;&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;git+ssh://git@stash/link/of/repo:v1.0.0&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Normally we need ssh keys to fetch these dependencies, but a Docker container won&apos;t be having it. Below are the few ways of solving this:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Option 1:&lt;/strong&gt; Install dependencies externally (local or Jenkins) and Docker will copy them directly.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Advantages:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;No SSH key required by docker.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Disadvantages:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Dependencies installation won&apos;t be cached automatically as it&apos;s happening outside the docker.&lt;/li&gt;
&lt;li&gt;Some modules like bcrypt have binding issues if not installed directly on the same machine.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Option 2:&lt;/strong&gt; Pass SSH key as an argument in dockerfile or copy it from system to the working directory and let dockerfile copy it. Docker container can then install dependencies.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Advantages:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Caching is achieved.&lt;/li&gt;
&lt;li&gt;No module binding issues.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Disadvantages:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;SSH key would be exposed in a Docker container if not handled correctly.&lt;/li&gt;
&lt;li&gt;Single SSH keys will have security issues and different ones will be difficult to manage.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Option 3:&lt;/strong&gt; Host the private repos globally like our own private npm (in case of node.js) and add it&apos;s host entry on the system. Docker container can then install dependencies by fetching from our private npm.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Advantages:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Caching is achieved.&lt;/li&gt;
&lt;li&gt;No SSH key required.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Disadvantages:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;One time setup of hosting.&lt;/li&gt;
&lt;li&gt;We need to publish the private repos each time we create a new tag.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Way 3 proved to be much better in our case and we moved ahead with it.&lt;/p&gt;
&lt;h3 id=&quot;service-dockerfile&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#service-dockerfile&quot; aria-label=&quot;service dockerfile permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Service Dockerfile&lt;/h3&gt;
&lt;p&gt;The final dockerfile of the service implementing all above will be like:&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;dockerfile&quot;&gt;&lt;pre class=&quot;language-dockerfile&quot;&gt;&lt;code class=&quot;language-dockerfile&quot;&gt;&lt;span class=&quot;token keyword&quot;&gt;ARG&lt;/span&gt; BASE=wingify&lt;span class=&quot;token punctuation&quot;&gt;-&lt;/span&gt;node&lt;span class=&quot;token punctuation&quot;&gt;-&lt;/span&gt;9.11.2&lt;span class=&quot;token punctuation&quot;&gt;-&lt;/span&gt;thrift&lt;span class=&quot;token punctuation&quot;&gt;-&lt;/span&gt;0.10.0&lt;span class=&quot;token punctuation&quot;&gt;:&lt;/span&gt;1.0.5

&lt;span class=&quot;token comment&quot;&gt;# hadolint ignore=DL3006&lt;/span&gt;
&lt;span class=&quot;token keyword&quot;&gt;FROM&lt;/span&gt; $&lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;BASE&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;token keyword&quot;&gt;RUN&lt;/span&gt; mkdir &lt;span class=&quot;token punctuation&quot;&gt;-&lt;/span&gt;p /opt/my&lt;span class=&quot;token punctuation&quot;&gt;-&lt;/span&gt;service/
&lt;span class=&quot;token keyword&quot;&gt;WORKDIR&lt;/span&gt; /opt/my&lt;span class=&quot;token punctuation&quot;&gt;-&lt;/span&gt;service

&lt;span class=&quot;token comment&quot;&gt;# Dependency installation separately for caching&lt;/span&gt;
&lt;span class=&quot;token keyword&quot;&gt;COPY&lt;/span&gt; ./package.json ./yarn.lock ./.npmrc ./
&lt;span class=&quot;token keyword&quot;&gt;RUN&lt;/span&gt; yarn install

&lt;span class=&quot;token keyword&quot;&gt;COPY&lt;/span&gt; . .

&lt;span class=&quot;token keyword&quot;&gt;CMD&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&quot;yarn&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&quot;start:docker&quot;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Here &apos;.npmrc&apos; contains the registry which points to our own private npm. We are copying it so that Docker container can fetch our private repos from it.&lt;/p&gt;
&lt;h3 id=&quot;caching&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#caching&quot; aria-label=&quot;caching permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Caching&lt;/h3&gt;
&lt;p&gt;Every time we change our code, we don&apos;t want Docker container to install dependencies again (unless changed). For this we divided the &apos;COPY&apos; step in above dockerfile into 2 parts:&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;dockerfile&quot;&gt;&lt;pre class=&quot;language-dockerfile&quot;&gt;&lt;code class=&quot;language-dockerfile&quot;&gt;&lt;span class=&quot;token comment&quot;&gt;# Here we are copying the package.json and yarn.lock files and doing dependencies installation.&lt;/span&gt;
&lt;span class=&quot;token comment&quot;&gt;# This step will always be cached in Docker unless there is change in any of these files&lt;/span&gt;
&lt;span class=&quot;token keyword&quot;&gt;COPY&lt;/span&gt; ./package.json ./yarn.lock ./.npmrc ./
&lt;span class=&quot;token keyword&quot;&gt;RUN&lt;/span&gt; yarn install

&lt;span class=&quot;token keyword&quot;&gt;COPY&lt;/span&gt; . .&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Doing all this will reduce the Docker image build time to just a few seconds!&lt;/p&gt;
&lt;h3 id=&quot;auto-tagging-and-rollback&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#auto-tagging-and-rollback&quot; aria-label=&quot;auto tagging and rollback permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Auto-tagging and rollback&lt;/h3&gt;
&lt;p&gt;Tagging is important for any rollback on productions. Fortunately, it&apos;s easy to do in docker. While building and pushing an image on Kubernetes we can specify the tag version with a colon. We can then use this tag in Kubernetes YAML file to deploy on the pods.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;bash&quot;&gt;&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;docker build -t org/my-service &lt;span class=&quot;token builtin class-name&quot;&gt;.&lt;/span&gt;
docker build -t org/my-service:1.2.3 &lt;span class=&quot;token builtin class-name&quot;&gt;.&lt;/span&gt;

docker push org/my-service &lt;span class=&quot;token builtin class-name&quot;&gt;.&lt;/span&gt;
docker push org/my-service:1.2.3 &lt;span class=&quot;token builtin class-name&quot;&gt;.&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This works fine, but it still requires a new tag every time we are building a new version of the image. This can be passed manually to a job. But what if there is auto-tagging?&lt;/p&gt;
&lt;p&gt;First, let&apos;s find out the latest tag. Here is the command to find the latest image tag from GCP:&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;bash&quot;&gt;&lt;pre class=&quot;language-bash&quot;&gt;&lt;code class=&quot;language-bash&quot;&gt;gcloud container images list-tags image-name --sort-by&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;~TAGS --limit&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;1&lt;/span&gt; --format&lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt;json&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;We can use this in a custom node script which will return the new incremented version. We just have to pass the image name and the release type i.e. major/minor/patch to it.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;js&quot;&gt;&lt;pre class=&quot;language-js&quot;&gt;&lt;code class=&quot;language-js&quot;&gt;&lt;span class=&quot;token comment&quot;&gt;// Usage: node file-name image-name patch&lt;/span&gt;
&lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; exec &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;require&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&apos;child_process&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;execSync&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;token constant&quot;&gt;TAG_TYPES&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;token constant&quot;&gt;PATCH&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&apos;patch&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;token constant&quot;&gt;MINOR&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&apos;minor&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;token constant&quot;&gt;MAJOR&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&apos;major&apos;&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;token comment&quot;&gt;// Referenced from https://semver.org/&lt;/span&gt;
&lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;token constant&quot;&gt;VERSONING_REGEX&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token regex&quot;&gt;/^(v)?(0|[1-9]\d*)\.(0|[1-9]\d*)\.(0|[1-9]\d*)(?:-((?:0|[1-9]\d*|\d*[a-zA-Z-][0-9a-zA-Z-]*)(?:\.(?:0|[1-9]\d*|\d*[a-zA-Z-][0-9a-zA-Z-]*))*))?(?:\+([0-9a-zA-Z-]+(?:\.[0-9a-zA-Z-]+)*))?$/m&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;token keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;Autotag&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;token function&quot;&gt;constructor&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;imageName &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&apos;&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; tagType &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token constant&quot;&gt;TAG_TYPES&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token constant&quot;&gt;PATCH&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;_validateParams&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;imageName&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; tagType&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;imageName &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; imageName&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;tagType &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; tagType&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;toLowerCase&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;

  &lt;span class=&quot;token comment&quot;&gt;// Private functions&lt;/span&gt;
  &lt;span class=&quot;token function&quot;&gt;_validateParams&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token parameter&quot;&gt;imageName&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; tagType&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;!&lt;/span&gt;imageName&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;token keyword&quot;&gt;throw&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;Error&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&apos;Image name is mandatory.&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;!&lt;/span&gt;Object&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;values&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token constant&quot;&gt;TAG_TYPES&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;includes&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;tagType&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;token keyword&quot;&gt;throw&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;Error&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;
        &lt;span class=&quot;token template-string&quot;&gt;&lt;span class=&quot;token template-punctuation string&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;Invalid tag type specified. Possible values are &lt;/span&gt;&lt;span class=&quot;token interpolation&quot;&gt;&lt;span class=&quot;token interpolation-punctuation punctuation&quot;&gt;${&lt;/span&gt;Object&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;values&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;
          &lt;span class=&quot;token constant&quot;&gt;TAG_TYPES&lt;/span&gt;
        &lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;join&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&apos;, &apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token interpolation-punctuation punctuation&quot;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token template-punctuation string&quot;&gt;`&lt;/span&gt;&lt;/span&gt;
      &lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;

  &lt;span class=&quot;token function&quot;&gt;_fetchTagsFromGCP&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;token function&quot;&gt;exec&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;
      &lt;span class=&quot;token template-string&quot;&gt;&lt;span class=&quot;token template-punctuation string&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;gcloud container images list-tags &lt;/span&gt;&lt;span class=&quot;token interpolation&quot;&gt;&lt;span class=&quot;token interpolation-punctuation punctuation&quot;&gt;${&lt;/span&gt;
        &lt;span class=&quot;token keyword&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;imageName
      &lt;span class=&quot;token interpolation-punctuation punctuation&quot;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt; --sort-by=~TAGS --limit=1 --format=json&lt;/span&gt;&lt;span class=&quot;token template-punctuation string&quot;&gt;`&lt;/span&gt;&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;toString&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;

  &lt;span class=&quot;token comment&quot;&gt;// Public functions&lt;/span&gt;
  &lt;span class=&quot;token function&quot;&gt;increment&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; stringifiedTags &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;_fetchTagsFromGCP&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;

    &lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;stringifiedTags&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;token keyword&quot;&gt;try&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt; tags &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token constant&quot;&gt;JSON&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;parse&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;stringifiedTags&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;

        &lt;span class=&quot;token keyword&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;let&lt;/span&gt; i &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; tags&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;length &lt;span class=&quot;token operator&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt; i &lt;span class=&quot;token operator&quot;&gt;&gt;=&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt; i&lt;span class=&quot;token operator&quot;&gt;--&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
          &lt;span class=&quot;token keyword&quot;&gt;const&lt;/span&gt; tag &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; tags&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;i&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
          &lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token constant&quot;&gt;VERSONING_REGEX&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;test&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;tag&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;token keyword&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;
              prefix &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&apos;&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
              major &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
              minor &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt;
              patch &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;0&lt;/span&gt;
            &lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token constant&quot;&gt;VERSONING_REGEX&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;exec&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;tag&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;slice&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;

            &lt;span class=&quot;token keyword&quot;&gt;switch&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;tagType&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
              &lt;span class=&quot;token keyword&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;token constant&quot;&gt;TAG_TYPES&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token constant&quot;&gt;PATCH&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt;
                patch&lt;span class=&quot;token operator&quot;&gt;++&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
                &lt;span class=&quot;token keyword&quot;&gt;break&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
              &lt;span class=&quot;token keyword&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;token constant&quot;&gt;TAG_TYPES&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token constant&quot;&gt;MINOR&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt;
                patch &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
                minor&lt;span class=&quot;token operator&quot;&gt;++&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
                &lt;span class=&quot;token keyword&quot;&gt;break&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
              &lt;span class=&quot;token keyword&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;token constant&quot;&gt;TAG_TYPES&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token constant&quot;&gt;MAJOR&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt;
                patch &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
                minor &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
                major&lt;span class=&quot;token operator&quot;&gt;++&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
                &lt;span class=&quot;token keyword&quot;&gt;break&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
            &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;

            &lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;token template-string&quot;&gt;&lt;span class=&quot;token template-punctuation string&quot;&gt;`&lt;/span&gt;&lt;span class=&quot;token interpolation&quot;&gt;&lt;span class=&quot;token interpolation-punctuation punctuation&quot;&gt;${&lt;/span&gt;prefix&lt;span class=&quot;token interpolation-punctuation punctuation&quot;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token interpolation&quot;&gt;&lt;span class=&quot;token interpolation-punctuation punctuation&quot;&gt;${&lt;/span&gt;major&lt;span class=&quot;token interpolation-punctuation punctuation&quot;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token interpolation&quot;&gt;&lt;span class=&quot;token interpolation-punctuation punctuation&quot;&gt;${&lt;/span&gt;minor&lt;span class=&quot;token interpolation-punctuation punctuation&quot;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token interpolation&quot;&gt;&lt;span class=&quot;token interpolation-punctuation punctuation&quot;&gt;${&lt;/span&gt;patch&lt;span class=&quot;token interpolation-punctuation punctuation&quot;&gt;}&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token template-punctuation string&quot;&gt;`&lt;/span&gt;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
          &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
      &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;catch&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;e&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;token comment&quot;&gt;// Return default tag if none already exists.&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;token string&quot;&gt;&apos;0.0.1&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;token keyword&quot;&gt;try&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
  console&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;Autotag&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;...&lt;/span&gt;process&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;argv&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;slice&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;increment&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;catch&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;e&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
  console&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;e&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;toString&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Thanks &lt;a href=&quot;https://twitter.com/gauravmuk&quot;&gt;Gaurav Nanda&lt;/a&gt; for the above script.&lt;/p&gt;
&lt;h3 id=&quot;production-staged-rollout&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#production-staged-rollout&quot; aria-label=&quot;production staged rollout permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Production staged rollout&lt;/h3&gt;
&lt;p&gt;Our ultimate goal is to migrate everything from the existing setup to GCP with Docker and Kubernetes. Migrating the whole system in one go on production is time-consuming as well as risky.&lt;/p&gt;
&lt;p&gt;To avoid this we are targeting individual services one by one. Initially, a service will run on GCP as well as on the existing server with their databases pointing to the old setup. We will open them for a few accounts at the beginning. The rest of the accounts will work as before. This will ensure that if any issue comes in a new setup, we can easily switch back to the old setup while fixing it.&lt;/p&gt;
&lt;div style=&quot;text-align:center;margin:50px;&quot;&gt;
  &lt;img src=&quot;/images/2019/11/docker_stage_rollout.png&quot; style=&quot;box-shadow: 2px 2px 10px 1px #aaa&quot;&gt;
&lt;/div&gt;
&lt;h2 id=&quot;next-steps&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#next-steps&quot; aria-label=&quot;next steps permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Next steps&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Integrate health check APIs with Kubernetes.&lt;/li&gt;
&lt;li&gt;Development environment using &lt;a href=&quot;http://telepresence.io/&quot;&gt;telepresence&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Add service discovery tool like &lt;a href=&quot;https://www.consul.io/&quot;&gt;consul&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Add a vault system for secrets.&lt;/li&gt;
&lt;li&gt;Better logging.&lt;/li&gt;
&lt;li&gt;Integrate &lt;a href=&quot;https://helm.sh/&quot;&gt;helm&lt;/a&gt; to manage the Kubernetes cluster.&lt;/li&gt;
&lt;li&gt;Docker image size management.&lt;/li&gt;
&lt;li&gt;Add support for blue green deployments.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;We may be using some things differently that can be improved upon. There can be better tools that we are yet to explore. We are open to any suggestions that can help us in improving what we are already doing and what we will require in the future. This is just a start, we will try to improve in every iteration and solve new challenges.&lt;/p&gt;
&lt;p&gt;Thanks to &lt;a href=&quot;https://twitter.com/gauravmuk&quot;&gt;Gaurav Nanda&lt;/a&gt; for mentoring and guiding us for everything.&lt;/p&gt;
&lt;h2 id=&quot;references&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#references&quot; aria-label=&quot;references permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;References&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://docs.docker.com/get-started/&quot;&gt;https://docs.docker.com/get-started/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://kubernetes.io/docs/concepts/&quot;&gt;https://kubernetes.io/docs/concepts/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.udemy.com/course/docker-and-kubernetes-the-complete-guide/&quot;&gt;https://www.udemy.com/course/docker-and-kubernetes-the-complete-guide/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://runnable.com/blog/9-common-dockerfile-mistakes&quot;&gt;https://runnable.com/blog/9-common-dockerfile-mistakes&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/wsargent/docker-cheat-sheet&quot;&gt;https://github.com/wsargent/docker-cheat-sheet&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content:encoded><author>Punit Gupta, Kamal Sehrawat</author></item><item><title><![CDATA[JS13K Games 2K18]]></title><description><![CDATA[Introduction: Js13kGames is a JavaScript game development competition that is organized every year from 13th August to 13th September. What…]]></description><link>https://engineering.wingify.com//posts/js13k-game-development/</link><guid isPermaLink="false">https://engineering.wingify.com//posts/js13k-game-development/</guid><pubDate>Tue, 25 Sep 2018 18:30:00 GMT</pubDate><content:encoded>&lt;h2 id=&quot;introduction&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#introduction&quot; aria-label=&quot;introduction permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Introduction:&lt;/h2&gt;
&lt;p&gt;&lt;a href=&quot;http://js13kgames.com/&quot;&gt;Js13kGames&lt;/a&gt; is a JavaScript game development competition that is organized every year from 13th August to 13th September. What makes this one stand apart from other game dev competitions, is the game size limit of 13 kilobytes. Yes, Just 13KB for everything, including code, images, graphics, sounds! Moreover, a theme is decided every year and the game, ideally, should be based on that. This results in a lot of brainstorming and innovative ideas. For this year, the theme was &apos;&lt;strong&gt;offline&lt;/strong&gt;&apos;.&lt;/p&gt;
&lt;p&gt;The competition is organized by &lt;a href=&quot;https://twitter.com/end3r&quot;&gt;Andrzej Mazur&lt;/a&gt; who is also one of the judges. They play every submitted game at the end of the competition and give their reviews in terms of what went right &amp;#x26; in what directions improvements could be made. Needless to say, there are a lot of prizes like gadgets, t-shirts, and stickers to be won every year.&lt;/p&gt;
&lt;h2 id=&quot;preparations&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#preparations&quot; aria-label=&quot;preparations permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Preparations&lt;/h2&gt;
&lt;p&gt;JS13K competition is not new to folks at Wingify. A couple of us have prior experience of this. &lt;a href=&quot;https://twitter.com/chinchang457&quot;&gt;Kush&lt;/a&gt;, &lt;a href=&quot;https://twitter.com/gauravmuk&quot;&gt;Gaurav&lt;/a&gt; and &lt;a href=&quot;https://twitter.com/s0ftvar&quot;&gt;Varun&lt;/a&gt; had participated in previous JS13K events. Having experienced &amp;#x26; enjoyed the competition first hand, they felt compelled to inform the rest of us as well.&lt;/p&gt;
&lt;p&gt;After the first week since the beginning of the competition, we all met and the veterans of this competition introduced us to the rules &amp;#x26; theme, basic techniques related to game development, &amp;#x26; tools that might be handy along the way. We were a little short on time considering that we had to first come up with feasible concepts &amp;#x26; our primary experience being Frontend SPA development, creating these games was about to be unlike any code we professionally write. &lt;/p&gt;
&lt;h2 id=&quot;entries&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#entries&quot; aria-label=&quot;entries permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Entries&lt;/h2&gt;
&lt;h3 id=&quot;twisty-polyhedra&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#twisty-polyhedra&quot; aria-label=&quot;twisty polyhedra permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;a href=&quot;http://js13kgames.com/entries/twisty-polyhedra&quot;&gt;Twisty Polyhedra&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Author: &lt;a href=&quot;https://twitter.com/Aditya_r_m&quot;&gt;Aditya Mishra&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;The concept behind this one is simple, You will have access to Rubik&apos;s cube variants of different sizes &amp;#x26; shapes to solve. You&apos;re likely familiar with the standard size 3 Rubik&apos;s cube. But what you may not be aware of is that it&apos;s actually just one item from a huge family of puzzles with rich mathematical structures. This game was to be built so that it can at least support face turning Tetrahedra &amp;#x26; Octahedra apart from the standard cubes.&lt;/p&gt;
&lt;div style=&quot;text-align:center;&quot;&gt;
  &lt;img src=&quot;/images/2018/09/js13k_twisty_polyhedra.gif&quot; style=&quot;box-shadow: 2px 2px 10px 1px #aaa&quot;&gt;
&lt;/div&gt;
&lt;p&gt;Some of the fun challenges involved with this one were:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Composing &amp;#x26; rendering the shape&lt;/li&gt;
&lt;li&gt;Re-orienting &amp;#x26; twisting the puzzle according to cursor movements&lt;/li&gt;
&lt;li&gt;Animating the twists&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;There was a lot to learn from these challenges as it involved playing with vectors, coming up with algorithms to generate &amp;#x26; render the sliced shapes on a 2D canvas, to infer the desired action from simple input events etc.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://js13kgames.com/games/twisty-polyhedra/index.html&quot;&gt;demo&lt;/a&gt;
|
&lt;a href=&quot;https://github.com/aditya-r-m/twisty-polyhedra&quot;&gt;source&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;keep-alive&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#keep-alive&quot; aria-label=&quot;keep alive permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;a href=&quot;https://js13kgames.com/entries/keep-alive&quot;&gt;Keep-Alive&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Author: &lt;a href=&quot;https://twitter.com/surbhi_mahajan&quot;&gt;Surbhi Mahajan&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;The idea of this game is inspired by &lt;a href=&quot;https://www.duetgame.com/&quot;&gt;Duet&lt;/a&gt;. Although the gameplay is based on the classic game, it offers extended features and new visuals. There are 3 self-contained levels each with a unique challenge. The player rotates colored orbs in a circular track, guiding them to avoid incoming obstacles. It&apos;s required to keep all the orbs intact to keep going. The orbs only collide with obstacles of a different color than them &amp;#x26; pass unharmed through obstacles otherwise.&lt;/p&gt;
&lt;div style=&quot;text-align:center;&quot;&gt;
  &lt;img src=&quot;/images/2018/09/js13k_keep_alive.gif&quot; style=&quot;box-shadow: 2px 2px 10px 1px #aaa&quot;&gt;
&lt;/div&gt;
&lt;p&gt;A few of the interesting challenges with this were:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Collision detection &amp;#x26; revert effects&lt;/li&gt;
&lt;li&gt;Special effects for tail &amp;#x26; kill animations&lt;/li&gt;
&lt;li&gt;Dynamic level definitions&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Since a lot of these effects were algorithmically generated, the size limit was not a concern for this entry. The primary learning experience here was integrating deterministic dynamic stages, cool effects &amp;#x26; structuring the implementation.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://js13kgames.com/games/keep-alive/index.html&quot;&gt;demo&lt;/a&gt;
|
&lt;a href=&quot;https://github.com/surbhi-mahajan/keep-alive&quot;&gt;source&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;anti_virus&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#anti_virus&quot; aria-label=&quot;anti_virus permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;a href=&quot;https://js13kgames.com/entries/antivirus&quot;&gt;Anti_Virus&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Author: &lt;a href=&quot;https://twitter.com/PunitGu22548112&quot;&gt;Punit Gupta&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;This game is inspired by a classic game &apos;Snow Bros&apos; but with a very different flavor. We all use various offline storage devices to save our precious data. But inevitably, sometimes the data gets corrupted due to viruses. The goal here is to go into those devices, kill those viruses and save the data. The gameplay involves moving around, climbing the platforms, freezing the opponents and throwing them over other enemies.&lt;/p&gt;
&lt;div style=&quot;text-align:center;&quot;&gt;
  &lt;img src=&quot;/images/2018/09/js13k_anti_virus.gif&quot; style=&quot;box-shadow: 2px 2px 10px 1px #aaa&quot;&gt;
&lt;/div&gt;
&lt;p&gt;Some of the major challenges involved with this idea are:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Detecting collisions among platforms, walls, opponents, shooters and player.&lt;/li&gt;
&lt;li&gt;Randomizing enemy movements.&lt;/li&gt;
&lt;li&gt;Animating when player or enemies are killed.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The physics &amp;#x26; special effects being the most fun part of the implementation, squeezing all these things into the required size &amp;#x26; keeping the gameplay smooth also involved quite a lot of optimizations &amp;#x26; polishing.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://js13kgames.com/games/antivirus/index.html&quot;&gt;demo&lt;/a&gt;
|
&lt;a href=&quot;https://github.com/pntgupta/anti-virus&quot;&gt;source&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;sum-it-up&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#sum-it-up&quot; aria-label=&quot;sum it up permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;a href=&quot;https://js13kgames.com/entries/sum-it-up&quot;&gt;Sum It Up&lt;/a&gt;&lt;/h2&gt;
&lt;p&gt;Author: &lt;a href=&quot;https://twitter.com/hemkaranraghav&quot;&gt;Hemkaran Raghav&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;This game is inspired by one of the most popular games of all time, ‘Spider Solitaire’. In this one, you don’t have to stack the cards in increasing order. Instead, numbers are written on these cards and you have to stack identical cards over each other causing them to merge into a new card with double value. Your goal is to create the highest score possible.&lt;/p&gt;
&lt;div style=&quot;text-align:center;&quot;&gt;
  &lt;img src=&quot;/images/2018/09/js13k_sum_it_up.gif&quot; style=&quot;box-shadow: 2px 2px 10px 1px #aaa&quot;&gt;
&lt;/div&gt;
&lt;p&gt;The most fun parts of this implementation were creating smooth &amp;#x26; beautiful animations.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://js13kgames.com/games/sum-it-up/index.html&quot;&gt;demo&lt;/a&gt;
|
&lt;a href=&quot;https://github.com/hemkaran/sum-it-up-game&quot;&gt;source&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;up--down&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#up--down&quot; aria-label=&quot;up  down permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;a href=&quot;https://js13kgames.com/entries/up-down&quot;&gt;Up &amp;#x26; Down&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Author: &lt;a href=&quot;https://twitter.com/dinkarpundir&quot;&gt;Dinkar Pundir&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Inspired by &lt;a href=&quot;https://en.wikipedia.org/wiki/VVVVVV&quot;&gt;vvvvvv&lt;/a&gt;, this game is based on playing with gravity. Apart from the ability to move left/right, you can toggle the direction of the pull. On the click of a button, this direction can be flipped upside-down. This basic idea when combined with adding obstacles in creative ways can lead to plenty of possibilities for a platformer.&lt;/p&gt;
&lt;div style=&quot;text-align:center;&quot;&gt;
  &lt;img src=&quot;/images/2018/09/js13k_up&amp;amp;down.gif&quot; style=&quot;box-shadow: 2px 2px 10px 1px #aaa&quot;&gt;
&lt;/div&gt;
&lt;p&gt;This involved problems like:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Implementing smooth discrete integration that provides a nice balanced difficulty&lt;/li&gt;
&lt;li&gt;Collision detection that properly counters changing gravity&lt;/li&gt;
&lt;li&gt;Creating a well-structured design to allow for easy extensions to stage definitions&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Although created in a very short amount of time, not only were these things fun to solve, these simple problems lead the way towards a wide variety of techniques related to mathematical ideas &amp;#x26; design principles in general.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://js13kgames.com/games/up-down/index.html&quot;&gt;demo&lt;/a&gt;
|
&lt;a href=&quot;https://github.com/dinkar/up-and-down-js13k-2018&quot;&gt;source&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;robo-galactic-shooter&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#robo-galactic-shooter&quot; aria-label=&quot;robo galactic shooter permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;a href=&quot;https://js13kgames.com/entries/robo-galactic-shooter&quot;&gt;Robo Galactic Shooter&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Author: &lt;a href=&quot;https://twitter.com/CreativeBakchod&quot;&gt;Ashish Bardhan&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;The idea for this entry was to create a classic 2D Shoot&apos;em up style &amp;#x26; nostalgic retro feel. You need to survive a barrage of asteroids for as long as possible. The good thing is that you&apos;re given some solid guns! The robot is flying towards the right into the coming asteroids of different sizes &amp;#x26; velocities. The gameplay involves either dodging them or shooting them till they disintegrate.&lt;/p&gt;
&lt;div style=&quot;text-align:center;&quot;&gt;
  &lt;img src=&quot;/images/2018/09/js13k_robo_galactic_shooter.gif&quot; style=&quot;box-shadow: 2px 2px 10px 1px #aaa&quot;&gt;
&lt;/div&gt;
&lt;p&gt;Plenty of effort went into the following parts:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Creating cool background effects, handling sprites&lt;/li&gt;
&lt;li&gt;Integrating sound effects&lt;/li&gt;
&lt;li&gt;Boundless level generation&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Considering how many effects &amp;#x26; elements were integrated, a lot of optimizations were required to fit it all in 13KB. The game also incorporated sound effects using a micro-library called jsfxr. &lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://js13kgames.com/games/robo-galactic-shooter/index.html&quot;&gt;demo&lt;/a&gt;
|
&lt;a href=&quot;https://github.com/AshBardhan/robo-galactic-shooter&quot;&gt;source&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;what-we-learned&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#what-we-learned&quot; aria-label=&quot;what we learned permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;What we Learned&lt;/h2&gt;
&lt;p&gt;A lot of what we learned came from implementing animations, physics, collision detections etc. It&apos;s nice to see how ideas from geometry &amp;#x26; basic numerical integration techniques come together to make a functional game. It&apos;s also worth mentioning that given how complex the implementations of these simple concepts tend to become, an understanding of software design principles is not only a requirement while building these things, but also grows really well with such an experience.&lt;/p&gt;
&lt;p&gt;Most of the integrated effects &amp;#x26; animations we had to create on our own. Some of our games also involved a degree of focus on keeping the algorithms fast, for example, by managing object lifecycles to keep the computations limited to only visible entities, by using clever little hacks to avoid redundant computations while rendering etc.&lt;/p&gt;
&lt;p&gt;In the instances where third party libraries were used, we had to make sure they introduced very little overhead. 2 of the listed games leveraged &lt;a href=&quot;https://github.com/straker/kontra&quot;&gt;Kontra.js&lt;/a&gt;, a micro-library to get up &amp;#x26; running quickly without introducing any significant impact to build size. Kontra.js provides nice features such as sprite management &amp;#x26; out of the box collision detection etc. Galactic Shooter also used a slightly altered version of &lt;a href=&quot;https://github.com/mneubrand/jsfxr&quot;&gt;jsfxr&lt;/a&gt;, a lightweight sound generation library.&lt;/p&gt;
&lt;p&gt;For the build process, almost all of us followed a different path. In small games, &lt;a href=&quot;https://webpack.js.org/&quot;&gt;Webpack&lt;/a&gt; was suitable for bundling the source. For some larger ones, we wanted to avoid even the tiniest of the overhead introduced by Webpack. Therefore, we used simple &lt;a href=&quot;https://gruntjs.com/&quot;&gt;Grunt&lt;/a&gt; / &lt;a href=&quot;https://gulpjs.com/&quot;&gt;Gulp&lt;/a&gt; tasks to concatenate &amp;#x26; minify files.
In some cases, we even avoided using &lt;a href=&quot;https://developers.google.com/closure/compiler/&quot;&gt;Closure Compiler&lt;/a&gt;, as arrow functions &amp;#x26; classes result in much more concise code. Apart from these, we experimented with various compression tools &amp;#x26; techniques for fitting all those JS/HTML/CSS/PNG files in 13K size limit. But one way or another, we managed to make it for all of the entries.&lt;/p&gt;
&lt;h2 id=&quot;conclusion&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#conclusion&quot; aria-label=&quot;conclusion permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Conclusion&lt;/h2&gt;
&lt;p&gt;Participation in this event did require committing a significant amount of personal time to it but proved to be an amazing experience not only in terms of what we learned from it but also in how much fun we had while implementing these concepts. After all, game development is as fun as it gets when it comes to programming - &lt;strong&gt;&lt;em&gt;creating a tiny universe of your own, the laws of physics are what you want them to be, things evolve how you tell them to&lt;/em&gt;&lt;/strong&gt;. And we certainly managed to pick up some nice ideas along the way.&lt;/p&gt;
&lt;p&gt;We would love to hear your feedback or answer any queries you might have, feel free to drop a comment or tweet us at &lt;a href=&quot;https://twitter.com/wingify_engg&quot;&gt;@wingify_engg&lt;/a&gt;.&lt;/p&gt;
&lt;h3 id=&quot;game-on&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#game-on&quot; aria-label=&quot;game on permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Game on!&lt;/h3&gt;</content:encoded><author>Aditya Mishra, Punit Gupta</author></item><item><title><![CDATA[Shift to Atomic CSS]]></title><description><![CDATA[For the past few months, we at Wingify, have been working on making a common platform for different products - so that things get reused…]]></description><link>https://engineering.wingify.com//posts/shift-to-atomic-css/</link><guid isPermaLink="false">https://engineering.wingify.com//posts/shift-to-atomic-css/</guid><pubDate>Thu, 30 Aug 2018 18:30:00 GMT</pubDate><content:encoded>&lt;p&gt;For the past few months, we at Wingify, have been working on making a common platform for different products - so that things get reused across products and re-inventing the wheel doesn&apos;t happen. This also has additional benefits like enforcing common good practices across products, easier switching for developer across products and more. As part of the same endeavor, our Frontend team has been working hard on a Design System and a frontend boilerplate app over that. The boilerplate is something which any product at Wingify can simply fork and build a new frontend app, using the reusable components provided by the base Design System. More about the boilerplate and Design System later, but in this post want to specifically talk about a very import part of our Design System - &lt;strong&gt;our CSS&lt;/strong&gt;.&lt;/p&gt;
&lt;h2 id=&quot;issues-with-current-css&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#issues-with-current-css&quot; aria-label=&quot;issues with current css permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Issues with current CSS&lt;/h2&gt;
&lt;p&gt;First, why did we even start looking for a new way to write CSS? Previously, we were using a mix of &lt;a href=&quot;http://getbem.com/introduction/&quot;&gt;BEM&lt;/a&gt; and some helper classes. Occasional classes which belonged to neither of those two categories could be seen in the code base too! 😅 This approach led to the following issues:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Naming classes was always a problem&lt;/strong&gt; - Often, someone was commenting the pull requests that this class name doesn&apos;t make sense and should be changed to something more &lt;em&gt;&quot;meaningful&quot;&lt;/em&gt;. Finding &lt;em&gt;&quot;meaningful&quot;&lt;/em&gt; names is tough!&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Unused CSS&lt;/strong&gt; - Automated tools to detect unused CSS are not very reliable, especially with Single Page Apps. Our CSS kept growing over time and definitely one main reason for that was no one ever cared to remove the unused CSS.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Refactoring&lt;/strong&gt; - With usual classes, it becomes difficult to refactor with confidence. Because the developer cannot be very sure about the class that they are renaming or removing getting used elsewhere which they are not aware of.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;I have also blogged about these issues in detail in &lt;a href=&quot;https://medium.freecodecamp.org/acss-a-dynamic-atomic-css-library-402dff9756e0&quot;&gt;an article here&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&quot;evaluating-other-approaches&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#evaluating-other-approaches&quot; aria-label=&quot;evaluating other approaches permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Evaluating other approaches&lt;/h2&gt;
&lt;p&gt;Much before starting this mission, we started evaluating various frameworks for writing CSS. Our evaluation was based on following parameters:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Final output file size&lt;/li&gt;
&lt;li&gt;Rate of growth of file size over time&lt;/li&gt;
&lt;li&gt;Unused CSS handling&lt;/li&gt;
&lt;li&gt;Ease of learning for a new developer&lt;/li&gt;
&lt;li&gt;Ease of maintenance&lt;/li&gt;
&lt;li&gt;Documentation (existing or requirement to create one internally)&lt;/li&gt;
&lt;li&gt;Lintable&lt;/li&gt;
&lt;li&gt;Themable&lt;/li&gt;
&lt;li&gt;Ease of refactoring&lt;/li&gt;
&lt;li&gt;Naming effort involved&lt;/li&gt;
&lt;li&gt;Critical CSS generation&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Yeah, lots of parameters. We evaluated very critically 😀. Also, notice that I have kept the end-user performance related parameters on top as that&apos;s what mattered most to us.&lt;/p&gt;
&lt;h2 id=&quot;the-winner---acss&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#the-winner---acss&quot; aria-label=&quot;the winner   acss permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;The winner - ACSS&lt;/h2&gt;
&lt;p&gt;We evaluated lots of known frameworks and libraries out there like pure BEM, Tachyons, Styled Components, Vue&apos;s scoped CSS, CSS modules. But We found that atomic CSS approach met most of our requirements as mentioned above. Also known as helper/utility classes approach, Atomic CSS requires no naming, documentation would be available if we go with a well-known library, its themable, lintable. Refactoring is also easier as all you need to do is remove classes from your HTML and never touch CSS.&lt;/p&gt;
&lt;p&gt;But even in various atomic CSS libraries available out there, we decided to go with &lt;a href=&quot;https://acss.io/&quot;&gt;ACSS&lt;/a&gt;(I know, the name is little too generic as they call themselves Atomic CSS!). We got introduced to ACSS by our resident UX engineer, &lt;a href=&quot;https://twitter.com/jitendravyas&quot;&gt;Jitendra Vyas&lt;/a&gt;. Along with him, we discussed a lot of points about ACSS with one of the developers of ACSS, &lt;a href=&quot;https://github.com/thierryk&quot;&gt;Thierry Koblentz&lt;/a&gt;. ACSS was also mentioned by &lt;a href=&quot;https://twitter.com/roderickhsiao/status/922620291527852032&quot;&gt;Addy Osmani at Google IO&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;ACSS comes with very strong benefits which no other library had. You don&apos;t write CSS in ACSS, in fact you don&apos;t even download a CSS file and use in ACSS. ACSS comes with a tool called &lt;a href=&quot;https://github.com/acss-io/atomizer&quot;&gt;Atomizer&lt;/a&gt; which detects the use of ACSS classes in your HTML (or any file) and generates the corresponding CSS for those detected classes. Here is a sample HTML you would write with ACSS:&lt;/p&gt;
&lt;p&gt;{% highlight html %}
&lt;button class=&quot;Bgc(blue) C(white) P(10px) D(ib) Cur(p) Bgc(red):h&quot;&gt;
I am a button
&lt;/button&gt;
{% endhighlight %}&lt;/p&gt;
&lt;p&gt;On top of usual benefits of Atomic CSS approach, ACSS&apos;s automatic CSS generation means that we never get a single byte of CSS that we are not using in an app! What we use in HTML, lands in the final CSS file. In fact, ACSS generates such small CSS that it&apos;s practically possible to inline your complete CSS - i.e. your complete CSS can become your critical CSS!&lt;/p&gt;
&lt;p&gt;We were free from documentation as the only thing a developer needs to write ACSS is their &lt;a href=&quot;https://acss.io/reference&quot;&gt;awesome, searchable reference&lt;/a&gt;. There is also a &lt;a href=&quot;https://github.com/acss-io/vscode-atomizer&quot;&gt;VSCode extension&lt;/a&gt; which even removes the need for the reference. We were free from naming things of course.&lt;/p&gt;
&lt;p&gt;It may seem that a developer might have to write same set of classes repeatedly to create the same things, but that is not true. ACSS or any Atomic CSS approach requires a templating/component system where you can reuse a piece of HTML without duplicating. We use Vue.js to build our small reusable components.&lt;/p&gt;
&lt;p&gt;Of course they are some cons in ACSS, as well. For example, inside a particular component&apos;s HTML, you cannot find what any tag is about because there are no descriptive classes. This can be somewhat be fixed by using semantic tags. Basically, the pros are way too strong over its cons.&lt;/p&gt;
&lt;h2 id=&quot;the-end-result&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#the-end-result&quot; aria-label=&quot;the end result permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;The end result&lt;/h2&gt;
&lt;p&gt;We just finished porting a decent size app to our new system and guess what, our CSS reduced from &lt;code class=&quot;language-text&quot;&gt;90 KB&lt;/code&gt; to just &lt;code class=&quot;language-text&quot;&gt;8 KB&lt;/code&gt;! 😱&lt;/p&gt;
&lt;p&gt;That is all for this post! I encourage you to go and try out &lt;a href=&quot;https://acss.io/&quot;&gt;ACSS&lt;/a&gt; with an open mind and see if it solves your current CSS problem if any. We are happy to answer any questions you might have on our new approach, Design System etc. Do comment on this post or tweet them out to our twitter handle 👉🏼 &lt;a href=&quot;https://twitter.com/wingify_engg&quot;&gt;@wingify_engg&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Bbye!&lt;/p&gt;</content:encoded><author>Kushagra Gour</author></item><item><title><![CDATA[Demystifying Webpack 4 Split Chunks Plugin]]></title><description><![CDATA[Recently, we migrated one of our web apps to the Webpack 4, which decreases build time and reduces chunk size by using Split Chunks plugin…]]></description><link>https://engineering.wingify.com//posts/demystifying-split-chunks-plugin/</link><guid isPermaLink="false">https://engineering.wingify.com//posts/demystifying-split-chunks-plugin/</guid><pubDate>Thu, 09 Aug 2018 18:30:00 GMT</pubDate><content:encoded>&lt;p&gt;Recently, we migrated one of our web apps to the Webpack 4, which decreases build time and reduces chunk size by using Split Chunks plugin. It automatically identifies modules which should be split by heuristics and splits the chunks. This blog post deals with our efforts in understanding the mysterious Split Chunks plugin.&lt;/p&gt;
&lt;h3 id=&quot;the-problem&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#the-problem&quot; aria-label=&quot;the problem permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;The Problem&lt;/h3&gt;
&lt;p&gt;The problem we were facing with &lt;a href=&quot;https://webpack.js.org/plugins/split-chunks-plugin/#optimization-splitchunks&quot;&gt;default&lt;/a&gt; Split Chunks config is that a module of large size &lt;strong&gt;550 KB&lt;/strong&gt; was duplicated in 4 async chunks. So, our goal was specifically to decrease the bundle size and utilize a better code splitting mechanism in the app.&lt;/p&gt;
&lt;p&gt;Our Webpack configuration file looks like this:&lt;/p&gt;
&lt;p&gt;{% highlight js %}
// Filename: webpack.config.js&lt;/p&gt;
&lt;p&gt;const webpack = require(&apos;webpack&apos;);
module.exports = {
//...
optimization: {
splitChunks: {
chunks: &apos;all&apos;
}
}
};
{% endhighlight %}&lt;/p&gt;
&lt;p&gt;We used &lt;a href=&quot;https://github.com/webpack-contrib/webpack-bundle-analyzer&quot;&gt;webpack-bundle-analyzer&lt;/a&gt; to get a nice view of our problem.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/images/2018/08/split-chunks-duplicated-view.png&quot;&gt;&lt;/p&gt;
&lt;h3 id=&quot;observation&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#observation&quot; aria-label=&quot;observation permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Observation&lt;/h3&gt;
&lt;p&gt;By default, Split Chunks plugin only affects on-demand chunks and it split chunks based on following &lt;a href=&quot;https://webpack.js.org/plugins/split-chunks-plugin/#defaults&quot;&gt;conditions&lt;/a&gt;:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;A new chunk should be shared or containing modules should be from the node_modules folder.&lt;/li&gt;
&lt;li&gt;New chunk should be bigger than 30 KB.&lt;/li&gt;
&lt;li&gt;Maximum number of parallel requests when loading chunks on demand should be lower or equal to 5.&lt;/li&gt;
&lt;li&gt;Maximum number of parallel requests at initial page load should be lower or equal to 3.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;In our case, a separate chunk of the large-sized library would not be created.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;What&apos;s the reasoning behind this?&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;It satisfies first and second conditions as it is being used in 4 chunks and its size (550 KB) is bigger than 30 KB so concludes that it should be in a new chunk. But it does not satisfy the third one as 5 chunks were already created at each dynamic import which is the maximum limit for async requests. We observed that the first 4 chunks include all modules which are shared among 7,6,5,5 async chunks respectively and the last one is its own chunk. Modules on which a maximum number of async chunks are dependent on have been given priority and as a library is required by only 4 async chunks, a chunk containing it would not be created.&lt;/p&gt;
&lt;p&gt;When we run &lt;code class=&quot;language-text&quot;&gt;yarn build&lt;/code&gt; to build our assets, a chunk named &lt;strong&gt;vendors~async.chunk.1~async.chunk.2~async.chunk.3~async.chunk.4&lt;/strong&gt; is not found in the output:&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/images/2018/08/split-chunks-default-build-view-1.png&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/images/2018/08/split-chunks-default-build-view-2.png&quot;&gt;&lt;/p&gt;
&lt;h3 id=&quot;solutions&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#solutions&quot; aria-label=&quot;solutions permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Solutions&lt;/h3&gt;
&lt;p&gt;We can have more control over this functionality. We can change default configuration in either or combination of the following ways:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Increasing &lt;a href=&quot;https://webpack.js.org/plugins/split-chunks-plugin/#splitchunks-maxasyncrequests&quot;&gt;maxAsyncRequests&lt;/a&gt; result in more chunks. A large number of requests degrades the performance but it&apos;s not a concern in HTTP/2 because of the &lt;a href=&quot;https://developers.google.com/web/fundamentals/performance/http2/&quot;&gt;request and response multiplexing&lt;/a&gt;. So, this configuration should be preferred in case of HTTP/2 only.&lt;/p&gt;
&lt;p&gt;Now let’s take a look at Webpack configuration file after this change:&lt;/p&gt;
&lt;p&gt;{% highlight js %}
// Filename: webpack.config.js&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;text&quot;&gt;&lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;const webpack = require(&amp;#39;webpack&amp;#39;);
module.exports = {
    //...
   optimization: {
      splitChunks: {
         chunks: &amp;#39;all&amp;#39;,
         maxAsyncRequests: 20
      }
   }
};&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;{% endhighlight %}&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Increasing &lt;a href=&quot;https://webpack.js.org/plugins/split-chunks-plugin/#splitchunks-minsize&quot;&gt;minSize&lt;/a&gt; also gives the desired result. Some modules with higher usage in our app and size less than minSize would not be included in separate chunks as they all violate the second condition like in case of minSize 100 KB, modules greater than 100 KB are considered giving more possibilities for creating chunks containing large-sized modules.&lt;/p&gt;
&lt;p&gt;Now let’s take a look at Webpack configuration file after this change:&lt;/p&gt;
&lt;p&gt; {% highlight js %}
// Filename: webpack.config.js&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;text&quot;&gt;&lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;const webpack = require(&amp;#39;webpack&amp;#39;);
module.exports = {
    //...
   optimization: {
      splitChunks: {
         chunks: &amp;#39;all&amp;#39;,
         minSize: 100000
      }
   }
};&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt; {% endhighlight %}&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&quot;experiment&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#experiment&quot; aria-label=&quot;experiment permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Experiment&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;Steps:&lt;/strong&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;We picked any two async chunks between which a large-sized third-party library (550 KB) is shared. Let&apos;s call these chunks as async.chunk.1 and async.chunk.2 and assume that chunk&apos;s name and corresponding route&apos;s name are same.&lt;/li&gt;
&lt;li&gt;Loaded async.chunk.1 route first and calculated the total content size loaded.&lt;/li&gt;
&lt;li&gt;Then navigated from async.chunk.1 route to async.chunk.2 route and calculated the content size again.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;strong&gt;Results with first approach(varying the maxAsyncRequest property):&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;
|   MaxAsyncRequests   |           async.chunk.1          |        async.chunk.2       |
|----------------------|----------------------------------|----------------------------|
|          5           |            1521.6 KB             |          758 KB            |
|          10          |            1523.76 KB            |          79.1 KB           |
|          15          |            1524 KB               |          79.1 KB           |
|          20          |            1524.3 KB             |          79.1 KB           |
&lt;/pre&gt;
&lt;p&gt;After this change our bundles look like this:&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/images/2018/08/split-chunks-maxAsyncRequests-view.png&quot;&gt;&lt;/p&gt;
&lt;p&gt;With this configuration, a separate chunk named &lt;strong&gt;vendors~async.chunk.1~async.chunk.2~async.chunk.3~async.chunk.4&lt;/strong&gt; is created which is shown below:&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/images/2018/08/split-chunks-maxAsyncRequests-build-view.png&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Results with second approach(varying the minSize property):&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;
|       MinSize       |          async.chunk.1           |        async.chunk.2       |
|---------------------|----------------------------------|----------------------------|
|        30 KB        |            1521.6 KB             |          758 KB            |
|        50 KB        |            1521.6 KB             |          188 KB            |
|        100 KB       |            1521.4 KB             |          78.4 KB           |
&lt;/pre&gt;
&lt;p&gt;After this change our bundles look like this:&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/images/2018/08/split-chunks-minSize-view.png&quot;&gt;&lt;/p&gt;
&lt;p&gt;In this case too, a large-sized library is extracted into a separate chunk named &lt;strong&gt;vendors~async.chunk.1~async.chunk.2~async.chunk.3~async.chunk.4&lt;/strong&gt; which is shown below:&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/images/2018/08/split-chunks-minSize-build-view.png&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: async.chunk.2 chunk size in case of 50 KB minSize configuration is 188 KB whereas its size is reduced to 78.4 KB in case of 100 KB minSize configuration. This is because one more module of size 146 KB that are shared among four other chunks are extracted into a separate chunk decreasing overall bundle size to 78.4 KB (Awesome!).&lt;/p&gt;
&lt;h3 id=&quot;conclusion&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#conclusion&quot; aria-label=&quot;conclusion permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Conclusion&lt;/h3&gt;
&lt;p&gt;Increasing minSize and maxAsyncRequests both decreases the size of async.chunk.2 chunk.&lt;/p&gt;
&lt;p&gt;The second approach can result in multiple large-sized chunks, each one having multiple duplicated small-sized modules.
On the other hand, the first approach will result in a large number of small chunks which do not have any duplicated module. Loading multiple small chunks increases the loading time of page but with HTTP/2, it will work efficiently.&lt;/p&gt;
&lt;p&gt;Finally, we achieved what we wanted, a big library is now separated from our bundles and lazy loaded on demand. Thanks to &lt;a href=&quot;https://twitter.com/dinkarpundir&quot;&gt;Dinkar Pundir&lt;/a&gt; for helping me in solving the above problem.
If you have any doubt feel free to drop a comment or tweet us at &lt;a href=&quot;https://twitter.com/wingify_engg&quot;&gt;@wingify_engg&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Happy Chunking...&lt;/strong&gt; !!&lt;/p&gt;</content:encoded><author>Surbhi Mahajan</author></item><item><title><![CDATA[Automated Heatmap Verification E2E using Selenium and Canvas]]></title><description><![CDATA[Heatmaps record visitor clicks on the live state of your website, which can be used to interpret user behavior on elements like modal boxes…]]></description><link>https://engineering.wingify.com//posts/automated-heatmap-verification/</link><guid isPermaLink="false">https://engineering.wingify.com//posts/automated-heatmap-verification/</guid><pubDate>Mon, 02 Apr 2018 18:30:00 GMT</pubDate><content:encoded>&lt;p&gt;Heatmaps record visitor clicks on the live state of your website, which can be used to interpret user behavior on elements like modal boxes, pages behind logins, and dynamic URLs.&lt;/p&gt;
&lt;div style=&quot;text-align:center; margin: 10px;&quot;&gt;
  &lt;img src=&quot;/images/2018/04/heatmap.png&quot; style=&quot;box-shadow: 2px 2px 10px 1px #aaa&quot;&gt;
  &lt;div style=&quot;margin: 10px;&quot;&gt;&lt;b&gt;VWO Heatmap in action on vwo.com&lt;/b&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;But here comes a question, how to verify Heatmap E2E using automation? How to check if clicks are being plotted correctly? How to check if there is no data loss while plotting the clicks?&lt;/p&gt;
&lt;p&gt;The answer to above questions is &lt;a href=&quot;https://en.wikipedia.org/wiki/Canvas_element&quot;&gt;HTML Canvas&lt;/a&gt;. As VWO heatmaps are rendered on HTML canvas, we decided to leverage that to verify Heatmap E2E as well. The best part of using Canvas is that, it can be integrated easily with your existing Selenium scripts.&lt;/p&gt;
&lt;h2 id=&quot;how-can-canvas-be-used-for-heatmap-automation&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#how-can-canvas-be-used-for-heatmap-automation&quot; aria-label=&quot;how can canvas be used for heatmap automation permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;How can Canvas be used for Heatmap Automation?&lt;/h2&gt;
&lt;p&gt;There are two phases in order to verify if the heatmaps are working or not.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;The first phase is to plot clicks on the test page and store the clicks co-ordinates. This can be easily done using Selenium.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;javascript&quot;&gt;&lt;pre class=&quot;language-javascript&quot;&gt;&lt;code class=&quot;language-javascript&quot;&gt;&lt;span class=&quot;token comment&quot;&gt;//get elements location from the top of DOM&lt;/span&gt;
element&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;getLocation&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;then&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token parameter&quot;&gt;location&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;token comment&quot;&gt;//get elements height and width&lt;/span&gt;
    element&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;getSize&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;then&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token parameter&quot;&gt;size&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;token comment&quot;&gt;//store element’s center coordinates w.r.t. top left corner of DOM in array    &lt;/span&gt;
        clickDataArray&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;push&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;token class-name&quot;&gt;Coordinates&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;Math&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;floor&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;location&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;x &lt;span class=&quot;token operator&quot;&gt;+&lt;/span&gt; size&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;width &lt;span class=&quot;token operator&quot;&gt;/&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; Math&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;floor&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;location&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;y &lt;span class=&quot;token operator&quot;&gt;+&lt;/span&gt; size&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;height &lt;span class=&quot;token operator&quot;&gt;/&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;   &lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;In this function, we are simply finding the center coordinates of an element where we have clicked and storing it in to an array. These stored coordinates would be further used to check if the clicks are plotted using the canvas functions or not.&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;The second phase is to leverage canvas functions and the co-ordinate data stored in order to verify if heatmaps are plotted correctly. We simply check if heatmap canvas is empty and if it is empty, we would not check further.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;javascript&quot;&gt;&lt;pre class=&quot;language-javascript&quot;&gt;&lt;code class=&quot;language-javascript&quot;&gt;exports&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function-variable function&quot;&gt;isCanvasEmpty&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
    browser&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;wait&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token constant&quot;&gt;EC&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;presenceOf&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;element&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;by&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;tagName&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&apos;canvas&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;5000&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; browser&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;executeScript&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;token keyword&quot;&gt;var&lt;/span&gt; canvas &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; document&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;getElementsByTagName&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&apos;canvas&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;token keyword&quot;&gt;var&lt;/span&gt; imgWidth &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; canvas&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;width &lt;span class=&quot;token operator&quot;&gt;||&lt;/span&gt; canvas&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;naturalWidth&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;token keyword&quot;&gt;var&lt;/span&gt; imgHeight &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; canvas&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;height &lt;span class=&quot;token operator&quot;&gt;||&lt;/span&gt; canvas&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;naturalHeight&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;token comment&quot;&gt;// true if all pixels Alpha equals to zero&lt;/span&gt;
        &lt;span class=&quot;token keyword&quot;&gt;var&lt;/span&gt; ctx &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; canvas&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;getContext&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&apos;2d&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;token keyword&quot;&gt;var&lt;/span&gt; imageData &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; ctx&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;getImageData&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; imgWidth&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; imgHeight&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;token comment&quot;&gt;//alpha channel is the 4th value in the imageData.data array that’s why we are incrementing it by 4&lt;/span&gt;
        &lt;span class=&quot;token keyword&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;var&lt;/span&gt; i &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt; i &lt;span class=&quot;token operator&quot;&gt;&amp;lt;&lt;/span&gt; imageData&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;data&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;length&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt; i &lt;span class=&quot;token operator&quot;&gt;+=&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;imageData&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;data&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;i &lt;span class=&quot;token operator&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;!==&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
                &lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;token boolean&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
            &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;token boolean&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token operator&quot;&gt;:&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;In this function, we are getting the 2d context of the canvas and then we are iterating over the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/getImageData&quot;&gt;image data&lt;/a&gt; to check if &lt;a href=&quot;https://en.wikipedia.org/wiki/Alpha_compositing&quot;&gt;alpha channel&lt;/a&gt; of all pixel points is greater than zero. Alpha channel is an 8-bit layer in a graphics file format that is used for expressing translucency (transparency), which in turn means that if the value of alpha channel of a pixel is equal to zero, nothing is plotted over that pixel.&lt;/p&gt;
&lt;p&gt;If for any pixel the value of alpha channel is greater than zero, this tells us that the canvas is not empty which indeed means clicks are plotted onto the heatmap.&lt;/p&gt;
&lt;p&gt;Once we are sure that the canvas is not empty, we can proceed further to check that the clicks are plotted on the canvas at the correct position i.e exactly where we clicked using selenium.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;javascript&quot;&gt;&lt;pre class=&quot;language-javascript&quot;&gt;&lt;code class=&quot;language-javascript&quot;&gt;exports&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function-variable function&quot;&gt;checkCanvasPlotting&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token parameter&quot;&gt;coordinates&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;token string&quot;&gt;&apos;use strict&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
    browser&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;wait&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token constant&quot;&gt;EC&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;presenceOf&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;element&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;by&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;tagName&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&apos;canvas&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;5000&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; browser&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;executeScript&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;
        &lt;span class=&quot;token keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;token keyword&quot;&gt;var&lt;/span&gt; coord &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; arguments&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
            &lt;span class=&quot;token keyword&quot;&gt;var&lt;/span&gt; canvas &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; document&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;getElementsByTagName&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&apos;canvas&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
            &lt;span class=&quot;token comment&quot;&gt;// true if all pixels Alpha equals to zero&lt;/span&gt;
            &lt;span class=&quot;token keyword&quot;&gt;var&lt;/span&gt; ctx &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; canvas&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;getContext&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token string&quot;&gt;&apos;2d&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
            &lt;span class=&quot;token keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;ctx&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;getImageData&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;coord&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;x&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; coord&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;y&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;data&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;token number&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;===&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
                &lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;token boolean&quot;&gt;false&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
            &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
            &lt;span class=&quot;token keyword&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;token boolean&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;,&lt;/span&gt; coordinates&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;In this function, we are using the same canvas function to get the imageData and then checking that for all the coordinates where clicks were plotted the value of alpha channel is greater than zero.&lt;/p&gt;
&lt;p&gt;The above function can be easily called as below:&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;javascript&quot;&gt;&lt;pre class=&quot;language-javascript&quot;&gt;&lt;code class=&quot;language-javascript&quot;&gt;exports&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function-variable function&quot;&gt;validateHeatmapPlotting&lt;/span&gt; &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token keyword&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token parameter&quot;&gt;coordinateArray&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;token string&quot;&gt;&apos;use strict&apos;&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;token keyword&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token keyword&quot;&gt;var&lt;/span&gt; i &lt;span class=&quot;token operator&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;token number&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt; i &lt;span class=&quot;token operator&quot;&gt;&amp;lt;&lt;/span&gt; coordinateArray&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;length&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt; i&lt;span class=&quot;token operator&quot;&gt;++&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;token punctuation&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;token function&quot;&gt;expect&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;canvasUtils&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;checkCanvasPlotting&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;coordinateArray&lt;span class=&quot;token punctuation&quot;&gt;[&lt;/span&gt;i&lt;span class=&quot;token punctuation&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;token function&quot;&gt;toBe&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;token boolean&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;token punctuation&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;token punctuation&quot;&gt;;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id=&quot;conclusion&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#conclusion&quot; aria-label=&quot;conclusion permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Conclusion&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Canvas utility functions and selenium can be easily leveraged in order to verify basic heatmap functionality using automation.&lt;/li&gt;
&lt;li&gt;These can be easily extended in order to verify number of clicks on element and also to verify plotting intensity.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Hope this post was a good enough reference to help you write end-to-end automation script for heatmap testing. If you have any questions about this, let us know via comments.&lt;/p&gt;</content:encoded><author>Sahil Goyal</author></item><item><title><![CDATA[Animations in VueJS]]></title><description><![CDATA[This article is inspired from Animating Vue JS by Sarah Drasner at JS Channel 2017. Problem Statement - Why Animation? Website UI…]]></description><link>https://engineering.wingify.com//posts/animations-in-vue-js/</link><guid isPermaLink="false">https://engineering.wingify.com//posts/animations-in-vue-js/</guid><pubDate>Mon, 11 Dec 2017 18:30:00 GMT</pubDate><content:encoded>&lt;p&gt;This article is inspired from &lt;a href=&quot;http://slides.com/sdrasner/animating-vue-keynote&quot;&gt;Animating Vue JS by Sarah Drasner&lt;/a&gt; at &lt;a href=&quot;http://2017.jschannel.com/&quot;&gt;JS Channel 2017&lt;/a&gt;.&lt;/p&gt;
&lt;h3 id=&quot;problem-statement---why-animation&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#problem-statement---why-animation&quot; aria-label=&quot;problem statement   why animation permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Problem Statement - Why Animation?&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;Website UI Development&lt;/strong&gt; is not about making things beautiful. It’s all about website performance and customer experience. According to studies from &lt;strong&gt;Amazon&lt;/strong&gt; and &lt;strong&gt;Walmart&lt;/strong&gt;, they discovered a drop of conversion rate/revenue on increasing the user interaction time as the user feels interrupted during the interaction. Another study discovered that a customised animated loader made a higher wait time and lower abandon rate compared to generic one as the user felt more interactive with the former loader.&lt;/p&gt;
&lt;p&gt;In a nutshell, the animation of your application should be more interactive and engaging for the user, kind of like &lt;strong&gt;a cinema booking application&lt;/strong&gt; and &lt;strong&gt;a form inside a location tag&lt;/strong&gt; for example.&lt;/p&gt;
&lt;h3 id=&quot;what-is-vuejs&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#what-is-vuejs&quot; aria-label=&quot;what is vuejs permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;What is VueJS?&lt;/h3&gt;
&lt;p&gt;For those who are familiar with &lt;strong&gt;Angular&lt;/strong&gt; and &lt;strong&gt;ReactJS&lt;/strong&gt;, &lt;strong&gt;VueJS&lt;/strong&gt; is a progressive JavaScript framework that supports some features:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;A virtual DOM&lt;/li&gt;
&lt;li&gt;Declarative Rendering&lt;/li&gt;
&lt;li&gt;Computed properties&lt;/li&gt;
&lt;li&gt;Reactive components&lt;/li&gt;
&lt;li&gt;Conditional rendering … to name a few&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Some of these features are quite similar to what &lt;strong&gt;Angular&lt;/strong&gt; and &lt;strong&gt;ReactJS&lt;/strong&gt; already provide. However, you can check &lt;a href=&quot;https://vuejs.org/v2/guide/comparison.html&quot;&gt;its comparison with other frameworks&lt;/a&gt;.&lt;/p&gt;
&lt;h3 id=&quot;todo-list-example&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#todo-list-example&quot; aria-label=&quot;todo list example permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Todo List Example&lt;/h3&gt;
&lt;p&gt;Let’s take a simple example of &lt;strong&gt;Todo list&lt;/strong&gt;, containing a list of tasks with the functionality of adding/removing a task to/from the list.&lt;/p&gt;
&lt;p&gt;This will be our view in &lt;strong&gt;HTML&lt;/strong&gt; file, assuming that you’ve included &lt;strong&gt;VueJS&lt;/strong&gt; in a &lt;code class=&quot;language-text&quot;&gt;script&lt;/code&gt; tag already.&lt;/p&gt;
&lt;p&gt;{% highlight html %}&lt;/p&gt;
&lt;div id=&quot;app&quot;&gt;
    &lt;input type=&quot;text&quot; v-model=&quot;task&quot;/&gt;
    &lt;input type=&quot;button&quot; value=&quot;Add&quot; v-on:click=&quot;addTaskToList&quot;/&gt;
    &lt;ul&gt;
        &lt;li v-for=&quot;(todo, index) in todoList&quot;&gt;
            {% raw %}{{ todo }}{% endraw %}
            &lt;input type=&quot;button&quot; value=&quot;Remove&quot; v-on:click=&quot;removeTaskFromList(index)&quot;/&gt;  
        &lt;/li&gt;
    &lt;/ul&gt;
&lt;/div&gt;
{% endhighlight %}
&lt;p&gt;Meanwhile, our &lt;strong&gt;JS&lt;/strong&gt; file looks like this.&lt;/p&gt;
&lt;p&gt;{% highlight js %}
var app = new Vue({
el: &apos;#app&apos;,
data: {
task: &apos;my first task&apos;,
todoList : []
},
methods : {
addTaskToList : function(){
this.todoList.push(this.task);
},
removeTaskFromList : function(index){
this.todoList.splice(index, 1);
}
}
});
{% endhighlight %}&lt;/p&gt;
&lt;p&gt;The code itself is self-explanatory. It simply adds a &lt;code class=&quot;language-text&quot;&gt;task&lt;/code&gt; inside the &lt;code class=&quot;language-text&quot;&gt;todoList&lt;/code&gt; using &lt;code class=&quot;language-text&quot;&gt;addTaskToList&lt;/code&gt; method and removes from the list using &lt;code class=&quot;language-text&quot;&gt;removeTaskFromList&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;The event binding and loops syntax in the HTML looks similar to what you see in &lt;strong&gt;AngularJS&lt;/strong&gt;. However, the syntax of variables and methods is different in VueJS, which reminds you of private variables and public methods you used to code in &lt;strong&gt;C++&lt;/strong&gt;. You can view the &lt;a href=&quot;https://codepen.io/AshBardhan/pen/XzLxbE&quot;&gt;demo&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Let’s add more interaction in this. A confirmation pop-up should appear with &lt;code class=&quot;language-text&quot;&gt;OK&lt;/code&gt; and &lt;code class=&quot;language-text&quot;&gt;Cancel&lt;/code&gt; options. Regardless of the option chosen, the pop-up should be closed later on.&lt;/p&gt;
&lt;p&gt;In &lt;strong&gt;HTML&lt;/strong&gt;, let’s modify the list element&lt;/p&gt;
&lt;p&gt;{% highlight html %}&lt;/p&gt;
&lt;li v-for=&quot;(todo, index) in todoList&quot;&gt;
    {% raw %}{{ todo }}{% endraw %}
    &lt;input type=&quot;button&quot; value=&quot;Remove&quot; v-on:click=&quot;onRemoveTask(index)&quot;/&gt;
&lt;/li&gt;
{% endhighlight %}
&lt;p&gt;And add a new pop-up element&lt;/p&gt;
&lt;p&gt;{% highlight html %}&lt;/p&gt;
&lt;div v-show=&quot;isPopupOpen&quot;&gt;
    Are you sure you want to remove this from Todo List?&lt;br/&gt;
    &lt;input type=&quot;button&quot; value=&quot;OK&quot; v-on:click=&quot;confirmRemove()&quot;/&gt;
    &lt;input type=&quot;button&quot; value=&quot;Cancel&quot; v-on:click=&quot;cancelRemove()&quot;/&gt;
&lt;/div&gt;
{% endhighlight %}
&lt;p&gt;Meanwhile in &lt;strong&gt;JS&lt;/strong&gt;, initialize new data variables inside&lt;/p&gt;
&lt;p&gt;{% highlight js %}
data: {
isPopupOpen : false,
currentIndex: -1
}
{% endhighlight %}&lt;/p&gt;
&lt;p&gt;And also, add some methods&lt;/p&gt;
&lt;p&gt;{% highlight js %}
methods : {
onRemoveTask : function(index) {
this.isPopupOpen = true;
this.currentIndex = index;
},
confirmRemove : function() {
this.removeTaskFromList(this.currentIndex);
this.isPopupOpen = false;
},
cancelRemove : function() {
this.isPopupOpen = false;
}
}
{% endhighlight %}&lt;/p&gt;
&lt;p&gt;Let’s add some animation into it.&lt;/p&gt;
&lt;p&gt;For the fading-in/out the pop-up, you need to wrap our pop-up inside &lt;code class=&quot;language-text&quot;&gt;transition&lt;/code&gt; tag.&lt;/p&gt;
&lt;p&gt;{% highlight html %}
&lt;transition name=&quot;fade&quot;&gt;
&lt;div v-show=&quot;isPopupOpen&quot;&gt;
… Pop-up element content
&lt;/div&gt;
&lt;/transition&gt;
{% endhighlight %}&lt;/p&gt;
&lt;p&gt;This element takes care of the transition logic. You don’t need to bother when to start or stop transition. All you’ve to mention is what kind of transition you want to see and for how long. This can be done using some CSS classes provided by VueJS.&lt;/p&gt;
&lt;p&gt;{% highlight css %}
.fade-enter-active, .fade-leave-active {
transition: opacity 0.5s ease-out;
}&lt;/p&gt;
&lt;p&gt;.fade-enter, .fade-leave-to {
opacity: 0;
}
{% endhighlight %}&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; The &lt;code class=&quot;language-text&quot;&gt;fade&lt;/code&gt; prefix used in this class should match the &lt;code class=&quot;language-text&quot;&gt;name&lt;/code&gt; attribute of the &lt;code class=&quot;language-text&quot;&gt;transition&lt;/code&gt; component.&lt;/p&gt;
&lt;p&gt;For blurring the form and the list elements once the pop-up appears, they should be wrapped inside a contained conditionally bounded using &lt;code class=&quot;language-text&quot;&gt;v-bind&lt;/code&gt; attribute.&lt;/p&gt;
&lt;p&gt;{% highlight html %}&lt;/p&gt;
&lt;div v-bind:class=&quot;[isPopupOpen ? &apos;disabled&apos; : &apos;&apos;, ‘container’]&quot;&gt;
    … Form and Todo List element content
&lt;/div&gt;
{% endhighlight %}
&lt;p&gt;And add the required &lt;strong&gt;CSS&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;{% highlight css %}
.container {
transition: all 0.05s ease-out;
}&lt;/p&gt;
&lt;p&gt;.disabled {
filter: blur(2px);
opacity: 0.4;
pointer-events: none;  // This makes sure that nothing else is clicked other than pop-up options
}
{% endhighlight %}&lt;/p&gt;
&lt;p&gt;You can check the complete code and view &lt;a href=&quot;https://codepen.io/AshBardhan/pen/zPVmvj&quot;&gt;demo&lt;/a&gt;.&lt;/p&gt;
&lt;h3 id=&quot;advantages&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#advantages&quot; aria-label=&quot;advantages permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Advantages&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Clean &lt;/li&gt;
&lt;li&gt;Semantic&lt;/li&gt;
&lt;li&gt;Maintainable&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;This is how you can create applications and make animations in more simpler and semantic way. However, you must have intermediate knowledge of &lt;strong&gt;HTML&lt;/strong&gt;, &lt;strong&gt;CSS&lt;/strong&gt; and &lt;strong&gt;JavaScript&lt;/strong&gt;. If you think &lt;strong&gt;VueJS&lt;/strong&gt; is promising, go ahead and try it out. There is much more that you will love to learn about. Check out the &lt;a href=&quot;https://vuejs.org/v2/guide/&quot;&gt;official documentation&lt;/a&gt;.&lt;/p&gt;</content:encoded><author>Ashish Bardhan</author></item><item><title><![CDATA[Why we've removed Inheritance/Extend from SASS & you should do the same!]]></title><description><![CDATA[SASS is a preprocessor that provides features like variables, nesting, mixins, inheritance and other nifty goodies and makes CSS clean and…]]></description><link>https://engineering.wingify.com//posts/sass-inheritance-removal/</link><guid isPermaLink="false">https://engineering.wingify.com//posts/sass-inheritance-removal/</guid><pubDate>Wed, 29 Nov 2017 18:30:00 GMT</pubDate><content:encoded>&lt;p&gt;SASS is a preprocessor that provides features like variables, nesting, mixins, inheritance and other nifty goodies and makes CSS clean and easy to maintain.&lt;/p&gt;
&lt;p&gt;The &lt;a href=&quot;http://sass-lang.com/guide#topic-7&quot;&gt;@extend&lt;/a&gt;  directive in SASS allows us to easily share styles between selectors.
But its usage can have adverse effects when used with bigger projects. Lets see how.&lt;/p&gt;
&lt;p&gt;In &lt;a href=&quot;https://app.vwo.com&quot;&gt;VWO’s&lt;/a&gt; SASS code, we have more than 50 files. The need of inheritance removal came when the code started to become unpredictable and difficult to debug. Difficulty in debugging made us override the CSS as and when new requirement came; otherwise it requires a lot of time to understand existing code of inheritance before starting, so that any new rule addition does not break the existing CSS. That’s how the need of @extend removal came.&lt;/p&gt;
&lt;p&gt;Here are the reasons why we discarded @extend.&lt;/p&gt;
&lt;h2 id=&quot;high-maintainability&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#high-maintainability&quot; aria-label=&quot;high maintainability permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;High maintainability&lt;/h2&gt;
&lt;p&gt;{% highlight css %}
.title {
text-transform: uppercase;
font-size: 11px;
}&lt;/p&gt;
&lt;p&gt;label {
@extend .title;
font-size: 13px;
}
{% endhighlight %}&lt;/p&gt;
&lt;p&gt;…and in the end of the file somewhere adding,&lt;/p&gt;
&lt;p&gt;{% highlight css %}
.title {
font-size: 12px;
}
{% endhighlight %}&lt;/p&gt;
&lt;p&gt;If this file is opened and looked up for the &lt;code class=&quot;language-text&quot;&gt;label&lt;/code&gt; rules, one would expect it to be of 13px but in reality, it will be of 12px.
&lt;code class=&quot;language-text&quot;&gt;&amp;lt;label&amp;gt;I will always be 12px&amp;lt;/label&amp;gt;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;This is because on compilation the result looks like this:&lt;/p&gt;
&lt;p&gt;{% highlight css %}
.title , label {
text-transform: uppercase;
}&lt;/p&gt;
&lt;p&gt;label {
font-size: 13px;
}&lt;/p&gt;
&lt;p&gt;.title , label {
font-size: 12px;
}
{% endhighlight %}&lt;/p&gt;
&lt;p&gt;&lt;code class=&quot;language-text&quot;&gt;label&lt;/code&gt; shares the rules at the last definition of &lt;code class=&quot;language-text&quot;&gt;.title&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;If someone tries to override title and is not aware of the fact that it has been extended in some other class, the person might end up adding some wrong rules unintentionally.&lt;/p&gt;
&lt;h2 id=&quot;difficult-debugging&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#difficult-debugging&quot; aria-label=&quot;difficult debugging permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Difficult debugging&lt;/h2&gt;
&lt;p&gt;It becomes difficult to debug if the project’s CSS is large because you need to keep track of every extended class. If we consider the above example of &lt;code class=&quot;language-text&quot;&gt;label&lt;/code&gt; and &lt;code class=&quot;language-text&quot;&gt;.title&lt;/code&gt;, looking at the CSS in browser, it will be difficult for us to figure out the reason of font-size being 12px for &lt;code class=&quot;language-text&quot;&gt;label&lt;/code&gt;. It requires a lot of time of debug such code, especially if you have multiple SASS files.&lt;/p&gt;
&lt;h2 id=&quot;increased-file-size&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#increased-file-size&quot; aria-label=&quot;increased file size permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Increased file size&lt;/h2&gt;
&lt;p&gt;After we removed @extend from all our sass files, size got reduced from 164KB =&gt; 154KB&lt;/p&gt;
&lt;h2 id=&quot;distributed-code&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#distributed-code&quot; aria-label=&quot;distributed code permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Distributed Code&lt;/h2&gt;
&lt;p&gt;The code for one class should be contained at one place rather than distributed at many places. Classes or Placeholders extended in virtue of maintaining the code actually make it untidy and difficult to understand in case of multiple CSS files or long CSS code.
Here’s an example:&lt;/p&gt;
&lt;p&gt;{% highlight css %}
.font--13 {
font-size: 13px;
}&lt;/p&gt;
&lt;p&gt;.tile {
display: inline-block;
border: 1px solid;
@extend .font--13;
}&lt;/p&gt;
&lt;p&gt;%size--200 {
width: 200px;
height: 200px;
}&lt;/p&gt;
&lt;p&gt;.tile--200 {
@extend .tile;
@extend %size--200;
font-size: 14px;
}&lt;/p&gt;
&lt;p&gt;.circle--200 {
@extend %size--200;
}
{% endhighlight %}&lt;/p&gt;
&lt;p&gt;Generated Code:&lt;/p&gt;
&lt;p&gt;{% highlight css %}
.font--13, .tile, .tile--200 {
font-size: 13px;
}&lt;/p&gt;
&lt;p&gt;.tile, .tile--200 {
display: inline-block;
border: 1px solid;
}&lt;/p&gt;
&lt;p&gt;.tile--200, .circle--200 {
width: 200px;
height: 200px;
}&lt;/p&gt;
&lt;p&gt;.tile--200 {
font-size: 14px;
}
{% endhighlight %}&lt;/p&gt;
&lt;p&gt;The generated code is highly unreadable and not at all lucid. This particular code has rules staggered at 4 places just for class .tile--200.&lt;/p&gt;
&lt;h2 id=&quot;solution-to-extend&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#solution-to-extend&quot; aria-label=&quot;solution to extend permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Solution to @extend&lt;/h2&gt;
&lt;p&gt;We solved these problems with the help of &lt;a href=&quot;http://sass-lang.com/guide#topic-6&quot;&gt;mixins&lt;/a&gt; or directly writing the rule if it’s a one liner.&lt;/p&gt;
&lt;p&gt;For e.g. in above example: SASS would be&lt;/p&gt;
&lt;p&gt;{% highlight css %}
.font--13 {
font-size: 13px;
}&lt;/p&gt;
&lt;p&gt;@mixin tile {
display: inline-block;
border: 1px solid;
font-size: 13px;
}&lt;/p&gt;
&lt;p&gt;.tile {
@include tile;
}&lt;/p&gt;
&lt;p&gt;@mixin size--200 {
width: 200px;
height: 200px;
}&lt;/p&gt;
&lt;p&gt;.tile--200 {
@include tile;
@include size--200;
font-size: 14px;
}&lt;/p&gt;
&lt;p&gt;.circle--200 {
@include size--200;
}
{% endhighlight %}&lt;/p&gt;
&lt;p&gt;Generated CSS code will be:&lt;/p&gt;
&lt;p&gt;{% highlight css %}
.font--13 {
font-size: 13px;
}&lt;/p&gt;
&lt;p&gt;.tile {
display: inline-block;
border: 1px solid;
font-size: 13px;
}&lt;/p&gt;
&lt;p&gt;.tile--200 {
display: inline-block;
border: 1px solid;
font-size: 13px;
width: 200px;
height: 200px;
font-size: 14px;
}&lt;/p&gt;
&lt;p&gt;.circle--200 {
width: 200px;
height: 200px;
}
{% endhighlight %}&lt;/p&gt;
&lt;p&gt;This code has rules for every class maintained at just one place making it easier to understand and lucid which results in easy debugging and requires low maintenance.&lt;/p&gt;
&lt;p&gt;All these reasons forced us to remove @extend from our SASS and hence our code and coders lived happily ever after!&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Cheers!&lt;/strong&gt;&lt;/p&gt;</content:encoded><author>Chhavi Khandelwal</author></item><item><title><![CDATA[Leveraging Kafka Streams to reduce DB Hits]]></title><description><![CDATA[I have been working with Apache Kafka for more than 4 years now and have seen it evolve from a basic distributed commit log service…]]></description><link>https://engineering.wingify.com//posts/leveraging-kafka-streams-to-reduce-db-hits/</link><guid isPermaLink="false">https://engineering.wingify.com//posts/leveraging-kafka-streams-to-reduce-db-hits/</guid><pubDate>Wed, 25 Oct 2017 18:30:00 GMT</pubDate><content:encoded>&lt;p&gt;I have been working with &lt;a href=&quot;https://kafka.apache.org/&quot; title=&quot;** Apache Kafka**&quot;&gt;&lt;strong&gt;Apache Kafka&lt;/strong&gt;&lt;/a&gt; for more than 4 years now and have seen it evolve from a basic distributed commit log service (Something very similar to Transaction log or Operation log) to a full fledged tool for data pipelining and become the backbone of data collection platforms.
For those who don’t know about Kafka, it was developed by LinkedIn, and was open sourced in early 2011. It is a distributed pub-sub messaging system that is designed to be fast, scalable and durable. Like other pub-sub messaging systems, Kafka maintains stream(s) of messages in topic(s). &lt;strong&gt;&lt;em&gt;Producers&lt;/em&gt;&lt;/strong&gt; are special processors that write data to &lt;strong&gt;&lt;em&gt;Topics&lt;/em&gt;&lt;/strong&gt; while, &lt;strong&gt;&lt;em&gt;Consumers&lt;/em&gt;&lt;/strong&gt; read from topics, to store data to extract some meaningful information that might be required at a later stage. Since Kafka is a distributed system, topics are partitioned and replicated across multiple nodes. Kafka lets you store streams of messages in a fault-tolerant way and allows processing these streams in near realtime.&lt;/p&gt;
&lt;p&gt;Apache Kafka has gone through various design changes since its inception, Kafka 0.9 came out with support of High Level Consumer API, which helped in removing dependency of &lt;a href=&quot;http://zookeeper.apache.org/&quot;&gt;&lt;strong&gt;&lt;em&gt;Apache Zookeeper&lt;/em&gt;&lt;/strong&gt;&lt;/a&gt;. It is now only used to manage metadata of topics created in Kafka. Also, in case some Kafka node goes down or rebalance is triggered due to addition of new nodes, Zookeeper runs the leader election algorithm in a fair and consistent manner. For versions less than 0.9 Apache Zookeeper was also used for managing the &lt;strong&gt;&lt;em&gt;offsets&lt;/em&gt;&lt;/strong&gt; of the consumer group. &lt;strong&gt;&lt;em&gt;Offset management&lt;/em&gt;&lt;/strong&gt; is the mechanism, which tracks the number of records that have been consumed from a partition of a topic for a particular consumer group.
Kafka 0.10 came out with out of the box support for &lt;strong&gt;Stream Processing&lt;/strong&gt;. This streaming platform enables capturing flow of events and changes caused by these events, and store these to other data systems such as RDBMS, key-value stores, or some warehouse depending upon use case.  I was really happy and took it for a run by doing some counting aggregations. The aggregation was fast and I hardly had to write 50 lines for it. I was very happy and impressed with results. I streamed around 2 million events in around a minute on my laptop with couple of instances only. But I never got a chance to use it in production for a year or so.&lt;/p&gt;
&lt;p&gt;Around 3 months back when our team started stress testing backend stores by generating a lot of data, our backend stores started to give up due to the high number of insertion and updates. We didn’t have the choice to add more hardware as we were already using a lot of resources and wanted a solution that fits our current bill. Our data team had lot of discussions and I heard a lot of people talk about things like &lt;a href=&quot;http://samza.apache.org/&quot; title=&quot;Apache Samza&quot;&gt;&lt;strong&gt;&lt;em&gt;Apache Samza&lt;/em&gt;&lt;/strong&gt;&lt;/a&gt;, &lt;a href=&quot;https://spark.apache.org/&quot; title=&quot;***Apache Spark***&quot;&gt;&lt;strong&gt;&lt;em&gt;Apache Spark&lt;/em&gt;&lt;/strong&gt;&lt;/a&gt;, &lt;a href=&quot;https://flink.apache.org/&quot; title=&quot;***Apache Flink***&quot;&gt;&lt;strong&gt;&lt;em&gt;Apache Flink&lt;/em&gt;&lt;/strong&gt;&lt;/a&gt; etc. Because, we have a small team, adding another component in technology stack was not a good idea and I didn’t want team to spend time learning about these technologies with product release around the corner.
Since our data pipeline is built around Kafka, I started playing around with data. The idea was to convert multiple updates to the backend stores into a single update/insert to ensure that number of hits that our DB is taking is reduced. Since we process a lot of data, we thought about windowing our events based on time and aggregating them. I started to work on it and in matter of hours my streaming application was ready. We started with 1 minute window and we were surprised with the result. We were able to reduce DB hits by 70%. &lt;strong&gt;YES 70 PERCENT!!!!!!&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Here are the screenshots  from one of our servers that show the impact of window aggregation.&lt;/p&gt;
&lt;div style=&quot;text-align:center; margin: 10px;&quot;&gt;
  &lt;img src=&quot;/images/2017/10/kafka-streams-before-aggregation.png&quot; style=&quot;box-shadow: 2px 2px 10px 1px #aaa&quot;&gt;
  &lt;div style=&quot;margin: 10px;&quot;&gt;&lt;b&gt;Before Aggregation&lt;/b&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;div style=&quot;text-align:center; margin: 10px;&quot;&gt;
  &lt;img src=&quot;/images/2017/10/kafka-streams-after-aggregation.png&quot; style=&quot;box-shadow: 2px 2px 10px 1px #aaa&quot;&gt;
  &lt;div style=&quot;margin: 10px;&quot;&gt;&lt;b&gt;After Aggregation&lt;/b&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;With streaming capabilities built into it, &lt;strong&gt;Apache Kafka&lt;/strong&gt; has become one of the most powerful tool that allows you to store and aggregate data at insane speed. And we’ll see a gain in its  adoption in coming years.&lt;/p&gt;
&lt;h3 id=&quot;lets-see-how-kafka-streams-work&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#lets-see-how-kafka-streams-work&quot; aria-label=&quot;lets see how kafka streams work permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Let’s see how Kafka Streams work&lt;/h3&gt;
&lt;p&gt;Kafka Streams allows us to perform stream processing, hence requires some sort of internal state management. This internal state is managed in &lt;strong&gt;state stores which uses RocksDB&lt;/strong&gt;. A state store can be lost on failure or fault-tolerant restored after the failure. The default implementation used by Kafka Streams DSL is a fault-tolerant state store using&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;An internally created and compacted changelog topic (for fault-tolerance)&lt;/li&gt;
&lt;li&gt;One (or multiple) RocksDB instances (for cached key-value lookups). Thus, in case of starting/stopping applications and rewinding/reprocessing, this internal data needs to get managed correctly.&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&quot;kstream-and-ktable&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#kstream-and-ktable&quot; aria-label=&quot;kstream and ktable permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;KStream and KTable&lt;/h4&gt;
&lt;p&gt;&lt;strong&gt;KStream&lt;/strong&gt; is an abstraction of a record stream of Key-Value pairs. So if you have a click stream coming in, and you are trying to aggregate session level information, the key will be session id and the other information will be the value. Similarly for URL level aggregation, a combination of URL and session will be the key.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;KTable&lt;/strong&gt; is an abstraction of a changelog stream from a primary-keyed table. Each record in this stream is an update on the primary-keyed table with the record key as the primary key.
The aggregation results are stored in KTable. Intermediate aggregation uses a RocksDB instance as key-value state store that also persists to local disk. Flushing to disk happens asynchronously to keep it fast and non blocking. An internal compacted changelog topic is also created. The state store sends changes to the changelog topic in a batch, either when a default batch size has been reached or when the commit interval is reached.
A pictorial representation of what happens under the hood is given below&lt;/p&gt;
&lt;div style=&quot;text-align:center; margin: 10px;&quot;&gt;
  &lt;img src=&quot;/images/2017/10/kafka-streams-internal-functioning.png&quot;&gt;
  &lt;div style=&quot;margin: 10px;&quot;&gt;
    &lt;b&gt;Kafka Streams Internal Functioning&lt;/b&gt;&lt;br&gt;
    &lt;i&gt;*Image is taken from Apache Kafka documentation&lt;/i&gt;
  &lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;Kafka Streams commit the current processing progress in regular intervals. If a commit is triggered, all state stores need to flush data to disc, i.e., all internal topics needs to get flushed to Kafka. Finally, all current topic offsets are committed to Kafka. In case of failure and restart, the application can resume processing from its last commit point.&lt;/p&gt;
&lt;h3 id=&quot;lets-understand-this-with-help-of-an-example&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#lets-understand-this-with-help-of-an-example&quot; aria-label=&quot;lets understand this with help of an example permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Let’s understand this with help of an example&lt;/h3&gt;
&lt;p&gt;Imagine a stream of such events coming to server for a very high traffic website. Let’s assume there is a big web gaming platform where 50K-80K concurrent users generate about 80K-120K events per second and there is a requirement to find following things:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Number of clicks user has done in a session&lt;/li&gt;
&lt;li&gt;Total Pages he has viewed in a session&lt;/li&gt;
&lt;li&gt;Total amount of time user has spent in a session.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Let the JSON structure be as follows:&lt;/p&gt;
&lt;p&gt;{% highlight json %}
{
&quot;uuid&quot;:&quot;user id&quot;,
&quot;session&lt;em&gt;id&quot;: &quot;some uuid&quot;,
&quot;event&quot;: &quot;click/page&lt;/em&gt;view&quot;,
&quot;time_spent&quot;:14
}
{% endhighlight %}&lt;/p&gt;
&lt;p&gt;Ingestion at above mentioned pace in a DB or ensuring that these events gets stored in DB in itself is a challenge. A lot of hardware will be required to cope with this traffic as it is. Hence, it doesn’t make sense to store data directly in DB. A streaming application is a very good fit here. A streaming application is going to leverage the fact that for most of the user the clicks and page views will be concentrated in a time window. So it is possible that in 5 minutes a user might be clicking x times and giving y pageviews on an average. We can introduce a 5 minute window and club these request to form a single equivalent DB request. Hence reducing (x+y) hits to 1 hit in a window of 5 minutes. Thus reducing the traffic to 1/(x+y) of what was coming earlier.&lt;/p&gt;
&lt;p&gt;I have written a &lt;a href=&quot;https://github.com/aman1064/kafka-streams-example&quot; title=&quot; Sample Project&quot;&gt;&lt;strong&gt;Sample Kafka Streams Project&lt;/strong&gt;&lt;/a&gt; to make it easier for you to understand.
Let’s take a look at sequence diagram below. This diagram shows how various components of sample project interact with each other.&lt;/p&gt;
&lt;div style=&quot;text-align:center; margin: 10px;&quot;&gt;
  &lt;img src=&quot;/images/2017/10/kafka-streams-aggregation-sequence.png&quot;&gt;
  &lt;div style=&quot;margin: 10px;&quot;&gt;
    &lt;b&gt;Kafka Streams Sequence Diagram&lt;/b&gt;&lt;br&gt;
  &lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;All this flow is defined with the help of Kafka Streams DSL, the code snippet is given below&lt;/p&gt;
&lt;p&gt;{% highlight java %}
//Defining Source Streams from multiple topics.
KStream&amp;#x3C;String, ClickStream&gt; clickStream = kStreamBuilder.stream(stringSerde, clickStreamSerde,
Main.TOPIC_PROPERTIES.getProperty(&quot;topic.click.input&quot;).split(&quot;,&quot;));&lt;/p&gt;
&lt;p&gt;//Kafka Streams DSL in action with filtering and cleaning logic and passing it through aggregation collector
clickStream
.filter((k,v) -&gt; (v!=null))
.map((k, v) -&gt;
new KeyValue&amp;#x3C;&gt;(v.getSessionId(),v))
.through(stringSerde, clickStreamSerde, Main.TOPIC&lt;em&gt;PROPERTIES.getProperty(&quot;topic.click.output&quot;))
.groupBy((k, v) -&gt; k, stringSerde, clickStreamSerde)
.aggregate(ClickStreamCollector::new, (k, v, clickStreamCollector) -&gt; clickStreamCollector.add(v),
TimeWindows.of(1 * 60 * 1000), collectorSerde,
Main.TOPIC&lt;/em&gt;PROPERTIES.getProperty(&quot;topic.click.aggregation&quot;))
.to(windowedSerde, collectorSerde, new ClickStreamPartitioner(), Main.TOPIC_PROPERTIES.getProperty(&quot;topic.click.summary&quot;));
{% endhighlight %}&lt;/p&gt;
&lt;p&gt;It’s worth noting that for each step we need to define a serializer and deserializer. In above code snippet&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;&lt;em&gt;stringSerde: Defines the Serialization and Deserialization for String&lt;/em&gt;&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;em&gt;clickStreamSerde: Defines the Serialization and Deserialization for Raw click Data&lt;/em&gt;&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;em&gt;collectorSerde: Defines the Serialization and Deserialization for RocksDB intermediate storage.&lt;/em&gt;&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;em&gt;windowedSerde: Defines the serialization and Deserialization for Kafka Windowed Aggregation storage&lt;/em&gt;&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Its very easy to implement streams over Kafka and it can be leveraged to reduce the DB traffic and for other applications, where windowing or sessionization makes sense. You can play around with this project and in case you want to reach out to me or have any doubt please drop your queries in comments section.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Happy Streaming..!&lt;/strong&gt;&lt;/p&gt;</content:encoded><author>Amandeep Singh</author></item><item><title><![CDATA[Migrating towards Yarn and Webpack]]></title><description><![CDATA[For the past couple of years, we have been using require.js for module loading and Grunt for automating tasks on front-end, for one out of…]]></description><link>https://engineering.wingify.com//posts/migrating-towards-yarn-webpack/</link><guid isPermaLink="false">https://engineering.wingify.com//posts/migrating-towards-yarn-webpack/</guid><pubDate>Tue, 03 Oct 2017 18:30:00 GMT</pubDate><content:encoded>&lt;p&gt;&lt;img src=&quot;/images/2017/10/migrating-towards-yarn-webpack-header.jpg&quot;&gt;&lt;/p&gt;
&lt;p&gt;For the past couple of years, we have been using &lt;a href=&quot;http://requirejs.org/&quot;&gt;require.js&lt;/a&gt; for module loading and &lt;a href=&quot;https://gruntjs.com/&quot;&gt;Grunt&lt;/a&gt; for automating tasks on front-end, for one out of many projects we have in Wingify. The project has a huge code-base and has many independent components inside it with some shared utilities. Also, there was no concrete build system which could be scaled upon adding new components.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Require.js&lt;/strong&gt; was being used for good code-structuring, managing modules and their loading. All the different modules were having their own &lt;code class=&quot;language-text&quot;&gt;require-config.js&lt;/code&gt; file to define rules for a particular module.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Grunt&lt;/strong&gt; was being used for automating different tasks required to speed up mundane work. We had a number of tasks like the &lt;a href=&quot;https://github.com/gfranko/amdclean&quot;&gt;require-amdclean&lt;/a&gt; task, concatenating different script / CSS files, minification of files, cache-busting mechanism and so on.&lt;/p&gt;
&lt;p&gt;Following are some benefits we were getting from the &lt;code class=&quot;language-text&quot;&gt;require-amdclean&lt;/code&gt; task:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;We didn&apos;t have to include &lt;code class=&quot;language-text&quot;&gt;require.js&lt;/code&gt; in production, thus, saving some bytes.&lt;/li&gt;
&lt;li&gt;Generation of single js file entirely in Vanilla JavaScript.&lt;/li&gt;
&lt;li&gt;Get rid of file size/source code readability concerns.&lt;/li&gt;
&lt;li&gt;It was a great fit to be used as a standalone Javascript library, which is exactly our case.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Everything was working as expected but maintenance, performance, and scale were the issues. We had so many healthy discussions regarding improving things and thus we thought of upgrading our tech stack too. Also, as I mentioned we didn&apos;t have a concrete build system; it was the right time to investigate further. We were ready to spend some quality time in researching technologies which could fit in our build system. &lt;a href=&quot;https://twitter.com/gauravmuk&quot;&gt;Gaurav Nanda&lt;/a&gt; and I took a break from our daily chores and read many articles/blogs and the &lt;em&gt;not-so-useful&lt;/em&gt; official docs to get a good command over various technologies. Migrating from &lt;code class=&quot;language-text&quot;&gt;Grunt&lt;/code&gt; to &lt;code class=&quot;language-text&quot;&gt;Gulp&lt;/code&gt; wasn&apos;t helping us since build time was nearly the same. The task which took a lot of time was the &lt;code class=&quot;language-text&quot;&gt;require-amdclean&lt;/code&gt; task, taking around &lt;code class=&quot;language-text&quot;&gt;10 seconds&lt;/code&gt; even for adding just a single character like &lt;code class=&quot;language-text&quot;&gt;;&lt;/code&gt; while working in the development environment.&lt;/p&gt;
&lt;h3 id=&quot;migrating-from-npm-to-yarn---first-step-towards-a-new-journey&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#migrating-from-npm-to-yarn---first-step-towards-a-new-journey&quot; aria-label=&quot;migrating from npm to yarn   first step towards a new journey permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Migrating from NPM to Yarn - First step towards a new journey&lt;/h3&gt;
&lt;p&gt;After reading about &lt;a href=&quot;https://yarnpkg.com/en/&quot;&gt;Yarn&lt;/a&gt;, the team was really curious to play with this yet new package manager aka dependency manager. When we benchmarked the results, we were literally stunned by the time difference between NPM and Yarn in fetching up resources. Yarn achieves this speed by introducing parallelism and its performance and security via maintaining a &lt;code class=&quot;language-text&quot;&gt;yarn.lock&lt;/code&gt; file.&lt;/p&gt;
&lt;p&gt;For a total of &lt;code class=&quot;language-text&quot;&gt;34&lt;/code&gt; packages in total, the following stats would please your eyes too :)&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;yarn@1.0.2
npm@3.10.10&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id=&quot;stats-when-we-did-a-fresh-install&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#stats-when-we-did-a-fresh-install&quot; aria-label=&quot;stats when we did a fresh install permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Stats when we did a Fresh Install&lt;/h4&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Package manager&lt;/th&gt;
&lt;th&gt;Time taken&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code class=&quot;language-text&quot;&gt;npm&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;3 minutes 12 seconds&lt;/strong&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code class=&quot;language-text&quot;&gt;yarn&lt;/code&gt; &lt;em&gt;(without yarn.lock file)&lt;/em&gt;&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;1 minute 33 seconds&lt;/strong&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code class=&quot;language-text&quot;&gt;yarn&lt;/code&gt; &lt;em&gt;(with yarn.lock file)&lt;/em&gt;&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;16 seconds&lt;/strong&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h4 id=&quot;running-the-commands-with-already-installed-packages&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#running-the-commands-with-already-installed-packages&quot; aria-label=&quot;running the commands with already installed packages permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Running the commands with already installed packages&lt;/h4&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Package manager&lt;/th&gt;
&lt;th&gt;Time taken&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code class=&quot;language-text&quot;&gt;npm&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;7 seconds&lt;/strong&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code class=&quot;language-text&quot;&gt;yarn&lt;/code&gt; &lt;em&gt;(with yarn.lock file)&lt;/em&gt;&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;6 seconds&lt;/strong&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;&lt;img src=&quot;/images/2017/10/migrating-towards-yarn-webpack-benchmark.png&quot;&gt;&lt;/p&gt;
&lt;p&gt;Yarn offers a lot more besides its fast speed, security, and reliability. Check &lt;a href=&quot;https://yarnpkg.com/en/docs/cli/&quot;&gt;these&lt;/a&gt; commands Yarn offers.&lt;/p&gt;
&lt;p&gt;Since we were using &lt;a href=&quot;(%20https://bower.io/)&quot;&gt;bower&lt;/a&gt; too, our first step was to port all the dependencies and dev-dependencies listed in our &lt;code class=&quot;language-text&quot;&gt;bower.json&lt;/code&gt; file to &lt;code class=&quot;language-text&quot;&gt;package.json&lt;/code&gt;. This was a time-consuming task since we had a huge list of packages. After successful porting of packages and validating the version numbers with the previous packages, we were all set to switch to Yarn. This also helped in keeping just one file for managing packages. We are no longer using bower. Even bower&apos;s &lt;a href=&quot;https://bower.io/&quot;&gt;official site&lt;/a&gt; recommends using Yarn and Webpack :)&lt;/p&gt;
&lt;h3 id=&quot;why-switch-to-webpack-2&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#why-switch-to-webpack-2&quot; aria-label=&quot;why switch to webpack 2 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Why switch to Webpack 2&lt;/h3&gt;
&lt;p&gt;It wasn&apos;t an easy task to accomplish since Webpack is a module bundler rather than a task runner. We were so accustomed to using task runners along with the old-fashioned &lt;code class=&quot;language-text&quot;&gt;require.js&lt;/code&gt; based module management that it took a good amount of time figuring out how to proceed with our mini-app&apos;s new build system.&lt;/p&gt;
&lt;p&gt;Apart from the numerous benefits of using Webpack, the most notable features, especially for our codebase and the build system, were:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Easy integration with &lt;code class=&quot;language-text&quot;&gt;npm&lt;/code&gt;/&lt;code class=&quot;language-text&quot;&gt;yarn&lt;/code&gt; and seamless handling of multiple module formats. We now use two of its kind, one is &lt;code class=&quot;language-text&quot;&gt;UMD&lt;/code&gt; and the other one is &lt;code class=&quot;language-text&quot;&gt;this&lt;/code&gt; target option (we have such a requirement).&lt;/li&gt;
&lt;li&gt;Single main entry and one single bundled output - exactly what we needed.&lt;/li&gt;
&lt;li&gt;Cache busting(hashing) - Very very easy to implement and get benefitted.&lt;/li&gt;
&lt;li&gt;Building different, independent, and standalone modules simultaneously. Thanks to &lt;a href=&quot;https://github.com/trivago/parallel-webpack&quot;&gt;parallel-webpack&lt;/a&gt;!&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Using webpack-loaders -&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/babel/babel-loader&quot;&gt;babel-loader&lt;/a&gt; - so that we could start writing &lt;code class=&quot;language-text&quot;&gt;ES6&lt;/code&gt; compatible code even with our &lt;code class=&quot;language-text&quot;&gt;require.js&lt;/code&gt; module management system.&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/MoOx/eslint-loader&quot;&gt;eslint-loader&lt;/a&gt; - which allows identifying and reporting on patterns found in ECMAScript/JavaScript code&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/webpack-contrib/css-loader&quot;&gt;css-loader&lt;/a&gt; - for bundling CSS&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&quot;converting-to-webpack-2---a-transcendent-journey-ahead&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#converting-to-webpack-2---a-transcendent-journey-ahead&quot; aria-label=&quot;converting to webpack 2   a transcendent journey ahead permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Converting to Webpack 2 - A transcendent journey ahead&lt;/h3&gt;
&lt;p&gt;In the beginning, it looked like just porting the &lt;code class=&quot;language-text&quot;&gt;require.js&lt;/code&gt; configuration to Webpack and we&apos;re done. A big NO! This thought was absolutely wrong. There were so many scenarios we had to deal with. We will discuss this in detail as we move along.&lt;/p&gt;
&lt;p&gt;First thing first, a clear understanding of what exactly Webpack is and how does it bundle the modules are must. Simply copy-pasting the configuration file from the official website and tweaking it won&apos;t help in a long run. One must be very clear regarding the fundamentals on which Webpack is built upon.&lt;/p&gt;
&lt;p&gt;Problems which we needed to tackle were:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Different modules in the same app, having different configuration files.&lt;/li&gt;
&lt;li&gt;Webpack config should be modular in itself and be able to run multiple configs at once so that we should be able to add/remove a new module easily without affecting any existing one.&lt;/li&gt;
&lt;/ol&gt;
&lt;h4 id=&quot;installing-webpack&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#installing-webpack&quot; aria-label=&quot;installing webpack permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Installing Webpack&lt;/h4&gt;
&lt;p&gt;&lt;strong&gt;Via Yarn&lt;/strong&gt; &lt;em&gt;(recommended)&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;{% highlight js %}
yarn add --dev webpack
{% endhighlight %}&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Via NPM&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;{% highlight js %}
npm install webpack --save-dev
{% endhighlight %}&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Configuration&lt;/strong&gt; -&lt;/p&gt;
&lt;p&gt;A basic configuration file looks like:&lt;/p&gt;
&lt;p&gt;{% highlight js %}
// Filename: webpack.config.js&lt;/p&gt;
&lt;p&gt;const path = require(&apos;path&apos;);
const webpack = require(&apos;webpack&apos;);
module.exports = {
context: path.resolve(&lt;strong&gt;dirname, &apos;src&apos;),
entry: {
app: &apos;./app.js&apos;,
},
output: {
path: path.resolve(&lt;/strong&gt;dirname, &apos;dist&apos;),
filename: &apos;[name].bundle.js&apos;,
},
};
{% endhighlight %}&lt;/p&gt;
&lt;p&gt;Check &lt;a href=&quot;https://webpack.js.org/configuration/#options&quot;&gt;this&lt;/a&gt; for knowing the role of each key.&lt;/p&gt;
&lt;p&gt;Since we needed to support different modules we had to have different config files for each of our module.&lt;/p&gt;
&lt;p&gt;{% highlight js %}
// Filename webpack.config.js&lt;/p&gt;
&lt;p&gt;/**&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Method to return a desired config with the necessary options&lt;/li&gt;
&lt;li&gt;@param  {Object} options&lt;/li&gt;
&lt;li&gt;@return {Object} - Desired config Object as per webpack 2 docs
*/
function executeWebpackConfig(options) {
return {
devtool: options.devtool === &apos;&apos; ? options.devtool : &apos;source-map&apos;,
entry: options.entry,
output: options.output,
module: options.module,
resolve: options.resolve,
plugins: options.plugins || []
};
}&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;// Add/remove different modules&apos; corresponding config files
let multipleConfigs = [
// For building single bundled JS file
require(&apos;./build/module-A/webpack.main&apos;),
// Corresponding bundled CSS file
require(&apos;./build/module-A/webpack.main.assets&apos;),&lt;/p&gt;
&lt;p&gt;  require(&apos;./build/module-B/webpack.main&apos;),
require(&apos;./build/module-B/webpack.main.assets&apos;),&lt;/p&gt;
&lt;p&gt;  require(&apos;./build/module-C/webpack.main&apos;),&lt;/p&gt;
&lt;p&gt;  require(&apos;./build/module-D/webpack.main&apos;),
require(&apos;./build/module-D/webpack-main.assets&apos;)
];&lt;/p&gt;
&lt;p&gt;multipleConfigs.map((config) =&gt; {
return executeWebpackConfig(config);
});&lt;/p&gt;
&lt;p&gt;module.exports = multipleConfigs;
{% endhighlight %}&lt;/p&gt;
&lt;p&gt;The above configuration is capable of handling &lt;code class=&quot;language-text&quot;&gt;n&lt;/code&gt; number of modules. Different modules will have at least one bundled JS file as the output. But we also needed to have a bundled CSS file corresponding to each module. So, we decided to have two different config files for every module which has both JS and CSS bundling, one for bundling JS and other for managing assets and bundling CSS files. Tasks like copying files from src to dist, updating the JS file name with a cache-busting hash(prod build) in the index.html file and so on were taken care of inside the assets config file.&lt;/p&gt;
&lt;p&gt;The above-mentioned break-down of a module into JS and CSS bundling helped us in having a clean, modular, and scalable approach for our new build system.
We also used parallel-webpack to speed up our build by running independent modules in parallel. But be very careful using it, since it spawns a new thread for each different task, which basically uses the different cores of a machine to process. Also, there should be a cap on the number of parallel-tasks to prevent overshooting of CPU usage.&lt;/p&gt;
&lt;h3 id=&quot;extraction-of-common-stuff-for-reusability-and-maintainability&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#extraction-of-common-stuff-for-reusability-and-maintainability&quot; aria-label=&quot;extraction of common stuff for reusability and maintainability permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Extraction of common stuff for reusability and maintainability&lt;/h3&gt;
&lt;p&gt;Let&apos;s discuss Webpack &lt;code class=&quot;language-text&quot;&gt;module-rules&lt;/code&gt; and &lt;code class=&quot;language-text&quot;&gt;resolve-aliases&lt;/code&gt; which play a significant role, before advancing further with the creation of common webpack-configuration helper methods.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;code class=&quot;language-text&quot;&gt;module rules&lt;/code&gt;&lt;/strong&gt; - Create aliases to import or require certain modules more easily. This basically tells how to read a module and to use it.&lt;/p&gt;
&lt;p&gt;We used &lt;code class=&quot;language-text&quot;&gt;expose-loader&lt;/code&gt; and &lt;code class=&quot;language-text&quot;&gt;imports-loader&lt;/code&gt; depending on the use-case.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/webpack-contrib/expose-loader&quot;&gt;expose-loader&lt;/a&gt; - adds modules to the global object. This is useful for debugging or supporting libraries that depend on libraries in globals.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/webpack-contrib/imports-loader&quot;&gt;imports-loader&lt;/a&gt; - is useful for third-party modules that rely on global variables like $ or this being the window object. The imports loader can add the necessary require(&apos;whatever&apos;) calls, so those modules work with Webpack.&lt;/p&gt;
&lt;p&gt;This is an obvious thing that we had same third-party libraries, wrappers over external libraries, and self-baked useful utilities shared across different modules. This means that our module-specific webpack config file would have the same set of repeated rules and aliases. Code duplication might seem a good fit here for readability but is really painful to maintain in a long run.&lt;/p&gt;
&lt;p&gt;Let&apos;s discuss how we managed to share the common module rules and resolve aliases across the different modules.&lt;/p&gt;
&lt;p&gt;Below is a generic utility file’s code which has two methods. One outputs whether a passed argument is an Object and the other one outputs whether it’s an array.&lt;/p&gt;
&lt;p&gt;{% highlight js %}
// Filename: GenericUtils.js&lt;/p&gt;
&lt;p&gt;module.exports = {
isObject: function (obj) {
return Object.prototype.toString.call(obj) === &apos;[object Object]&apos;;
},
isArray: function (arr) {
return Object.prototype.toString.call(arr) === &apos;[object Array]&apos;;
}
};
{% endhighlight %}&lt;/p&gt;
&lt;p&gt;Here&apos;s a list of common rules and aliases defined explicitly in a separate file.&lt;/p&gt;
&lt;p&gt;{% highlight js %}
// Filename: webpack.common-module-rules-and-alias.js&lt;/p&gt;
&lt;p&gt;const path = require(&apos;path&apos;);
let basePath = path.join(__dirname, &apos;/../&apos;);&lt;/p&gt;
&lt;p&gt;module.exports = {
alias: {
// Common thrid-party libraries being used in different modules
&apos;pubSub&apos;: basePath + &apos;node&lt;em&gt;modules/pubsub/dist/ba-tiny-pubsub.min&apos;,
&apos;select2&apos;: basePath + &apos;node&lt;/em&gt;modules/select2/dist/js/select2.full.min&apos;,
&apos;acrossTabs&apos;: basePath + &apos;node_modules/across-tabs/dist/across-tabs.this&apos;,
// ....more&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;text&quot;&gt;&lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;    // Common self-baked utilities
    &amp;#39;utils&amp;#39;: &amp;#39;lib/player/utils&amp;#39;,
    &amp;#39;storage&amp;#39;: &amp;#39;lib/player/storage&amp;#39;,
    // ....more

    // Common services
    &amp;#39;auth&amp;#39;: &amp;#39;lib/Auth&amp;#39;,
    &amp;#39;gaUtils&amp;#39;: &amp;#39;lib/GAUtils&amp;#39;,
    &amp;#39;DOMUtils&amp;#39;: &amp;#39;lib/DOMUtils&amp;#39;,
    &amp;#39;arrayUtils&amp;#39;: &amp;#39;lib/ArrayUtils&amp;#39;,
    // ....more

    // Common constants
    &amp;#39;AnalyticsEventEnum&amp;#39;: &amp;#39;lib/constants/AnalyticsEventEnum&amp;#39;,
    &amp;#39;MapTypeEnum&amp;#39;: &amp;#39;lib/constants/MapTypeEnum&amp;#39;,
    &amp;#39;segmentAnalyticsUtils&amp;#39;: &amp;#39;lib/analytics/SegmentAnalyticsUtils&amp;#39;,
    // ....more
},

rules: [
    { test: /jQuery/, loader: &amp;#39;expose-loader?$&amp;#39; },
    { test: /pubSub/, loader: &amp;#39;expose-loader?pubSub!imports-loader?jQuery&amp;#39; },
    { test: /select2/, loader: &amp;#39;expose-loader?select2!imports-loader?jQuery&amp;#39; },
    { test: /acrossTabs/, loader: &amp;#39;expose-loader?AcrossTabs&amp;#39; },
    // ....more

    { test: /utils/, loader: &amp;#39;expose-loader?utils&amp;#39; },
    { test: /storage/, loader: &amp;#39;expose-loader?storage&amp;#39; },
    // ....more

    { test: /auth/, loader: &amp;#39;expose-loader?auth&amp;#39; },
    { test: /gaUtils/, loader: &amp;#39;expose-loader?gaUtils&amp;#39; },
    { test: /DOMUtils/, loader: &amp;#39;expose-loader?DOMUtils&amp;#39; },
    { test: /arrayUtils/, loader: &amp;#39;expose-loader?arrayUtils&amp;#39; },
    // ....more

    { test: /AnalyticsEventEnum/, loader: &amp;#39;expose-loader?AnalyticsEventEnum&amp;#39; },
    { test: /MapTypeEnum/, loader: &amp;#39;expose-loader?MapTypeEnum&amp;#39; },
    { test: /segmentAnalyticsUtils/, loader: &amp;#39;expose-loader?segmentAnalyticsUtils&amp;#39; },
    // ....more
]&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;};
{% endhighlight %}&lt;/p&gt;
&lt;p&gt;We now had a common file where we could easily add/update/remove any rule and its corresponding alias. Now we needed to have a utility which combines the common rules and aliases with the already defined rules and aliases in a particular modules&apos; config file.&lt;/p&gt;
&lt;p&gt;{% highlight js %}
// Filename: rulesAndAliasUtil.js&lt;/p&gt;
&lt;p&gt;const moduleRulesAndAlias = require(&apos;./webpack.common-module-rules-and-alias&apos;);
const genericUtil = require(&apos;./genericUtil&apos;);&lt;/p&gt;
&lt;p&gt;module.exports = {
mergeRulesAndUpdate: function(testRules, config) {
if (testRules &amp;#x26;&amp;#x26; config &amp;#x26;&amp;#x26; config.module &amp;#x26;&amp;#x26; config.module.rules &amp;#x26;&amp;#x26;
genericUtil.isObject(config) &amp;#x26;&amp;#x26;
genericUtil.isArray(testRules)
) {
testRules.concat(moduleRulesAndAlias.rules);
for (let i = 0; i &amp;#x3C; testRules.length; i++) {
config.module.rules.push(testRules[i]);
}&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;text&quot;&gt;&lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;        return config;
    }
    return config;
},
mergeAliasAndUpdate: function (aliases, config) {
    if (aliases &amp;amp;&amp;amp; config &amp;amp;&amp;amp; config.resolve &amp;amp;&amp;amp;
        genericUtil.isObject(aliases) &amp;amp;&amp;amp; genericUtil.isObject(config)
    ) {
        let allAliases = Object.assign(aliases, moduleRulesAndAlias.alias);

        config.resolve.alias = allAliases;
        return config;
    }

    return config;
}&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;};
{% endhighlight %}&lt;/p&gt;
&lt;p&gt;Time to write our module specific config file. We&apos;ll demonstrate just one config file i.e. for moduleA and the others would look exactly the same except the options&apos; value as per module.&lt;/p&gt;
&lt;p&gt;Here&apos;s the full webpack config file for &lt;code class=&quot;language-text&quot;&gt;moduleA&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;{% highlight js %}
// Filename: webpack.moduleA.js&lt;/p&gt;
&lt;p&gt;const path = require(&apos;path&apos;);
const webpack = require(&apos;webpack&apos;);
const env = require(&apos;./../webpack.env&apos;).env; // Just to get the env(dev/prod), discussed in detail later&lt;/p&gt;
&lt;p&gt;const rulesAndAliasUtil = require(&apos;./utils/rulesAndAliasUtil&apos;);&lt;/p&gt;
&lt;p&gt;let basePath = path.join(_&lt;em&gt;dirname, &apos;/../&apos;);
let config = {
// Entry, file to be bundled
entry: {
&apos;moduleA&apos;: basePath + &apos;src/path/to/moduleA-entry.js&apos;,
},
devtool: env === &apos;build&apos; ? &apos;source-map&apos; : false,
output: {
// Output directory
path: basePath + &apos;dist/moduleA&apos;,
library: &apos;[name]&apos;,
// [hash:6] with add a SHA based on file changes if the env is build
filename: env === EnvEnum.BUILD ? &apos;[name]-[hash:6].min.js&apos; : &apos;[name].min.js&apos;,
libraryTarget: &apos;umd&apos;,
umdNamedDefine: true
},
module: {
rules: []
},
resolve: {
alias: {},
modules: [
// Files path which will be referenced while bundling
basePath + &apos;src&apos;,
basePath + &apos;node&lt;/em&gt;modules&apos;,
],
extensions: [&apos;.js&apos;] // File types
},
plugins: []
};&lt;/p&gt;
&lt;p&gt;// Following requirejs format - define how will they be exposed(via expose-loader or exports-loader) and their dependenices(via imports-loader)
let testRules = [
{ test: /jQuery/, loader: &apos;expose-loader?$&apos; },
{ test: /base64/, loader: &apos;exports-loader?Base64&apos; },
{ test: /ModuleSpecificEnum/, loader: &apos;expose-loader?ModuleSpecificEnum&apos; }
];&lt;/p&gt;
&lt;p&gt;// Following requirejs format - define the paths of the libs/constants/vendor specific to this moduleA only
let moduleAlias = {
&apos;jQuery&apos;: &apos;moduleA/vendor/jquery-3.1.0&apos;,
&apos;base64&apos;: &apos;moduleA/vendor/base64&apos;,
&apos;ModuleSpecificEnum&apos;: &apos;moduleA/constants/ModuleSpecificEnum&apos;
}&lt;/p&gt;
&lt;p&gt;config = rulesAndAliasUtil.mergeRulesAndUpdate(testRules, config);
config = rulesAndAliasUtil.mergeAliasAndUpdate(moduleAlias, config);&lt;/p&gt;
&lt;p&gt;module.exports = config;
{% endhighlight %}&lt;/p&gt;
&lt;p&gt;This is a complete webpack config file for bundling JS file for &lt;code class=&quot;language-text&quot;&gt;moduleA&lt;/code&gt;. While configuring it, we defined different options, each one has its own purpose. To know more about each option, please refer &lt;a href=&quot;https://webpack.js.org/configuration/#options&quot;&gt;this&lt;/a&gt;.&lt;/p&gt;
&lt;h4 id=&quot;webpack-loaders&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#webpack-loaders&quot; aria-label=&quot;webpack loaders permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Webpack loaders&lt;/h4&gt;
&lt;p&gt;Webpack enables the use of loaders to preprocess files. This allows us to bundle any static resource way beyond JavaScript.&lt;/p&gt;
&lt;p&gt;We introduced two loaders for bundling JS resources inside our app.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/babel/babel-loader&quot;&gt;babel-loader&lt;/a&gt; - This package allows transpiling JavaScript files using Babel and Webpack. Thanks to babel-loader as we are fearlessly writing ES6 code and updating our mundane code.&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/MoOx/eslint-loader&quot;&gt;eslint-loader&lt;/a&gt; - This package allows identifying and reporting on patterns found in ECMAScript/JavaScript code.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Since we needed these two loaders for all our modules, we defined them in the same file we discussed earlier - &lt;code class=&quot;language-text&quot;&gt;rulesAndAliasUtil.js&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;{% highlight js %}
// Filename: rulesAndAliasUtil.js&lt;/p&gt;
&lt;p&gt;let defaultLoaders = [{
enforce: &apos;pre&apos;, // to check source files, not modified by other loaders (like babel-loader)
test: /(.js)$/,
exclude: /(node&lt;em&gt;modules|moduleA/vendor|moduleB/lib/lodash-template.min.js)/,
use: {
loader: &apos;eslint-loader&apos;,
options: {
emitError: true,
emitWarning: true,
failOnWarning: true, // will not allow webpack to build if eslint warns
failOnError: true // will not allow webpack to build if eslint fails
}
}
}, {
test: /(.js)$/,
exclude: /(node&lt;/em&gt;modules)/,
use: {
// babel-loader to convert ES6 code to ES5
loader: &apos;babel-loader&apos;,
options: {
presets: [&apos;env&apos;],
plugins: []
}
}
}];
{% endhighlight %}&lt;/p&gt;
&lt;p&gt;And updating the method: &lt;code class=&quot;language-text&quot;&gt;mergeRulesAndUpdate&lt;/code&gt; as follows&lt;/p&gt;
&lt;p&gt;{% highlight js %}
mergeRulesAndUpdate: function(testRules, config) {
if (testRules &amp;#x26;&amp;#x26; config &amp;#x26;&amp;#x26; config.module &amp;#x26;&amp;#x26; config.module.rules &amp;#x26;&amp;#x26;
genericUtil.isObject(config) &amp;#x26;&amp;#x26;
genericUtil.isArray(testRules)
) {
testRules.concat(moduleRulesAndAlias.rules);
for (let i = 0; i &amp;#x3C; testRules.length; i++) {
config.module.rules.push(testRules[i]);
}&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;text&quot;&gt;&lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;    // Default babel-loader and eslint-loader for all js-modules
    config.module.rules = config.module.rules.concat(defaultLoaders);

    return config;
}
return config;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;}
{% endhighlight %}&lt;/p&gt;
&lt;p&gt;This was all about bundling of JS modules. The same approach was followed for different modules. Now we were left with the bundling of our CSS files and the obvious chores like copying, replacing, etc.&lt;/p&gt;
&lt;h3 id=&quot;webpack-bundling-of-css-files&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#webpack-bundling-of-css-files&quot; aria-label=&quot;webpack bundling of css files permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Webpack Bundling of CSS files&lt;/h3&gt;
&lt;p&gt;{% highlight js %}
// Filename: webpack.moduleA.assets.js&lt;/p&gt;
&lt;p&gt;const fs = require(&apos;fs&apos;);
const path = require(&apos;path&apos;);
const glob = require(&apos;glob-all&apos;);
const env = require(&apos;./../webpack.env&apos;).env;
const EnvEnum = require(&apos;./../constants/Enums&apos;).EnvEnum;&lt;/p&gt;
&lt;p&gt;// To remove unused css
const PurifyCSSPlugin = require(&apos;purifycss-webpack&apos;);
// Copy Assests to dist
const CopyWebpackPlugin = require(&apos;copy-webpack-plugin&apos;);
// To generate a file in JSON format so that the hash appended can be later read by another file like one css file is used in multiple files so its hash needs to be stored somewhere to be read so that it can be replaced in corresponding &lt;code class=&quot;language-text&quot;&gt;index.html&lt;/code&gt; files
const ManifestPlugin = require(&apos;webpack-manifest-plugin&apos;);
const CleanWebpackPlugin = require(&apos;clean-webpack-plugin&apos;);
// For combining multiple css files
const ExtractTextPlugin = require(&apos;extract-text-webpack-plugin&apos;)
// Minify css files for env=build
const OptimizeCssAssetsPlugin = require(&apos;optimize-css-assets-webpack-plugin&apos;);&lt;/p&gt;
&lt;p&gt;// Replace filename if env=build since hash is appended for cache bursting
const replacePlugin = require(&apos;./../utils/webpack.custom-string-replace.plugin&apos;);&lt;/p&gt;
&lt;p&gt;let buildPlugins = [];
let basePath = path.join(__dirname, &apos;/../&apos;);&lt;/p&gt;
&lt;p&gt;if (env === &apos;build&apos;) {
// minify css files if env is build i.e. production
buildPlugins.push(new OptimizeCssAssetsPlugin({
cssProcessorOptions: {
safe: true
}
}));
}&lt;/p&gt;
&lt;p&gt;module.exports = {
// Entry, files to be bundled separately
entry: {
&apos;css-file-1&apos;: [
basePath + &apos;src/styles/canvas/common.css&apos;,
basePath + &apos;src/styles/canvas/mobile.css&apos;,
basePath + &apos;src/styles/canvas/main.css&apos;
],
&apos;css-file-2&apos;: [
basePath + &apos;src/styles/app.css&apos;,
basePath + &apos;src/styles/player/player.css&apos;,
basePath + &apos;src/styles/mobile.css&apos;,
basePath + &apos;node_modules/select2/dist/css/select2.min.css&apos;
]
},
devtool: &apos;&apos;,
output: {
// Output directory
path: basePath + &apos;dist/styles/&apos;,
// [hash:6] with add a SHA based on file changes if the env is build
filename: env === &apos;build&apos; ? &apos;[name]-[hash:6].min.css&apos; : &apos;[name].min.css&apos;
},
// Rules for bundling
module: {
rules: [{
test: /.css$/i,
use: ExtractTextPlugin.extract({
use: [{
loader: &apos;css-loader&apos;,
options: {
// ExtractTextPlugin tries to process url like in backgroun-image, url(), etc. We need to stop that behavior so we need this option
url: false
}
}]
})
}]
},
resolve: {
alias: {},
modules: [],
extensions: [&apos;.css&apos;] // only for css file
},
plugins: [
// Cleaning specific folder, maintaining other modules dist intact
new CleanWebpackPlugin([basePath + &apos;dist/styles&apos;], {
root: basePath
}),
// File to generated to read hash later on
new ManifestPlugin({
fileName: &apos;manifest.json&apos;
}),
// Copy css/images file(s) to dist
new CopyWebpackPlugin([{
from: basePath + &apos;src/images&apos;,
to: basePath + &apos;dist/images/&apos;
}]),
// Bundling of entry files
new ExtractTextPlugin(env === &apos;build&apos; ? &apos;[name]-[hash:6].min.css&apos; : &apos;[name].min.css&apos;),
// To remove unused CSS by looking in corresponding html files
new PurifyCSSPlugin({
// Give paths to parse for rules. These should be absolute!
paths: glob.sync([
path.join(basePath, &apos;src/moduleA/&lt;em&gt;.html&apos;),
path.join(basePath, &apos;src/moduleA/canBeAnyFile.js&apos;),
path.join(basePath, &apos;src/moduleB/&lt;/em&gt;.html&apos;),
path.join(basePath, &apos;src/moduleC/*.js&apos;)
]),
purifyOptions: {
whitelist: [ &apos;&lt;em&gt;select2-&lt;/em&gt;&apos; ] // If classes are added on run-time, then based on the pattern, we can whitelist them, to be always included in our final bundled CSS file
}
})
].concat(buildPlugins)
};
{% endhighlight %}&lt;/p&gt;
&lt;p&gt;The above configuration outputs two bundled CSS files i.e. &lt;code class=&quot;language-text&quot;&gt;css-file-1.min.css&lt;/code&gt; &amp;#x26; &lt;code class=&quot;language-text&quot;&gt;css-file.min.css&lt;/code&gt;, and &lt;code class=&quot;language-text&quot;&gt;css-file-1-8fb1ed.min.css&lt;/code&gt; &amp;#x26; &lt;code class=&quot;language-text&quot;&gt;css-file-2-6ed3c1.min.css&lt;/code&gt; if it&apos;s a prod build.&lt;/p&gt;
&lt;p&gt;We are using &lt;a href=&quot;https://github.com/webpack-contrib/extract-text-webpack-plugin&quot;&gt;ExtractTextPlugin&lt;/a&gt;, which extracts text from a bundle, or bundles, into a separate file, along with &lt;a href=&quot;https://github.com/webpack-contrib/css-loader&quot;&gt;css-loader&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;We faced a very weird issue and thus worth mentioning here explicitly. &lt;code class=&quot;language-text&quot;&gt;ExtractTextPlugin&lt;/code&gt; tries to process URL like in background-image, url(), etc. We need to stop that behavior so we need to set &lt;code class=&quot;language-text&quot;&gt;url:false&lt;/code&gt; inside the options like:&lt;/p&gt;
&lt;p&gt;{% highlight js %}
options: {
url: false
}
{% endhighlight %}&lt;/p&gt;
&lt;p&gt;Few more plugins that we are using are:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/johnagan/clean-webpack-plugin&quot;&gt;CleanWebpackPlugin&lt;/a&gt; - to remove/clean the styles folder inside the build folder before building&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/danethurber/webpack-manifest-plugin&quot;&gt;ManifestPlugin&lt;/a&gt; - for generating an asset manifest file with a mapping of all source file names to their corresponding output file
This plugin generates a JSON file so that the hash appended(prod build) after a JS file can be later read by another file. Eg. one CSS file is shared among different modules so its hash needs to be stored somewhere to be read later by other modules to update the hash in their corresponding &lt;code class=&quot;language-text&quot;&gt;index.html&lt;/code&gt; files.&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/kevlened/copy-webpack-plugin&quot;&gt;CopyWebpackPlugin&lt;/a&gt; - to copy individual files or entire directories to the build directory&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/webpack-contrib/purifycss-webpack&quot;&gt;PurifyCSSPlugin&lt;/a&gt; - to remove unused selectors from the CSS. This plugin was a must for us. So, what we were doing in this entire project earlier was to copy-paste the Parent projects CSS file to this independent project. We followed the same approach because of time-constraints but found this amazing plugin which automatically removes the unused CSS from the bundled CSS files based on the paths of files which uses it. We can even whitelist selectors if classes are appended on run-time or for any other reason. But it is highly recommended to use the PurifyCSS plugin with the Extract Text plugin which we discussed above.&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://github.com/NMFR/optimize-css-assets-webpack-plugin&quot;&gt;OptimizeCssAssetsPlugin&lt;/a&gt; - to optimize/minimize CSS assets&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;This was all about bundling of CSS file.&lt;/p&gt;
&lt;h3 id=&quot;last-step---automated-scripts-and-provision-to-execute-module-specific-build&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#last-step---automated-scripts-and-provision-to-execute-module-specific-build&quot; aria-label=&quot;last step   automated scripts and provision to execute module specific build permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Last step - Automated scripts and provision to execute module-specific build&lt;/h3&gt;
&lt;p&gt;First, we created a file to read arguments that could be read in our &lt;code class=&quot;language-text&quot;&gt;webpack.config.js&lt;/code&gt; file via a &lt;code class=&quot;language-text&quot;&gt;package.json&lt;/code&gt; script.&lt;/p&gt;
&lt;p&gt;{% highlight js %}
// Filename: webpack.env.js&lt;/p&gt;
&lt;p&gt;// Webpack doesn&apos;t pass Webpack env in env variable when using multiple configs, so writing custom code
let argv = process.argv || [],
// Loop over process arguments and check for --env.mode
envArgv = argv.filter(function (arg) {
return arg.indexOf(&apos;--env.mode&apos;) &gt; -1;
}),
targetModuleArgv = argv.filter(function (arg) {
return arg.indexOf(&apos;--env.module&apos;) &gt; -1;
}),
env, targetModules = &apos;&apos;;&lt;/p&gt;
&lt;p&gt;// If match fould, spilt so that exact value can be extracted like &apos;build&apos;/&apos;local&apos;
if (envArgv &amp;#x26;&amp;#x26; envArgv.length) {
env = envArgv[0].split(&apos;=&apos;)[1];
}&lt;/p&gt;
&lt;p&gt;if (targetModuleArgv &amp;#x26;&amp;#x26; targetModuleArgv.length) {
targetModules = targetModuleArgv[0].split(&apos;=&apos;)[1];
}&lt;/p&gt;
&lt;p&gt;module.exports = {
env,
targetModules
};
{% endhighlight %}&lt;/p&gt;
&lt;p&gt;We tweaked our main &lt;code class=&quot;language-text&quot;&gt;webpack.config.js&lt;/code&gt; to make it module-aware.&lt;/p&gt;
&lt;p&gt;{% highlight js %}
// Filename: webpack.config.js&lt;/p&gt;
&lt;p&gt;const targetModules = require(&apos;./build/webpack.env&apos;).targetModules;&lt;/p&gt;
&lt;p&gt;function executeWebpackConfig(options) {
return {
devtool: options.devtool === &apos;&apos; ? options.devtool : &apos;source-map&apos;,
entry: options.entry,
output: options.output,
module: options.module,
resolve: options.resolve,
plugins: options.plugins || []
};
}&lt;/p&gt;
&lt;p&gt;// Module specific configuration files
let multipleConfigs = [];&lt;/p&gt;
&lt;p&gt;if (targetModules) {
let modules = targetModules.split(&apos;,&apos;);&lt;/p&gt;
&lt;p&gt;  for (var i = 0; i &amp;#x3C; modules.length; i++) {
if (modules[i] === &apos;moduleA&apos;) {
multipleConfigs.push(require(&apos;./build/moduleA-tasks/webpack.moduleA&apos;));
multipleConfigs.push(require(&apos;./build/moduleA-tasks/webpack.moduleA.assets&apos;));
}
if (modules[i] === &apos;moduleB&apos;) {
multipleConfigs.push(require(&apos;./build/moduleB-tasks/webpack.moduleB&apos;));
multipleConfigs.push(require(&apos;./build/moduleB-tasks/webpack.moduleB.assets&apos;));
}
if (modules[i] === &apos;moduleC&apos;) {
multipleConfigs.push(require(&apos;./build/moduleC-tasks/webpack.moduleC&apos;));
}
if (modules[i] === &apos;moduleD&apos;) {
multipleConfigs.push(require(&apos;./build/moduleD-tasks/webpack.moduleD&apos;));
multipleConfigs.push(require(&apos;./build/moduleD-tasks/webpack.moduleD.assets&apos;));
}
}
} else {
multipleConfigs = [
require(&apos;./build/moduleA-tasks/webpack.moduleA-main&apos;),
require(&apos;./build/moduleA-tasks/webpack.moduleA.assets&apos;),&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;text&quot;&gt;&lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;require(&amp;#39;./build/moduleB-tasks/webpack.moduleB&amp;#39;),
require(&amp;#39;./build/moduleB-tasks/webpack.moduleB.assets&amp;#39;),

require(&amp;#39;./build/moduleC/webpack.moduleC&amp;#39;),

require(&amp;#39;./build/moduleD-tasks/webpack.moduleD&amp;#39;),
require(&amp;#39;./build/moduleD-tasks/webpack.moduleD.assets&amp;#39;)&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;  ];
}&lt;/p&gt;
&lt;p&gt;multipleConfigs.map((config) =&gt; {
return executeWebpackConfig(config);
});&lt;/p&gt;
&lt;p&gt;module.exports = multipleConfigs;
{% endhighlight %}&lt;/p&gt;
&lt;p&gt;In our &lt;code class=&quot;language-text&quot;&gt;package.json&lt;/code&gt; file, we created different scripts for running either a development build or production-ready build(minification, cache-busting, and purification) and either to run build for all modules or for just selective modules.&lt;/p&gt;
&lt;p&gt;{% highlight js %}
// Filename: package.json&lt;/p&gt;
&lt;p&gt;&quot;scripts&quot;: {
&quot;install&quot;:      &quot;yarn install --ignore-scripts&quot;,
&quot;build&quot;:        &quot;webpack --optimize-minimize --bail --env.mode=build&quot;,&lt;/p&gt;
&lt;p&gt;  &quot;dev&quot;:          &quot;webpack --progress --colors --watch --env.mode=dev --display-error-details&quot;,
&quot;dev-nowatch&quot;:  &quot;webpack --progress --colors --env.mode=dev --display-error-details&quot;,&lt;/p&gt;
&lt;p&gt;  &quot;dev-moduleA&quot;:  &quot;webpack --progress --colors --watch --env.mode=dev --env.modules=moduleA&quot;,
&quot;dev-moduleB&quot;:  &quot;webpack --progress --colors --watch --env.mode=dev --env.modules=moduleB&quot;,
&quot;dev-moduleC&quot;:  &quot;webpack --progress --colors --watch --env.mode=dev --env.modules=moduleB&quot;,&lt;/p&gt;
&lt;p&gt;  &quot;dev-moduleAB&quot;: &quot;webpack --progress --colors --watch --env.mode=dev --env.modules=moduleA,moduleB&quot;,
&quot;dev-moduleBC&quot;: &quot;webpack --progress --colors --watch --env.mode=dev --env.modules=moduleB,moduleC&quot;,
&quot;dev-moduleAC&quot;: &quot;webpack --progress --colors --watch --env.mode=dev --env.modules=moduleA,moduleC&quot;,&lt;/p&gt;
&lt;p&gt;  &quot;lint&quot;:         &quot;eslint &apos;src/&lt;strong&gt;/*.js&apos;  --cache --config .eslintrc --ignore-path .eslintignore&quot;,
&quot;lint-fix&quot;:     &quot;eslint &apos;src/&lt;/strong&gt;/*.js&apos; --fix  --cache --config .eslintrc --ignore-path .eslintignore&quot;
}
{% endhighlight %}&lt;/p&gt;
&lt;h3 id=&quot;upgrading-to-code-classlanguage-textwebpack3code&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#upgrading-to-code-classlanguage-textwebpack3code&quot; aria-label=&quot;upgrading to code classlanguage textwebpack3code permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Upgrading to &lt;code class=&quot;language-text&quot;&gt;Webpack@3&lt;/code&gt;&lt;/h3&gt;
&lt;p&gt;According to &lt;em&gt;Sean T. Larkin&lt;/em&gt; in the &lt;a href=&quot;https://medium.com/webpack/webpack-3-official-release-15fd2dd8f07b&quot;&gt;release blog post&lt;/a&gt;: &quot;webpack 3: Official Release!!&quot;, migrating from webpack 2 to 3 should involve no effort beyond running the upgrade commands in your terminal. We are using &lt;code class=&quot;language-text&quot;&gt;Webpack@3.6.0&lt;/code&gt; and &lt;code class=&quot;language-text&quot;&gt;yarn@1.0.2&lt;/code&gt; now :)&lt;/p&gt;
&lt;h3 id=&quot;last-but-not-the-least---stepping-towards-a-long-journey&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#last-but-not-the-least---stepping-towards-a-long-journey&quot; aria-label=&quot;last but not the least   stepping towards a long journey permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Last but not the least - Stepping towards a long journey&lt;/h3&gt;
&lt;p&gt;This was just the beginning of stepping towards researching different technologies and upgrading our tech stack. We have now gradually started writing &lt;code class=&quot;language-text&quot;&gt;ES6&lt;/code&gt; code for that particular project. The experience was tremendous and the team is now working on evaluating other sections where the change could gradually take a form.&lt;/p&gt;
&lt;h3 id=&quot;helpful-resources&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#helpful-resources&quot; aria-label=&quot;helpful resources permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Helpful resources&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://blog.madewithenvy.com/getting-started-with-webpack-2-ed2b86c68783&quot;&gt;Getting Started with Webpack 2&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.codementor.io/drewpowers/high-performance-webpack-config-for-front-end-delivery-90sqic1qa&quot;&gt;Configuring webpack for production: High Performance webpack config&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;feedback&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#feedback&quot; aria-label=&quot;feedback permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Feedback&lt;/h3&gt;
&lt;p&gt;Should you have any feedback regarding this article, please share your thoughts via comments.&lt;/p&gt;
&lt;p&gt;If you like this article, do share it :)&lt;/p&gt;</content:encoded><author>Varun Malhotra</author></item><item><title><![CDATA[The First Wingify DevFest]]></title><description><![CDATA["What is the most resilient parasite? Bacteria? A virus? An intestinal worm? An idea. Resilient... highly contagious. Once an idea has taken…]]></description><link>https://engineering.wingify.com//posts/the-first-wingify-devfest/</link><guid isPermaLink="false">https://engineering.wingify.com//posts/the-first-wingify-devfest/</guid><pubDate>Mon, 02 Oct 2017 18:30:00 GMT</pubDate><content:encoded>&lt;p&gt;&lt;img src=&quot;/images/2017/10/devfest-banner.png&quot;&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&quot;What is the most resilient parasite? Bacteria? A virus? An intestinal worm? An idea. Resilient... highly contagious. Once an idea has taken hold of the brain it&apos;s almost impossible to eradicate. An idea that is fully formed - fully understood - that sticks; right in there somewhere.&quot; &lt;em&gt;-- Cobb(Leonardo DiCaprio), Inception&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&quot;what-is-devfest&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#what-is-devfest&quot; aria-label=&quot;what is devfest permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;What is DevFest?&lt;/h3&gt;
&lt;p&gt;On September 9th we had the first instance of our Wingify DevFest. It started with a simple idea, to have a community of fellow techies where everyone could meet, learn something new, share ideas and inspire one another. But we didn&apos;t just want to end here. We wanted to have a day where people could celebrate and have a good time. Thus, the Wingify DevFest was born.&lt;/p&gt;
&lt;h3 id=&quot;how-did-we-plan-for-it&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#how-did-we-plan-for-it&quot; aria-label=&quot;how did we plan for it permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;How did we plan for it?&lt;/h3&gt;
&lt;p&gt;Though the DevFest happened on 9th September, the preparations had started much before that. In fact, the whole structure of DevFest underwent drastic iterations since we&apos;d first started working on it. Initially, we had simply planned on having a set of internal team members of Wingify as speakers. The rationale behind this was, this being our first DevFest having internal speakers we would help us have a good grasp of the speakers and their content. It would also be easier to organize because we could skip the overhead of finding external speakers. This idea was soon scrapped because we would have had to compromise the interest of our teammates as most of the internal talks had already been watched by the team. The other extreme plan was to have all external speakers, which too was soon ruled out because of the logistics involved. We also knew that some of our own internal speakers had good content which the world should definitely see. Finally, we agreed upon having an all external speakers list and keep the internal speakers as backup, should the need arise any time. And thank God we did, because as you&apos;ll soon find out, we did have to use the fallback.&lt;/p&gt;
&lt;p&gt;Amidst the initial confusion of finding the ideal number and type of speakers, there was still an extreme clarity within the organizing team about the other events that we wanted to have. More on that later.&lt;/p&gt;
&lt;h3 id=&quot;deciding-on-the-theme&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#deciding-on-the-theme&quot; aria-label=&quot;deciding on the theme permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Deciding on the theme&lt;/h3&gt;
&lt;p&gt;Organizing the first of a series always has its own set of challenges and uncertainties. For us, the main challenge, which was a crucial factor in almost all of our decision making, from the topic for the DevFest to even deciding what swag should we have, was identifying our target audience. Unlike some major tech cities like Bangalore, Hyderabad where the majority of folks are working professionals, Delhi has a beautiful eclectic mixture of working professionals and college students. In fact, the number of engineering colleges in Delhi are mind blowing. This translates to the fact that in most of the meetups and communities there&apos;s a mixture of both the streams. Extrapolating from this fact, we concluded that we too could expect a mixture of both the classes. The challenge with that was to find a theme suitable enough to resonate with all the members. &lt;strong&gt;Performance, Reliability and Security&lt;/strong&gt; was the perfect topic because everyone, at some point in the college/professional life, has had a requirement to know deeper about it. With a balanced set of talks on this theme, we could achieve a point which would keep both the parties interested.&lt;/p&gt;
&lt;h3 id=&quot;picking-speakers&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#picking-speakers&quot; aria-label=&quot;picking speakers permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Picking speakers&lt;/h3&gt;
&lt;p&gt;With the topic of the DevFest clear, finding speakers was the next challenge, or so we thought. On 27th July we started campaigns on several social media channels, meetups and also word of mouth to find the best tech speakers in Delhi. It was a 15-day campaign and by the time it ended we were ecstatic. There were more than 20 entries and some even tried to register after the deadline. Not bad for the first time 🙂. After several meetings and discussions, we finally narrowed down to 3 final speakers. We had even sent them the invitation. Too easy, we thought. One week before the event 2 of our speakers backed out because of inevitable issues. There was a DEFCON 1 emergency declared in our nation! Everyone went on a rampage. Well, maybe I&apos;m exaggerating a bit, it wasn&apos;t DEFCON 1 because we didn&apos;t have nuclear weapons, but you get the drift. In that frenzy we sought out the internal speakers. Things could&apos;ve gone really south if we didn&apos;t have an existing plan B. Though, we eventually ended up having four speakers instead of three because an earlier backed out speaker managed to join back and, so, we were more than happy to re-adjust the schedule. These were the speakers who finally spoke&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://twitter.com/atulagarwal&quot;&gt;Atul Agarwal&lt;/a&gt; (co-CEO, AdPushup) as the Keynote Speaker&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://twitter.com/shadyshandilya&quot;&gt;Saurabh Shandilya&lt;/a&gt; spoke on ToR 101&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://twitter.com/pathaniadeepak7&quot;&gt;Deepak Pathania&lt;/a&gt; spoke on Performance Optimization for the mobile web&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://twitter.com/hellonehha&quot;&gt;Neha Sharma&lt;/a&gt; spoke on Web apps and Performance&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;a href=&quot;https://twitter.com/mgill25&quot;&gt;Manish Gill&lt;/a&gt; spoke on &lt;a href=&quot;https://speakerdeck.com/mgill25/lessons-in-scalability&quot;&gt;Gyaan in Scalability&lt;/a&gt;&lt;/strong&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;script&gt;Galleria.run(&apos;#devfest-speakers-gallery&apos;);&lt;/script&gt;
&lt;div id=&quot;devfest-speakers-gallery&quot; style=&quot;height: 600px;&quot;&gt;
	&lt;img src=&quot;/images/2017/10/devfest-speakers-1.jpg&quot;&gt;
	&lt;img src=&quot;/images/2017/10/devfest-speakers-2.jpg&quot;&gt;
	&lt;img src=&quot;/images/2017/10/devfest-speakers-3.jpg&quot;&gt;
	&lt;img src=&quot;/images/2017/10/devfest-speakers-4.jpg&quot;&gt;
	&lt;img src=&quot;/images/2017/10/devfest-speakers-5.jpg&quot;&gt;
&lt;/div&gt;
&lt;h3 id=&quot;organising-interactive-events&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#organising-interactive-events&quot; aria-label=&quot;organising interactive events permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Organising interactive events&lt;/h3&gt;
&lt;p&gt;At Wingify, we frequently have internal technical events that keep our wits sharp. Since one of the inherent idea of the DevFest was to keep it interactive for everyone, what better way than to include a few of these events in the schedule as well. Selecting the events was as easy as looking back at list of previous year&apos;s events and adding the ones which were liked by majority of team members. The finalists were &lt;a href=&quot;http://engineering.wingify.com/posts/code-in-the-dark/&quot;&gt;Code in the Dark&lt;/a&gt; and &lt;a href=&quot;http://engineering.wingify.com/posts/wingify-capture-the-flag/&quot;&gt;Capture the Flag&lt;/a&gt;.&lt;/p&gt;
&lt;h3 id=&quot;the-day&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#the-day&quot; aria-label=&quot;the day permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;The Day&lt;/h3&gt;
&lt;p&gt;The day before &lt;strong&gt;The Day&lt;/strong&gt; we stayed back late in the office. The previous week had been taxing because of the whole speakers backing out fiasco and also because the organising team had been really busy releasing the new &lt;a href=&quot;https://vwo.com/&quot;&gt;VWO Conversion Optimization Platform&lt;/a&gt; to general public! Thus, there were several logistics that had to be taken care of on the last day. Everyone went late that day yet returned back early the next morning.&lt;/p&gt;
&lt;p&gt;September 9th, our spirits were high. No, we weren&apos;t high (at least not until the events lasted), we were giddy. Everything was set. The initial slow pouring of the attendees soon gained pace and by 11 am our office was packed and ready for some action. It was a good mixture of energetic college folks and knowledgeable professionals, each trying to find like-minded counterparts to talk ideas. Thanks to &lt;a href=&quot;https://twitter.com/akashtyagi027&quot;&gt;Akash Tyagi&lt;/a&gt;, we had some really cool banners installed all over the place. In fact, right from the beginning he had been the guy who&apos;d designed the banners, logos and social media cards etc., which everyone greatly admired.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://twitter.com/atulagarwal&quot;&gt;Atul Agarwal&lt;/a&gt; had accepted our request to be the Keynote Speaker for the event. His talk on performance, reliability and security, was full of wisdom that he had garnered on his journey to make AdPushup a successful and formidable ad-revenue optimization company in its space. He went on about how most companies, in a haste to launch feature after feature, often forget the aspects of performance, reliability and security, which later bites them back. Sometimes overlooking such aspects costs companies a fortune and, even worse, respect of their clients.&lt;/p&gt;
&lt;p&gt;Immediately succeeding him was &lt;a href=&quot;https://twitter.com/shadyshandilya&quot;&gt;Saurabh Shandilya&lt;/a&gt;, who spoke about the ToR network. His talk cleared some of the misconceptions that people have about ToR and through his articulate speech he managed to convince many people to try it out. Not only that, he even managed to convince some folks who&apos;d already tried it earlier and given up, to give it another shot.&lt;/p&gt;
&lt;p&gt;Next in line was &lt;a href=&quot;https://twitter.com/pathaniadeepak7&quot;&gt;Deepak Pathania&lt;/a&gt;. Although Deepak says that it was his first ever talk, we have our doubts. We&apos;ve seen seasoned speakers get uncomfortable on the stage but Deepak didn&apos;t break a sweat. He spoke about the Google Amp project and why it&apos;s a viable optimization strategy for your mobile pages. He also went ahead and gave some example on how to quickly start a project with Google Amp.&lt;/p&gt;
&lt;p&gt;With a quick lunch, after Deepak&apos;s talk, it was Capture the Flag time! &lt;a href=&quot;https://twitter.com/dheerajhere&quot;&gt;Dheeraj Joshi&lt;/a&gt; from the organising team, had managed to craft some mind-tickling questions for the participants to rack their brains on. For the next two hours everyone was glued to the event, trying to find ways to get to the hidden flags. At the end of the day, Capture the Flag turned out the be the star attraction of the DevFest.&lt;/p&gt;
&lt;script&gt;Galleria.run(&apos;#devfest-capture-the-flag-gallery&apos;);&lt;/script&gt;
&lt;div id=&quot;devfest-capture-the-flag-gallery&quot; style=&quot;height: 600px;&quot;&gt;
	&lt;img src=&quot;/images/2017/10/devfest-ctf-1.jpg&quot;&gt;
	&lt;img src=&quot;/images/2017/10/devfest-ctf-2.JPG&quot;&gt;
&lt;/div&gt;
&lt;p&gt;Succeeding the CTF, was &lt;a href=&quot;https://twitter.com/hellonehha&quot;&gt;Neha Sharma&lt;/a&gt; who spoke about &lt;strong&gt;Web Apps and Performance&lt;/strong&gt;. Neha is a tech speaker and founder of the renowned JSLovers Community and we were lucky to have her in the list of speakers. Given the breadth of her topic and the limited time she had for her talk, she could only give an abridged snippet of how developers can improve their website&apos;s&apos; performance by using several best practices.&lt;/p&gt;
&lt;p&gt;After Neha it was &lt;a href=&quot;https://twitter.com/mgill25&quot;&gt;Manish Gill&apos;s&lt;/a&gt; turn. Manish is a fellow Wingifighter who rose up to the challenge to speak at the DevFest when some external speakers had backed out. He works in the Data Layer team in Wingify, the team which manages the performance and scalability of data collection and retrieval aspect of our application. Having worked on challenging scalability problems and having experience in giving public talks, he was the ideal candidate to represent Wingify. Manish did deliver an insightful talk about how we&apos;ve used Postgres and Kafka to scale to the tune of 20k requests per second.&lt;/p&gt;
&lt;p&gt;We finally finished the day with Code in the Dark. It was a long long day, and we&apos;re glad we chose to end with it. Our in-house DJ, &lt;a href=&quot;https://twitter.com/creativebakchod/&quot;&gt;Ashish Bardhan&lt;/a&gt;, played the best of the best Techno music that we could&apos;ve asked for. The dark settings along with the laser lights and the music set the right ambience to get the adrenaline pumping. It was intense! By the time the Code in the Dark ended everyone was rejuvenated.&lt;/p&gt;
&lt;script&gt;Galleria.run(&apos;#devfest-code-in-the-dark-gallery&apos;);&lt;/script&gt;
&lt;div id=&quot;devfest-code-in-the-dark-gallery&quot; style=&quot;height: 600px;&quot;&gt;
	&lt;img src=&quot;/images/2017/10/devfest-citd-1.JPG&quot;&gt;
	&lt;img src=&quot;/images/2017/10/devfest-citd-2.JPG&quot;&gt;
	&lt;img src=&quot;/images/2017/10/devfest-citd-3.JPG&quot;&gt;
&lt;/div&gt;
&lt;p&gt;All that, in one day. Achievement level: 50,000.&lt;/p&gt;
&lt;h3 id=&quot;how-did-we-fare&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#how-did-we-fare&quot; aria-label=&quot;how did we fare permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;How did we fare?&lt;/h3&gt;
&lt;p&gt;There were many things we did well, and there were many things we could&apos;ve done better. Our sound system, definitely, frustrated some of the speakers and audience members. It malfunctioned multiple times and broke the flow of the speakers. We should&apos;ve also provided a visual timer for the speakers so they could keep a track of their talk. It wasn&apos;t the smoothest event, I agree but what doesn&apos;t kill you makes you stronger. With these learnings we&apos;ll be better prepared to have a smoother DevFest next time.&lt;/p&gt;
&lt;p&gt;Some moments captured during the DevFest:&lt;/p&gt;
&lt;script&gt;Galleria.run(&apos;#devfest-day-gallery&apos;);&lt;/script&gt;
&lt;div id=&quot;devfest-day-gallery&quot; style=&quot;height: 600px;&quot;&gt;
	&lt;img src=&quot;/images/2017/10/devfest-gallery-1.JPG&quot;&gt;
	&lt;img src=&quot;/images/2017/10/devfest-gallery-2.JPG&quot;&gt;
	&lt;img src=&quot;/images/2017/10/devfest-gallery-3.JPG&quot;&gt;
	&lt;img src=&quot;/images/2017/10/devfest-gallery-4.JPG&quot;&gt;
	&lt;img src=&quot;/images/2017/10/devfest-gallery-5.jpg&quot;&gt;
	&lt;img src=&quot;/images/2017/10/devfest-gallery-6.JPG&quot;&gt;
	&lt;img src=&quot;/images/2017/10/devfest-gallery-7.JPG&quot;&gt;
	&lt;img src=&quot;/images/2017/10/devfest-gallery-8.JPG&quot;&gt;
	&lt;img src=&quot;/images/2017/10/devfest-gallery-9.JPG&quot;&gt;
	&lt;img src=&quot;/images/2017/10/devfest-gallery-10.JPG&quot;&gt;
&lt;/div&gt;
&lt;h3 id=&quot;conclusion&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#conclusion&quot; aria-label=&quot;conclusion permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Conclusion&lt;/h3&gt;
&lt;p&gt;Our quest to have a community of like-minded people has just started. The first instance of the DevFest has been a stepping-stone for us and it&apos;ll only get better from here. Stay tuned for the next DevFest. It&apos;s going to be legen..... wait for it!&lt;/p&gt;
&lt;p&gt;PS: A big shoutout to the members of the organising team; &lt;a href=&quot;https://twitter.com/akashtyagi027&quot;&gt;Akash Tyagi&lt;/a&gt;, &lt;a href=&quot;https://twitter.com/dheerajhere&quot;&gt;Dheeraj Joshi&lt;/a&gt;, &lt;a href=&quot;https://twitter.com/notjustbond&quot;&gt;Jatin Makhija&lt;/a&gt;, &lt;a href=&quot;https://twitter.com/chinchang457&quot;&gt;Kushagra Gour&lt;/a&gt;, &lt;a href=&quot;https://twitter.com/sahilbathla&quot;&gt;Sahil Bathla&lt;/a&gt; and also the volunteers for all the hard work they’ve put into making the DevFest a success.&lt;/p&gt;</content:encoded><author>Dinkar Pundir</author></item><item><title><![CDATA[Automated environment deployments]]></title><description><![CDATA[Shipping a bug-free feature is always important in every release. To ensure this, we do quality analysis(QA) at various points of the…]]></description><link>https://engineering.wingify.com//posts/automated-environment-deployments/</link><guid isPermaLink="false">https://engineering.wingify.com//posts/automated-environment-deployments/</guid><pubDate>Thu, 21 Sep 2017 18:30:00 GMT</pubDate><content:encoded>&lt;p&gt;Shipping a bug-free feature is always important in every release. To ensure this, we do quality analysis(QA) at various points of the feature cycle. To facilitate an efficient QA, we also maintain certain environments for our app, each serving a different purpose. We have the following environments to be specific:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;Production&lt;/strong&gt; - The actual live app.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Staging&lt;/strong&gt; - A replica of the production where final sign-off QA is done just before going live.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Test&lt;/strong&gt; - A quick deployable environment which can be used by developers to share the WIP feature branch with anyone in the company or among other developers.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;With multiple features in development simultaneously and multiple environments to deploy, automated deployment becomes very important to ensure frictionless and fast feature lifecycle. In this post, I&apos;ll try to explain how to manage all these environment deployments through automation, especially for our product VWO.&lt;/p&gt;
&lt;h2 id=&quot;tests&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#tests&quot; aria-label=&quot;tests permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Tests&lt;/h2&gt;
&lt;p&gt;As mentioned above, &lt;em&gt;tests&lt;/em&gt; are very lightweight environments which developers generally create to share their WIP feature branch with other developers, QA or someone from marketing/product to gather feedback. Our app consists of various components: frontend, main-backend and various other micro-services. So each &lt;em&gt;test&lt;/em&gt; environment is a combination of different branches from each of the constituent components. For example our app have following components: frontend, backend and Service-1. So our &lt;em&gt;tests&lt;/em&gt; can look like:&lt;/p&gt;
&lt;p&gt;Test #1 - &lt;em&gt;master&lt;/em&gt; (frontend) + &lt;em&gt;feature-notifications&lt;/em&gt; (backend) + &lt;em&gt;master&lt;/em&gt; (service-1)&lt;/p&gt;
&lt;p&gt;Test #2 - &lt;em&gt;feature-auth&lt;/em&gt; (frontend) + &lt;em&gt;feature-auth&lt;/em&gt; (backend) + &lt;em&gt;master&lt;/em&gt; (service-1)&lt;/p&gt;
&lt;p&gt;And as these &lt;em&gt;tests&lt;/em&gt; should have a unique sharable URL, they can be given names like: &lt;code class=&quot;language-text&quot;&gt;feat1.vwo.com&lt;/code&gt; or &lt;code class=&quot;language-text&quot;&gt;heatmap-optimizations.vwo.com&lt;/code&gt;&lt;/p&gt;
&lt;h3 id=&quot;deployment&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#deployment&quot; aria-label=&quot;deployment permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Deployment&lt;/h3&gt;
&lt;p&gt;To deploy such a &lt;em&gt;test&lt;/em&gt; we have a job on Jenkins. As you may have guessed already, the inputs to this job are:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Name of the &lt;em&gt;test&lt;/em&gt; instance&lt;/li&gt;
&lt;li&gt;Frontend branch&lt;/li&gt;
&lt;li&gt;Backend branch&lt;/li&gt;
&lt;li&gt;Service-1 branch&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Once this job runs, it pulls on all the above 3 branches on a remote server, does some configuration changes and creates a virtual host to work on &lt;code class=&quot;language-text&quot;&gt;testname.vwo.com&lt;/code&gt;.&lt;/p&gt;
&lt;h3 id=&quot;more-automation&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#more-automation&quot; aria-label=&quot;more automation permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;More automation&lt;/h3&gt;
&lt;p&gt;Now, even this job would require the developer to open Jenkins webapp, go to job page, put in inputs and then run it. But we avoid that too - enter &lt;strong&gt;Ramukaka&lt;/strong&gt;! Ramukaka is our Skype bot (&lt;a href=&quot;https://github.com/wingify/heybot&quot;&gt;that we have open-sourced as well&lt;/a&gt;) which we use for various grunt tasks, such as running a Jenkins job!&lt;/p&gt;
&lt;p&gt;With Ramukaka in the picture, our &lt;em&gt;test&lt;/em&gt; deployment looks like so:&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/images/2017/09/autodeploy-1.png&quot;&gt;&lt;/p&gt;
&lt;p&gt;Note: We have 3 components and have only 2 branches are specified. That is because the developer can skip a component if the branch to be deployed is default i.e. &lt;em&gt;master&lt;/em&gt;. Also, the same command just pulls the latest changes in case the &lt;em&gt;test&lt;/em&gt; instance already exists.&lt;/p&gt;
&lt;p&gt;Neat, right?&lt;/p&gt;
&lt;h2 id=&quot;staging&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#staging&quot; aria-label=&quot;staging permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Staging&lt;/h2&gt;
&lt;p&gt;&lt;em&gt;Staging&lt;/em&gt; has primarily 2 differences from &lt;em&gt;test&lt;/em&gt;:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;There is a single &lt;em&gt;staging&lt;/em&gt; unlike multiple &lt;em&gt;tests&lt;/em&gt;.&lt;/li&gt;
&lt;li&gt;There are some more build steps involved compared to a &lt;em&gt;test&lt;/em&gt;.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;So it&apos;s similar to a &lt;em&gt;test&lt;/em&gt; deployment, except that before deploying it required the developer to build his/her branch like so:&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/images/2017/09/autodeploy-2.png&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Note:&lt;/em&gt; While building a branch we also inform the job about the environment to build for (eg. &lt;em&gt;stagingapp&lt;/em&gt; above) because right now the code needs to be a bit tweaked according to the domain its deployed on.&lt;/p&gt;
&lt;p&gt;And once &lt;em&gt;Ramukaka&lt;/em&gt; confirms a successful build, the developer can deploy the &lt;em&gt;staging&lt;/em&gt; with that branch:&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/images/2017/09/autodeploy-3.png&quot;&gt;&lt;/p&gt;
&lt;h3 id=&quot;some-more-commands&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#some-more-commands&quot; aria-label=&quot;some more commands permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Some more commands&lt;/h3&gt;
&lt;p&gt;As I had mentioned, we have just one &lt;em&gt;staging&lt;/em&gt; (single gateway to production). Therefore, each deployment overwrites the previous deployment. And so it becomes important that developers do not overwrite each other&apos;s deployment by mistake. To prevent this, we have an additional command in &lt;em&gt;Ramukaka&lt;/em&gt; called &lt;code class=&quot;language-text&quot;&gt;currentBranch&lt;/code&gt;. Through this command anyone can check which branch is deployed for a particular component on the &lt;em&gt;staging&lt;/em&gt;. Eg. if I need to check the frontend branch on &lt;em&gt;staging&lt;/em&gt;, I would do so:&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/images/2017/09/autodeploy-4.png&quot;&gt;&lt;/p&gt;
&lt;p&gt;Now the developer can take appropriate actions based on the deployed branch.&lt;/p&gt;
&lt;h2 id=&quot;production&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#production&quot; aria-label=&quot;production permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Production&lt;/h2&gt;
&lt;p&gt;The production is no different from the &lt;em&gt;staging&lt;/em&gt;. Once the final round of testing is done by the QA team on &lt;em&gt;staging&lt;/em&gt;, there are 3 things that need to be done to deploy the app on production:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Build the branch&lt;/li&gt;
&lt;li&gt;Create a tag for release on master branch&lt;/li&gt;
&lt;li&gt;Deploy the tag on the server&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;All the 3 tasks are handled through a single command on &lt;em&gt;Ramukaka&lt;/em&gt;:&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/images/2017/09/autodeploy-5.png&quot;&gt;&lt;/p&gt;
&lt;p&gt;And the frontend gets deployed on production, just like that!&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Note:&lt;/em&gt; Right now only the frontend deployment is automated for production. But we plan to do it for all the components of the app.&lt;/p&gt;
&lt;h2 id=&quot;going-ahead&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#going-ahead&quot; aria-label=&quot;going ahead permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Going Ahead&lt;/h2&gt;
&lt;p&gt;All this deployment automation saves us a huge amount of time. And we know we can save more. Using similar automation for every component of the app is something we plan to do next. Also better logging and monitoring of these environments is on the list.&lt;/p&gt;
&lt;p&gt;How do you manage multiple environments? We would love to hear about your deployment techniques if you want to share in the comments.&lt;/p&gt;
&lt;p&gt;Until next time!&lt;/p&gt;</content:encoded><author>Kushagra Gour</author></item><item><title><![CDATA[PyData at Wingify - My Experience]]></title><description><![CDATA[About PyData I recently got an opportunity to speak at the PyData, Delhi. PyData is a tech group, with chapters in New Delhi and other…]]></description><link>https://engineering.wingify.com//posts/wingify-pydata-at-wingify/</link><guid isPermaLink="false">https://engineering.wingify.com//posts/wingify-pydata-at-wingify/</guid><pubDate>Mon, 11 Sep 2017 18:30:00 GMT</pubDate><content:encoded>&lt;img src=&quot;/images/2017/06/pydata_6.jpg&quot;&gt;
&lt;h3 id=&quot;about-pydata&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#about-pydata&quot; aria-label=&quot;about pydata permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;About PyData&lt;/h3&gt;
&lt;p&gt;I recently got an opportunity to speak at the PyData, Delhi. PyData is a tech group, with chapters in New Delhi and other regions, where Python enthusiasts share their ideas and projects related to Data Analysis and Machine Learning.&lt;/p&gt;
&lt;h3 id=&quot;talks-at-pydata&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#talks-at-pydata&quot; aria-label=&quot;talks at pydata permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Talks at PyData&lt;/h3&gt;
&lt;p&gt;There were three talks at PyData, namely &lt;strong&gt;Machine Learning using Tensor Flow&lt;/strong&gt;, &lt;strong&gt;Data Layer at Wingify&lt;/strong&gt; and mine, &lt;strong&gt;Learning Data Analysis by Scraping Websites&lt;/strong&gt;. All the talks were thorough and excellent! In the talk, &lt;strong&gt;Data layer at Wingify&lt;/strong&gt; by &lt;a href=&quot;https://twitter.com/mgill25&quot;&gt;Manish Gill&lt;/a&gt; 🤓, he talked about how we handle millions of requests at Wingify.&lt;/p&gt;
&lt;h3 id=&quot;some-of-images-of-the-pydata-meetup-hosted-by-wingify&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#some-of-images-of-the-pydata-meetup-hosted-by-wingify&quot; aria-label=&quot;some of images of the pydata meetup hosted by wingify permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Some of Images of the PyData Meetup Hosted by Wingify.&lt;/h3&gt;
&lt;script&gt;Galleria.run(&apos;#pydata-meetup-gallery&apos;);&lt;/script&gt;
&lt;div id=&quot;pydata-meetup-gallery&quot; style=&quot;height: 600px;&quot;&gt;
    &lt;img src=&quot;/images/2017/06/pydata_0.jpg&quot;&gt;
    &lt;img src=&quot;/images/2017/06/pydata_8.jpg&quot;&gt;
    &lt;img src=&quot;/images/2017/06/pydata_7.jpg&quot;&gt;
    &lt;img src=&quot;/images/2017/06/pydata_2.jpg&quot;&gt;
    &lt;img src=&quot;/images/2017/06/pydata_1.jpg&quot;&gt;
    &lt;img src=&quot;/images/2017/06/pydata_5.jpg&quot;&gt;
    &lt;img src=&quot;/images/2017/06/pydata_4.jpg&quot;&gt;
    &lt;img src=&quot;/images/2017/06/pydata_9.jpg&quot;&gt;
&lt;/div&gt;
&lt;h3 id=&quot;background-about-my-talk&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#background-about-my-talk&quot; aria-label=&quot;background about my talk permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Background About My Talk&lt;/h3&gt;
&lt;p&gt;Let me give you a little background. It was the Friday before the PyData Meetup/Conference. Our engineering team was doing its daily tasks. I had just grabbed a coffee to alleviate my laziness. Suddenly, our engineering lead came and asked us whether anyone could present on a topic at the PyData that we were to organise the very next day. An initial speaker, who had confirmed earlier, backed out at the last moment because he had fallen sick. I could see that most of the team members tried to avoid volunteering in such a short notice and also probably because the next day was a Saturday (though this is my personal opinion). But I had something different on my mind and during this planning or confusion, I volunteered for it 🤓. I had a project that I had done, back when I was learning Python. So I offered to present it. He agreed to it and asked me to keep the presentation ready.&lt;/p&gt;
&lt;h3 id=&quot;preparing-the-project--slides&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#preparing-the-project--slides&quot; aria-label=&quot;preparing the project  slides permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Preparing the Project &amp;#x26; Slides&lt;/h3&gt;
&lt;p&gt;That Friday night, I started searching for the old files which I had used. Finally, I found all of them on my website, downloaded them and ran the code. It worked like a charm 😍. Yeah! I quickly created the slides around it, and after finishing, smiled and went to sleep at 4.30 am.&lt;/p&gt;
&lt;h3 id=&quot;little-about-the-basics-of-my-talk&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#little-about-the-basics-of-my-talk&quot; aria-label=&quot;little about the basics of my talk permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Little About the Basics of My Talk.&lt;/h3&gt;
&lt;p&gt;The presentation that I gave was on &lt;strong&gt;Learning Data Analysis by Scraping Websites&lt;/strong&gt;. During my college days, we heavily used the BeautifulSoup Library in Python to scrape websites for the many personal projects. During this project, I got the idea to scrape data from the websites which aggregated movies related data. By doing that, I thought that I could create a list of all movies that I must definitely watch. The movies had to satisfy the following criteria:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Release date &gt;= 2000&lt;/li&gt;
&lt;li&gt;Rating &gt; 8&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;It was not the best idea at that time to scrape websites and then analyse(Data frame). But I learned a lot of things by scraping data from the website using Beautifulsoup, then analyzing data using Pandas, visualizing data using MatplotLib (a Python library) and finally coming to conclusion about my movies recommendation.&lt;/p&gt;
&lt;p&gt;Coming back to the objective - &lt;code class=&quot;language-text&quot;&gt;Finding and sorting the movies released between 2000-2017 in the order of relevance&lt;/code&gt; (I didn&apos;t want to watch movies &amp;#x3C; 2000).
Below is the code to scrape &lt;a href=&quot;http://www.imdb.com/&quot;&gt;IMDB&lt;/a&gt; for movies data from 2000-2017.&lt;/p&gt;
&lt;p&gt;{% highlight js %}
from bs4 import BeautifulSoup
import urllib2
def main():
print(&quot;** ======  Data Extracting Lib -- by Promode  ===== **&quot;)
testUrl = &quot;&lt;a href=&quot;http://www.imdb.com/search/title?at=0&amp;#x26;count=100&amp;#x26;%5C&quot;&gt;http://www.imdb.com/search/title?at=0&amp;#x26;count=100&amp;#x26;\&lt;/a&gt;
groups=top&lt;em&gt;1000&amp;#x26;release&lt;/em&gt;date=2000,2017&amp;#x26;sort=moviemeter&quot;
pageSource = urllib2.urlopen(testUrl).read()
soupPKG = BeautifulSoup(pageSource, &apos;lxml&apos;)
titles = soupPKG.findAll(&quot;div&quot;,class_=&apos;lister-item mode-advanced&apos;)
mymovieslist = []
mymovies = {}
for t in titles:
mymovies = {}
mymovies[&apos;name&apos;] = t.findAll(&quot;a&quot;)[1].text
mymovies[&apos;year&apos;] = str(t.find(&quot;span&quot;, &quot;lister-item-year&quot;).text).replace(&apos;&apos;,&apos;&apos;)
mymovies[&apos;rating&apos;] = float(str(t.find(&quot;span&quot;, &quot;rating-rating&quot;).text)&lt;br&gt;
.replace(&apos;&apos;,&apos;&apos;)[0:-3])
mymovies[&apos;runtime&apos;] = t.find(&quot;span&quot;, &quot;runtime&quot;).text
mymovieslist.append(mymovies)
print mymovieslist
if &lt;strong&gt;name&lt;/strong&gt;==&quot;&lt;strong&gt;main&lt;/strong&gt;&quot;:
main()
{% endhighlight %}&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/PramodDutta/ScrapToDataAnalysis&quot;&gt;Click here&lt;/a&gt; to have a look at the full source code.&lt;/p&gt;
&lt;p&gt;You can see the trends like  &lt;code class=&quot;language-text&quot;&gt;Maximum Rating - Sorted by Rating&lt;/code&gt;, &lt;code class=&quot;language-text&quot;&gt;Year Vs Rating Trend&lt;/code&gt;&lt;/p&gt;
&lt;div style=&quot;text-align:center; margin: 10px;&quot;&gt;
  &lt;img src=&quot;/images/2017/06/pydata_1_M.png&quot; style=&quot;box-shadow: 2px 2px 10px 1px #aaa&quot;&gt;
  &lt;div style=&quot;margin: 10px;&quot;&gt;&lt;b&gt;DataFrame  - Rating is Set as Index&lt;/b&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;br&gt;
&lt;div style=&quot;text-align:center; margin: 10px;&quot;&gt;
  &lt;img src=&quot;/images/2017/06/pydata_tt.png&quot; style=&quot;box-shadow: 2px 2px 10px 1px #aaa&quot;&gt;
  &lt;div style=&quot;margin: 10px;&quot;&gt;&lt;b&gt;Maximum Rating - Sorted by Rating&lt;/b&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;br&gt;
&lt;div style=&quot;text-align:center; margin: 10px;&quot;&gt;
  &lt;img src=&quot;/images/2017/06/pydata_graph.png&quot; style=&quot;box-shadow: 2px 2px 10px 1px #aaa&quot;&gt;
  &lt;div style=&quot;margin: 10px;&quot;&gt;&lt;b&gt;Year Vs Rating Trend&lt;/b&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;h3 id=&quot;take-away-from-the-talk&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#take-away-from-the-talk&quot; aria-label=&quot;take away from the talk permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Take away from the Talk&lt;/h3&gt;
&lt;p&gt;With this method, you would have winner&apos;s data from the data set. For example, suppose you want to create a Cricket Team(IPLT20) which has the maximum probability to win the match, what you can do is parse the &lt;a href=&quot;http://www.iplt20.com/&quot;&gt;IPLT20&lt;/a&gt;) website for last 5 years&apos; data and select the top 5 batsmen and 6 bowlers 😎.&lt;/p&gt;
&lt;h3 id=&quot;conclusion&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#conclusion&quot; aria-label=&quot;conclusion permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Conclusion&lt;/h3&gt;
&lt;p&gt;I totally understand that this may not be the best project for the data analysis. I am still learning and I showed what I had done. I believe that it served my purpose.&lt;/p&gt;
&lt;p&gt;I will be doing more research on data analysis in Python. Thanks for reading this.
Below is my talk slides:&lt;/p&gt;
&lt;h3 id=&quot;slides&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#slides&quot; aria-label=&quot;slides permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Slides:&lt;/h3&gt;
&lt;p&gt;Slides :- &lt;/p&gt;
&lt;iframe src=&quot;//slides.com/pramoddutta-1/deck/embed&quot; width=&quot;100%&quot; height=&quot;600px&quot; scrolling=&quot;no&quot; frameborder=&quot;0&quot; webkitallowfullscreen mozallowfullscreen allowfullscreen&gt;&lt;/iframe&gt;</content:encoded><author>Pramod Dutta</author></item><item><title><![CDATA[Demand-driven APIs Using GraphQL]]></title><description><![CDATA[Introduction This article will deal with the issues we face with the current API architecture (mostly REST) and why demand-driven APIs seem…]]></description><link>https://engineering.wingify.com//posts/demand-drive-apis-using-graphql/</link><guid isPermaLink="false">https://engineering.wingify.com//posts/demand-drive-apis-using-graphql/</guid><pubDate>Wed, 30 Aug 2017 18:30:00 GMT</pubDate><content:encoded>&lt;h3 id=&quot;introduction&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#introduction&quot; aria-label=&quot;introduction permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Introduction&lt;/h3&gt;
&lt;p&gt;This article will deal with the issues we face with the current API architecture (mostly REST) and why demand-driven APIs seem a perfect replacement for it. We will also talk in brief, about &lt;a href=&quot;http://graphql.org/learn/&quot;&gt;GraphQL&lt;/a&gt; and how it is a feasible solution for implementing demand-driven applications.&lt;/p&gt;
&lt;p&gt;Note: This article is inspired from &lt;a href=&quot;https://www.slideshare.net/vincirufus/demand-driven-applications-with-graphql-78403822&quot;&gt;Demand driven Applications with GraphQL&lt;/a&gt; by &lt;a href=&quot;https://www.linkedin.com/in/vinci&quot;&gt;Vinci Rufus&lt;/a&gt; at &lt;a href=&quot;http://2017.jschannel.com/&quot;&gt;JS Channel 2017&lt;/a&gt;.&lt;/p&gt;
&lt;h3 id=&quot;why-demand-driven-api-whats-wrong-with-rest&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#why-demand-driven-api-whats-wrong-with-rest&quot; aria-label=&quot;why demand driven api whats wrong with rest permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Why Demand-driven API? What&apos;s wrong with REST?&lt;/h3&gt;
&lt;p&gt;Let&apos;s take a simple example of author &amp;#x26; articles. If we are given a requirement to develop an API to fetch authors or articles, it will most probably go like this, if we follow REST:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt; GET /authors/:authorId &lt;/li&gt;
  &lt;li&gt; GET /articles/:articleId &lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Let&apos;s taken an example where we have to show an article snippet on my website&apos;s dashboard. We would need its &lt;strong&gt;title, description &amp;#x26; author name&lt;/strong&gt;. So we hit the latter end point and it will give a response like:&lt;/p&gt;
&lt;p&gt;{% highlight js %}
{
title: &apos;Demand Driven APIs Using GraphQL&apos;,
createdAt: &apos;2017-04-25&apos;,
updatedAt: &apos;2017-08-25&apos;,
articleId: &apos;96&apos;,
authorId: 50,
status: &apos;published&apos;,
description: &apos;Lorem Ipsum...&apos;
}
{% endhighlight %}&lt;/p&gt;
&lt;p&gt;There are two problems with this response:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;Extra information&lt;/strong&gt;: We only needed the &lt;strong&gt;title&lt;/strong&gt; &amp;#x26; &lt;strong&gt;description&lt;/strong&gt; but we got everything related to the article and we cannot get rid of this extra payload as this extra information might be getting consumed at some other page i.e. Edit Article Page.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Missing information&lt;/strong&gt;: We were expecting &lt;strong&gt;author name&lt;/strong&gt; but instead we got &lt;strong&gt;authorId&lt;/strong&gt;. This is bad and to solve this we would probably be making another network call on the former end point to get the author name. It&apos;s an overhead making 2 network calls just to fetch 3 parameters, don&apos;t you think? Also, it will just get more complex as we include more resources i.e. comments, images etc.&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&quot;how-demand-driven-applications-work&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#how-demand-driven-applications-work&quot; aria-label=&quot;how demand driven applications work permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;How Demand-driven Applications Work?&lt;/h3&gt;
&lt;p&gt;Now that we understand few issues with REST based APIs, we need a smart system which can give me the exact information required instead of giving me partial/extra information.This can be solved if the client demands what it actually needs and server gives it only that piece of information. This can be done using GraphQL.&lt;/p&gt;
&lt;p&gt;Let&apos;s try to solve our problem using GraphQL. The exact information that our client need can be represented in GraphQL as:&lt;/p&gt;
&lt;p&gt;{% highlight js %}
{
article (id: articleId)
{
title,
description,
author {
name
}
}
}
{% endhighlight %}&lt;/p&gt;
&lt;p&gt;The server can have a single end point with the following &lt;a href=&quot;http://graphql.org/learn/schema/&quot;&gt;schema&lt;/a&gt;:&lt;/p&gt;
&lt;p&gt;{% highlight js %}&lt;/p&gt;
&lt;p&gt;type Article(id: Integer) {
title: String,
description: String,
status: String,
createdAt: Date,
updatedAt: Date,
status: String,
author: Author
}&lt;/p&gt;
&lt;p&gt;type Author(id: Integer) {
name: String,
email: String,
photo: Picture,
followers: [User]
}&lt;/p&gt;
&lt;p&gt;type Picture(id: Integer) {
imgPath: String,
imgHeight: Integer,
imgWidth: Integer
}&lt;/p&gt;
&lt;p&gt;{% endhighlight %}&lt;/p&gt;
&lt;p&gt;And each field in our schema can have a function to fetch that piece of information. In our case:&lt;/p&gt;
&lt;p&gt;{% highlight js %}&lt;/p&gt;
&lt;p&gt;  function Article(id) {
return Article.find(id);
}&lt;/p&gt;
&lt;p&gt;  function Article_title(article) {
return article.title;
}&lt;/p&gt;
&lt;p&gt;  function Article_description(article) {
return article.description;
}&lt;/p&gt;
&lt;p&gt;  function Article_author(article) {
return article.author;
}&lt;/p&gt;
&lt;p&gt;  function Author_name(author) {
return author.name;
}&lt;/p&gt;
&lt;p&gt;{% endhighlight %}&lt;/p&gt;
&lt;p&gt;On querying the data, we get i.e.&lt;/p&gt;
&lt;p&gt;{% highlight js %}&lt;/p&gt;
&lt;p&gt;curl -XGET &lt;a href=&quot;http://myapp/articles&quot;&gt;http://myapp/articles&lt;/a&gt; -d &quot;query={
article(id: 1) {
title,
description,
author {
name
}
}
}&quot;&lt;/p&gt;
&lt;p&gt;{% endhighlight %}&lt;/p&gt;
&lt;p&gt;We will get like this:&lt;/p&gt;
&lt;p&gt;{% highlight js %}
{
title: &apos;Demand Driven APIs Using GraphQL&apos;,
description: &apos;Lorem Ipsum...&apos;,
author: {
name: &apos;Sahil Batla&apos;
}
}
{% endhighlight %}&lt;/p&gt;
&lt;p&gt;This is what we needed, now we can keep the endpoint same and tweak with fields required to display relevant information at any page of our website.&lt;/p&gt;
&lt;h3 id=&quot;advantages-of-demand-driven-apis&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#advantages-of-demand-driven-apis&quot; aria-label=&quot;advantages of demand driven apis permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Advantages of Demand-driven APIs&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;Single end point for serving any piece of information.&lt;/li&gt;
&lt;li&gt;Less payload of data as no extra information is served.&lt;/li&gt;
&lt;li&gt;Versioning of APIs become simpler as we can control the exact information required.&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&quot;disadvantages-of-demand-driven-apis&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#disadvantages-of-demand-driven-apis&quot; aria-label=&quot;disadvantages of demand driven apis permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Disadvantages of Demand-driven APIs&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;Latency may increase due to a single end point handling all the querying of data.&lt;/li&gt;
&lt;li&gt;No lazy loading possible as it&apos;s a single call which will contain all the data.&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&quot;try-it-out&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#try-it-out&quot; aria-label=&quot;try it out permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Try it Out&lt;/h3&gt;
&lt;p&gt;If you think GraphQL is promising go ahead and try it out. There is much more to it that you will love to learn. Check out its &lt;a href=&quot;http://graphql.org/learn/&quot;&gt;official documentation&lt;/a&gt;. It has been implemented in all the well known languages and you can find it all &lt;a href=&quot;http://graphql.org/code/&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;</content:encoded><author>Sahil Batla</author></item><item><title><![CDATA[Wingify's First Internal CTF]]></title><description><![CDATA[Capture the Flag (CTF) is a special kind of information security competition which provides a safe and legal way to try your hand at hacking…]]></description><link>https://engineering.wingify.com//posts/wingify-capture-the-flag/</link><guid isPermaLink="false">https://engineering.wingify.com//posts/wingify-capture-the-flag/</guid><pubDate>Thu, 18 May 2017 18:30:00 GMT</pubDate><content:encoded>&lt;p style=&quot;text-align: center;&quot;&gt;
    &lt;img src=&quot;/images/2017/05/ctf_logo.png&quot;&gt;
&lt;/p&gt;
Have you ever seen a bunch of geeks lock themselves up in a room, hacking throughout the day? This was witnessed when Wingify had its very first Capture The Flag battle.
&lt;p&gt;Capture the Flag (CTF) is a special kind of information security competition which provides a safe and legal way to try your hand at hacking challenges.
We have learned a lot of computer science and security concepts in classes, and by reading articles. But participating in a CTF actually teaches how to break into things when they are not implemented properly, which happens all the time in the real world. In this, all you need to do is to find a flag which is a proof that you solved the puzzle, and submitting it to the platform earns your team points. Flags are typically chosen to look very distinctive, so that when you see one, you’ll know that it’s a flag, and that you’ve solved the puzzle. For example, &lt;code class=&quot;language-text&quot;&gt;flag{congr4tz_y0u_found_1t}&lt;/code&gt;.&lt;/p&gt;
&lt;p style=&quot;text-align: center; margin: 10px;&quot;&gt;
    &lt;img style=&quot;width: 80%;&quot; src=&quot;/images/2017/05/ctf_pic.jpg&quot;&gt;
&lt;/p&gt;
&lt;h3 id=&quot;preparation&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#preparation&quot; aria-label=&quot;preparation permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Preparation&lt;/h3&gt;
&lt;p&gt;Sometime back, &lt;a href=&quot;https://github.com/facebook/fbctf&quot;&gt;Facebook open-sourced a platform&lt;/a&gt; to host &lt;a href=&quot;https://ctftime.org/ctf-wtf/&quot;&gt;Jeopardy styled CTF competitions&lt;/a&gt; and we couldn&apos;t resist ourselves from using it. It&apos;s simply amazing and sleek. It took around 2-3 weeks to prepare for the event and we had fun brainstorming creating the problem set. Creating the problems required thinking of some real world scenarios from the field of software development and security and combine them with references like Mr. Robot, Snowden, etc. A few ideas were taken from prior experience participating in online CTFs and &lt;a href=&quot;http://overthewire.org/wargames/&quot;&gt;Wargames&lt;/a&gt;.&lt;/p&gt;
&lt;h3 id=&quot;event&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#event&quot; aria-label=&quot;event permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Event&lt;/h3&gt;
&lt;p&gt;Wingify CTF was an internal event and very first of its type. Bonus points were offered for teaming up with someone from a non-engineering role. We saw some great participation from the customer support, customer success &amp;#x26; marketing teams as well. To bring everyone on the same page, participants were asked to register for the event by solving a teaser. And the teaser was to find a flag in a registration form. You&apos;d be surprised to hear that the form was made using Google Forms 😮.&lt;/p&gt;
&lt;p&gt;It was an 8-hour long online event which had 45 participants among 16 teams. There was a total of 12 challenges ranging between 40 and 400 based on the difficulty level with total available 1840 points. The set of challenges included problems in web application security and forensics. There was another teaser to be solved before starting off the real game. Early in the CTF, everyone was doing pretty well especially team Matrix and Hunters. In half of the time, quite a good number of hackers were already done with all the problems except the two most difficult ones. When the team Rootcon and Hustlers solved the challenge worth 400 points, they were the clear winners on everyone&apos;s mind. But as they say, it&apos;s not over till it&apos;s over. At the last-minute when team RSS captured that big flag and stood the first place, it was the same feeling like a dramatic last-minute goal in Football.👏&lt;/p&gt;
&lt;h3 id=&quot;challenges&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#challenges&quot; aria-label=&quot;challenges permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Challenges&lt;/h3&gt;
&lt;p&gt;I&apos;d like to mention some of the interesting challenges.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;XSS&lt;/strong&gt; - When we talk about Frontend security, cross-site scripting is the first vulnerability that comes to everyone&apos;s mind. One of the challenges was to detect an XSS vulnerability and exploit it by stealing the cookies. The key challenge while creating this problem was using PhantomJS, a headless WebKit, to check whether the XSS payload got successfully triggered. &lt;code class=&quot;language-text&quot;&gt;shell_exec(&amp;#39;phantomjs fake-browser.js --url&amp;#39; . $url . &amp;#39; --password &amp;#39; . getenv(&amp;#39;FLAG&amp;#39;));&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;S3 Secrets/Credentials&lt;/strong&gt; - This problem was based on the fact that the credentials, such as Amazon S3 keys, Github tokens, and passwords, are &lt;a href=&quot;https://news.ycombinator.com/item?id=13650818&quot;&gt;often included in published GitHub repositories&lt;/a&gt;. Once you have put sensitive data in a Git repository, it is going to stay in the repo&apos;s history forever (&lt;a href=&quot;https://help.github.com/articles/removing-sensitive-data-from-a-repository/&quot;&gt;there are ways to avoid this&lt;/a&gt;).&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Encryption&lt;/strong&gt; - One of my personal favorites was the problem requiring teams to calculate the MD5 of a given string. Sounds pretty straight, right? The challenge is right here in front of you&lt;!-- Not here 😉 --&gt;. Can you capture the flag and send it to ctf@wingify.com? 😊&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&quot;winners&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#winners&quot; aria-label=&quot;winners permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Winners&lt;/h3&gt;
&lt;p style=&quot;text-align: center;&quot;&gt;
    &lt;img style=&quot;width: 85%;&quot; src=&quot;/images/2017/05/ctf_result.png&quot;&gt;
&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;Team RSS&lt;/strong&gt; - &lt;a href=&quot;https://twitter.com/squiroid&quot;&gt;Rachit Gulati&lt;/a&gt;, &lt;a href=&quot;https://in.linkedin.com/in/sahil-bathla-11a7815b&quot;&gt;Sahil Batla&lt;/a&gt;, and &lt;a href=&quot;https://in.linkedin.com/in/sndpsngh&quot;&gt;Sandeep Singh&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Team ROOTCON&lt;/strong&gt; - &lt;a href=&quot;https://twitter.com/gauravmuk&quot;&gt;Gaurav Nanda&lt;/a&gt;, &lt;a href=&quot;https://twitter.com/akanshgulati&quot;&gt;Aakansh Gulati&lt;/a&gt;, and &lt;a href=&quot;https://twitter.com/_ankitag_&quot;&gt;Ankita Gupta&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Team HUSTLERS&lt;/strong&gt; - &lt;a href=&quot;https://in.linkedin.com/in/rahul-kumar-5676a020&quot;&gt;Rahul Kumar&lt;/a&gt;, &lt;a href=&quot;https://twitter.com/arunsori&quot;&gt;Arun Sori&lt;/a&gt;, and &lt;a href=&quot;https://twitter.com/dinkarpundir&quot;&gt;Dinkar Pundir&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Each participant from the top two teams was given &lt;a href=&quot;https://en.wikipedia.org/wiki/YubiKey&quot;&gt;Yubikey&lt;/a&gt; and Bluetooth Speaker respectively.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://in.linkedin.com/in/chhavi-khandelwal-4587513b&quot;&gt;Chhavi&lt;/a&gt; and I were able to pull off the event successfully. It turned out to be great and everyone had fun hacking together. I would highly recommend doing something like this for your organization.  This will surely increase the breadth of security knowledge.&lt;/p&gt;
&lt;h3 id=&quot;mini-ctf-external&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#mini-ctf-external&quot; aria-label=&quot;mini ctf external permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Mini CTF (External)&lt;/h3&gt;
&lt;p&gt;Last week, Wingify hosted a &lt;a href=&quot;https://meetup.com/PyDataDelhi/events/239902014/&quot;&gt;PyData Meetup&lt;/a&gt; and attendees played a quick round of CTF. You can find the pictures below.&lt;/p&gt;
&lt;script&gt;Galleria.run(&apos;#fifth-elephant-gallery&apos;);&lt;/script&gt;
&lt;div id=&quot;fifth-elephant-gallery&quot; style=&quot;height: 600px;&quot;&gt;
    &lt;img src=&quot;/images/2017/05/ctf_meetup.jpg&quot;&gt;
    &lt;img src=&quot;/images/2017/05/ctf_meetup2.jpg&quot;&gt;
    &lt;img src=&quot;/images/2017/05/ctf_meetup3.jpg&quot;&gt;
    &lt;img src=&quot;/images/2017/05/ctf_scoreboard.JPG&quot;&gt;
    &lt;img src=&quot;/images/2017/05/ctf_prize1.jpg&quot;&gt;
    &lt;img src=&quot;/images/2017/05/ctf_prize2.jpg&quot;&gt;
&lt;/div&gt;
&lt;p&gt;If you would like to practice for such events, you should definitely participate in the online CTFs. You can find the &lt;a href=&quot;http://captf.com/practice-ctf/&quot;&gt;list of long-running CTFs&lt;/a&gt;. And if you like playing CTFs, we are hiring for &lt;a href=&quot;https://wingify.recruiterbox.com/jobs/fk0m8cr/&quot;&gt;Security Engineer position&lt;/a&gt; 😍 🙂.&lt;/p&gt;</content:encoded><author>Dheeraj Joshi</author></item><item><title><![CDATA[Wingify Hackathon - Sum It Up]]></title><description><![CDATA[I am a frontend developer at Wingify and I am building a really awesome product, PushCrew. Last month, we had a hackathon. The idea was to…]]></description><link>https://engineering.wingify.com//posts/wingify-hackathon-sum-it-up/</link><guid isPermaLink="false">https://engineering.wingify.com//posts/wingify-hackathon-sum-it-up/</guid><pubDate>Tue, 02 May 2017 18:30:00 GMT</pubDate><content:encoded>&lt;p&gt;I am a frontend developer at Wingify and I am building a really awesome product, &lt;a href=&quot;https://pushcrew.com/&quot;&gt;PushCrew&lt;/a&gt;. Last month, &lt;a href=&quot;https://medium.com/@wingify/hacking-away-the-night-at-wingify-cbe33a39f28d&quot;&gt;we had a hackathon&lt;/a&gt;. The idea was to &lt;b&gt;&apos;Solve Daily Problems&apos;&lt;/b&gt;, interesting right? 😃&lt;/p&gt;
&lt;div class=&quot;post-info-box&quot;&gt;
  &lt;p&gt;This post is a part of March&apos;17 Hackathon Project series. Here are the other posts in the series:&lt;/p&gt;
  &lt;ul&gt;
    &lt;li&gt;
      &lt;a href=&quot;/posts/wingify-hackathon-vwo-xray/&quot;&gt;
        VWO X-Ray
      &lt;/a&gt;
    &lt;/li&gt;
  &lt;/ul&gt;
&lt;/div&gt;
&lt;p&gt;I am an avid reader and I read a lot of stuff on the web, but I often find myself copying parts of different articles and pasting in my notepad. I always thought that it would be a great idea to have all my summaries at single place. I wanted a platform that could show all the highlighted parts of the articles that I have liked without me having to juggle between different tabs. So instead of waiting for an app like this to be built, I went ahead and created a micro bookmarker at the hackathon.&lt;/p&gt;
&lt;div style=&quot;text-align:center; margin: 10px;&quot;&gt;
  &lt;img src=&quot;/images/2017/05/jesus_meme.png&quot; style=&quot;box-shadow: 1px 2px 10px 1px #aaa&quot;&gt;
&lt;/div&gt;
&lt;p&gt;My idea was simple, and I knew that I could build it alone. So I was a one-person team (Obviously me! 😛 ).&lt;/p&gt;
&lt;div style=&quot;text-align:center; margin: 10px;&quot;&gt;
  &lt;img src=&quot;/images/2017/05/alone.png&quot; style=&quot;box-shadow: 1px 2px 10px 1px #aaa&quot;&gt;
&lt;/div&gt;
&lt;p&gt;The idea was not just to build, but also to learn something new because that&apos;s the whole purpose of attending a hackathon, right? Since I had never built a Chrome extension before, I started reading about how to build an extension and took some guidance from our in-house &lt;a href=&quot;https://twitter.com/chinchang457&quot;&gt;frontend God, a.k.a chinchang&lt;/a&gt; 😛 . I devoted some good chunk of time to decide my strategy for building the product.&lt;/p&gt;
&lt;p&gt;So, after spending an entire night on coke and pizzas, I was able to build a beautiful extension which was working, and solving, at least my problem of highlighting parts of articles that I liked on the web. I really hope it helps a lot of people (read: readers) as well.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://rachitgulati.com/sum-it-up/&quot;&gt;Download&lt;/a&gt; this awesome application now 🤘 .&lt;/p&gt;
&lt;p&gt;Here are a few glimpses of my hack.&lt;/p&gt;
&lt;div style=&quot;text-align:center; margin: 10px; box-shadow: 1px 2px 10px 1px #aaa&quot;&gt;
  &lt;img src=&quot;/images/2017/05/sum_it_up_1.gif&quot; alt=&quot;Sum It Up demo&quot;&gt;
&lt;/div&gt;
&lt;div style=&quot;text-align:center; margin: 30px 10px; box-shadow: 1px 2px 10px 1px #aaa&quot;&gt;
  &lt;img src=&quot;/images/2017/05/sum_it_up_2.gif&quot; alt=&quot;Another Sum It Up demo&quot;&gt;
&lt;/div&gt;
&lt;p&gt;&lt;b&gt;Prohibited content (Only for geeks):&lt;/b&gt;&lt;/p&gt;
&lt;p&gt;&lt;i&gt;As soon as the user selects some text on the page (HTML) and right clicks on it, (s)he is shown an option to &apos;Save to Sum it up&apos; in the context menu. On clicking the option, Sum It Up saves the highlighted data (color, text, DOM node, page URL, timestamp etc.) in the JSON format to the local storage (so no breachment of privacy) inside the Chrome browser. The main challenge was to maintain the highlighter for the partial DOM selection which I have solved by putting the custom span tag to all the elements which reside in that selected area.&lt;/i&gt;&lt;/p&gt;
&lt;p&gt;Some features that you might find useful are:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;(High) light it up.&lt;/li&gt;
&lt;li&gt;Collect your notes.&lt;/li&gt;
&lt;li&gt;Email them.&lt;/li&gt;
&lt;li&gt;Searching made easy.&lt;/li&gt;
&lt;li&gt;Tweet your note.&lt;/li&gt;
&lt;li&gt;Are you a markdown lover? Yes you can export in markdown too.&lt;/li&gt;
&lt;li&gt;Directly jump to the micro section of the website.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Sum It Up got featured on &lt;a href=&quot;https://www.producthunt.com/posts/sum-it-up&quot;&gt;Product Hunt&lt;/a&gt; too! Yippee :) (My very first submission on Product Hunt and that too got featured, it&apos;s like Diwali Bonus 😀 )&lt;/p&gt;
&lt;p&gt;PS: This is my first blog post so please be kind to me. I am open to any feedback 😀&lt;/p&gt;</content:encoded><author>Rachit</author></item><item><title><![CDATA[Wingify Hackathon - VWO X-Ray]]></title><description><![CDATA[Recently, Wingify had organised a 24-hour Internal Hackathon where the developers from Wingify created a lot of awesome projects for daily…]]></description><link>https://engineering.wingify.com//posts/wingify-hackathon-vwo-xray/</link><guid isPermaLink="false">https://engineering.wingify.com//posts/wingify-hackathon-vwo-xray/</guid><pubDate>Sat, 01 Apr 2017 18:30:00 GMT</pubDate><content:encoded>&lt;p&gt;Recently, Wingify had organised a 24-hour &lt;a href=&quot;https://medium.com/@wingify/hacking-away-the-night-at-wingify-cbe33a39f28d&quot;&gt;Internal Hackathon&lt;/a&gt; where the developers from Wingify created a lot of awesome projects for daily use. The theme was &lt;i&gt;&lt;b&gt;&quot;Solve Daily Problems&quot;&lt;/b&gt;&lt;/i&gt;. Be it a generic problem or an internal team problem, hackers from Wingify tried to solve many problems over the night. So, &lt;a href=&quot;https://www.linkedin.com/in/pramoddutta/&quot;&gt;Pramod Dutta&lt;/a&gt; and I created a Google Chrome extension &lt;b&gt;&quot;VWO X-Ray&quot;&lt;/b&gt; (&lt;i&gt;one of the winners&lt;/i&gt;), which has proved to be helpful to our internal team.&lt;/p&gt;
&lt;p&gt;VWO X-Ray was created to easily debug the VWO smart code on a website. Whether it&apos;s a developer or a Customer Happiness Engineer or a client, they need some basic information about VWO running on a particular page. This Google Chrome extension enables the user to view the account ID, the running VWO campaigns and the cookies created by VWO on that page. The basic features of the extension are:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;View account ID on the page and impersonate into it directly.&lt;/li&gt;
&lt;li&gt;The &lt;i&gt;Home Tab&lt;/i&gt; will show all campaigns on the page and their information like whether campaigns are running, segmentations passed etc.&lt;/li&gt;
&lt;li&gt;Directly open a specific campaign, with a single click, into the VWO app.&lt;/li&gt;
&lt;li&gt;Directly copy the &quot;Share report link&quot; of the campaign and share it with anyone.&lt;/li&gt;
&lt;li&gt;View VWO cookies&apos; information in a detailed and clear view.&lt;/li&gt;
&lt;li&gt;Notification feature when any campaign variation is applied on the page or any goal has been triggered.&lt;/li&gt;
&lt;li&gt;The &lt;i&gt;Full Data Tab&lt;/i&gt; will give you a glimpse of the app dashboard. You can change the account ID to get any other account&apos;s data.&lt;/li&gt;
&lt;li&gt;The &lt;i&gt;Session Data Tab&lt;/i&gt; will show current session&apos;s information (Track and Analyse), various campaigns&apos; data and goals&apos; data (which ones have been triggered and which ones have not been).&lt;/li&gt;
&lt;li&gt;The &lt;i&gt;Impersonate Tab&lt;/i&gt; will enable you to impersonate into any account and campaign directly. Just enter the account ID and campaign ID(optional).&lt;/li&gt;
&lt;li&gt;This extension, by default, makes 100% sampling rate for Track and Analyse campaigns (most wanted feature for our QA team and Customer Happiness Engineers team).&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Here are some screenshots of the VWO X-Ray extension running on our &lt;a href=&quot;http://vwo.com&quot;&gt;vwo.com&lt;/a&gt; website:&lt;/p&gt;
&lt;div style=&quot;text-align:center; margin: 10px;&quot;&gt;
  &lt;img src=&quot;/images/2017/04/vwo_xray_1.png&quot; style=&quot;box-shadow: 1px 2px 10px 1px #aaa&quot;&gt;
  &lt;div style=&quot;margin: 10px;&quot;&gt;The various campaigns running on the page and their statuses&lt;/div&gt;
&lt;/div&gt;
&lt;br/&gt;
&lt;div style=&quot;text-align:center; margin: 10px;&quot;&gt;
  &lt;img src=&quot;/images/2017/04/vwo_xray_2.png&quot; style=&quot;box-shadow: 1px 2px 10px 1px #aaa&quot;&gt;
  &lt;div style=&quot;margin: 10px;&quot;&gt;A clear view of the session data information&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;We will also be shortly releasing this to our clients, so that they too can get basic information just by using the extension.&lt;/p&gt;
&lt;p&gt;Here is the demo of VWO X-Ray:&lt;/p&gt;
&lt;div style=&quot;text-align:center; margin: 10px;&quot;&gt;
  &lt;img src=&quot;/images/2017/04/vwo_xray_3.gif&quot;&gt;
&lt;/div&gt;</content:encoded><author>Hemkaran Raghav</author></item><item><title><![CDATA[Wingify at Europe/UK Conferences]]></title><description><![CDATA[Last two months were quite amazing for me as a Wingifighter; I was on a traveling spree over Italy and London. I got an opportunity to…]]></description><link>https://engineering.wingify.com//posts/wingify-at-europe-uk-conferences/</link><guid isPermaLink="false">https://engineering.wingify.com//posts/wingify-at-europe-uk-conferences/</guid><pubDate>Sat, 24 Dec 2016 18:30:00 GMT</pubDate><content:encoded>&lt;p&gt;Last two months were quite amazing for me as a Wingifighter; I was on a traveling spree over Italy and London. I got an opportunity to attend and speak at various international conferences and meetups there, which gave me new insights on the importance of JavaScript and Security. It was a new experience for me as I got a chance to meet some great people and learn a lot from them. This post is about my learnings and overall experience representing Wingify and driving the concept of Web Security at various tech events.&lt;/p&gt;
&lt;p style=&quot;text-align: center;&quot;&gt;
    &lt;img src=&quot;/images/2016/12/tshirts.jpg&quot;&gt;
&lt;/p&gt;
&lt;h3 id=&quot;1-nodejs-conference-italy-22nd-october-2016&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#1-nodejs-conference-italy-22nd-october-2016&quot; aria-label=&quot;1 nodejs conference italy 22nd october 2016 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;a href=&quot;http://nodejsconf.it/talk/lets-talk-security/&quot;&gt;1) Node.js Conference, Italy (22nd October 2016)&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;I attended my first International Conference which was held at a beautiful place – Desenzano del Garda, Italy. I was one of the speakers and I talked about &lt;a href=&quot;http://nodejsconf.it/talk/lets-talk-security/&quot;&gt;Node.js Security&lt;/a&gt;.&lt;/p&gt;
&lt;p style=&quot;text-align: center;&quot;&gt;
    &lt;img width=&quot;400&quot; height=&quot;300px&quot; src=&quot;/images/2016/12/nodeconfit.jpg&quot;&gt;
&lt;/p&gt;
The conference started with a keynote by Microsoft&apos;s Bryan Hughes ([@nebrius][11]) about the Node.js community and its evolution. He later introduced us to the Node.js foundation hierarchy and how it operates at various levels. Other speakers, too, touched various relevant and interesting topics including AsyncHooks, Load Balancing, and Deploying Node.js at scale. You can find more information at [http://nodejsconf.it/][18]
&lt;p&gt;Speaker dinners were a great platform where I got to interact and network with fellow speakers. I also met &lt;a href=&quot;https://github.com/feross10&quot;&gt;Feross&lt;/a&gt; and I found him to be very humble and polite. He insisted on why fun side-projects are important and why you should keep doing them. And that’s why Wingify runs &quot;Show n Tell&quot; in which Wingifighters demonstrate and discuss any side projects that they are working on.&lt;/p&gt;
&lt;p&gt;I spent the rest of my time in Italy in traveling and had a wonderful experience. I fell in Love with Gelatos🍦.&lt;/p&gt;
&lt;h3 id=&quot;2-london-ajax-meetup-14th-november-2016&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#2-london-ajax-meetup-14th-november-2016&quot; aria-label=&quot;2 london ajax meetup 14th november 2016 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;a href=&quot;https://www.meetup.com/halfstack/events/234651138/&quot;&gt;2) London Ajax Meetup (14th November 2016)&lt;/a&gt;&lt;/h3&gt;
&lt;p style=&quot;text-align: center;&quot;&gt;
    &lt;img src=&quot;/images/2016/12/meetup.jpg&quot;&gt;
&lt;/p&gt;
This is a monthly meetup that happens in London. This time the focus of the [meetup][2] was JavaScript Security and Neural Networks. I got a really good response after my talk. The venue was Skills Matter Office where a couple of other meetups were going on simultaneously. I realized this when I went into another arena searching for food and none of the people seemed to recognize me.
&lt;p&gt;The other talk during the event was on &quot;Classifying Numbers as Odd or Even With Neural Networks,&quot; by Matt Zeunert. It was quite informative.&lt;/p&gt;
&lt;h3 id=&quot;3-seleniumconf-uk-14th-16th-november-2016&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#3-seleniumconf-uk-14th-16th-november-2016&quot; aria-label=&quot;3 seleniumconf uk 14th 16th november 2016 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;a href=&quot;http://2016.seleniumconf.co.uk/&quot;&gt;3) SeleniumConf UK (14th-16th November 2016)&lt;/a&gt;&lt;/h3&gt;
&lt;p style=&quot;text-align: center;&quot;&gt;
    &lt;img width=&quot;700&quot; height=&quot;350&quot; src=&quot;/images/2016/12/seleniumconf.png&quot;&gt;
&lt;/p&gt;
[SeleniumConf][12] is an event focused on Web Testing and brings together Selenium developers and enthusiasts from around the world to share ideas, socialize, and work together on advancing the present and future success of the project.
&lt;p style=&quot;text-align: center;&quot;&gt;
    &lt;img src=&quot;/images/2016/12/talk.jpg&quot;&gt;
&lt;/p&gt;
  My talk in this conference was about &lt;b&gt;Web Security and Efficient Penetration Testing&lt;/b&gt;. I gave a &lt;i&gt;live demo&lt;/i&gt; of my recent finding (security vulnerability) in InVision. With the help of [Burp Suite][16] and [BeEf][15], I demonstrated how a malicious comment in Invision App can be used to control browser and steal information. You can read more about the vulnerability details I published in [Hackernoon][4].
&lt;p&gt;  Here are the links to the &lt;a href=&quot;https://www.youtube.com/watch?v=csE5tp94wfw&quot;&gt;video&lt;/a&gt; and &lt;a href=&quot;https://speakerdeck.com/djadmin/beyond-scanning&quot;&gt;slides&lt;/a&gt;.&lt;/p&gt;
&lt;h3 id=&quot;4-half-stack-conference-18th-november-2016&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#4-half-stack-conference-18th-november-2016&quot; aria-label=&quot;4 half stack conference 18th november 2016 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;a href=&quot;http://halfstackconf.com/&quot;&gt;4) Half Stack Conference (18th November 2016)&lt;/a&gt;&lt;/h3&gt;
&lt;p style=&quot;text-align: center;&quot;&gt;
    &lt;img src=&quot;/images/2016/12/chris.jpg&quot;&gt;
&lt;/p&gt;
[HalfStack][17] is a one-day, single track, fun and unique JS conf in a pub 🍺. It was good to sit down and listen to [Christian Heilmann][3], [Remy Sharp][20] and [Dylan Schiemann][21]. There were a lot of other interesting talks at the conference. Video recording for all sessions are available [here][19].
&lt;p&gt;After the conference, we went to another pub for a &quot;JavaScript Pub Quiz.&quot;&lt;/p&gt;
&lt;p&gt;The following is an emoji mathematical example given by &lt;a href=&quot;https://twitter.com/novemberborn&quot;&gt;Mark Wubben&lt;/a&gt; in his talk on Babel&lt;/p&gt;
&lt;p&gt;🍺 + 🍺 = 🍻&lt;/p&gt;
&lt;p&gt;🍻 + 🍻 = 😆&lt;/p&gt;
&lt;p&gt;(🍻 * 🍻)^🍻 = 😵&lt;/p&gt;
&lt;hr&gt;
#### To sum up
I got to learn a lot from my travels. I would encourage everyone to follow and attend such conferences and events.
&lt;p style=&quot;text-align: center;&quot;&gt;
    &lt;img width=&quot;400&quot; height=&quot;300&quot; src=&quot;/images/2016/12/swag.jpg&quot;&gt;
    &lt;img width=&quot;400&quot; height=&quot;300&quot; src=&quot;/images/2016/12/node_swag.jpg&quot;&gt;
&lt;/p&gt;
&lt;p&gt;You can keep an eye on the &lt;a href=&quot;https://github.com/prigara/javascript-conferences#2017&quot;&gt;list of FrontEnd Conferences for 2017&lt;/a&gt; and follow Himanshu&apos;s &lt;a href=&quot;https://twitter.com/himkp/lists/frontend-conferences&quot;&gt;twitter list&lt;/a&gt; to stay up-to-date.&lt;/p&gt;
&lt;p&gt;Happy Holidays! 🎄🎁&lt;/p&gt;</content:encoded><author>Dheeraj Joshi</author></item><item><title><![CDATA[Heybot! - Our skype bot]]></title><description><![CDATA[Few days back, we open-sourced our internal Skype bot to the world. Its called Heybot!, but we call it Ramukaka at Wingify :) Whether its…]]></description><link>https://engineering.wingify.com//posts/heybot-your-skype-bot/</link><guid isPermaLink="false">https://engineering.wingify.com//posts/heybot-your-skype-bot/</guid><pubDate>Thu, 22 Dec 2016 18:30:00 GMT</pubDate><content:encoded>&lt;p&gt;Few days back, we open-sourced our internal Skype bot to the world. Its called &lt;a href=&quot;https://github.com/wingify/heybot&quot;&gt;Heybot!&lt;/a&gt;, but we call it Ramukaka at Wingify :) Whether its about running a jenkins build or getting a customer info from account ID, Ramukaka does it all for us.&lt;/p&gt;
&lt;p&gt;Heybot! gives you a simple framework to write commands that you can run, with provision of restricted access to some commands by power users only. Its written over &lt;a href=&quot;https://dev.botframework.com/&quot;&gt;Microsoft&apos;s bot framework&lt;/a&gt;, designed to be extensible for any sort of task in small and large teams. Bot framework based bots work out of the box with Skype, but the same bots can act as a base for a Messenger, slack etc bot too.&lt;/p&gt;
&lt;p&gt;So if your team communication is on Skype (or even if you work alone) and regularly do some tasks which could be automated through a command, Heybot! can definitely prove useful for you. Lets see how you can quickly set it up for Skype.&lt;/p&gt;
&lt;h3 id=&quot;installing&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#installing&quot; aria-label=&quot;installing permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Installing&lt;/h3&gt;
&lt;p&gt;Heybot! is written in NodeJS. To set it up on a server you need to clone the Github repository first:&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;shell&quot;&gt;&lt;pre class=&quot;language-shell&quot;&gt;&lt;code class=&quot;language-shell&quot;&gt;&lt;span class=&quot;token function&quot;&gt;git&lt;/span&gt; clone git@github.com:wingify/heybot.git&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;and run &lt;code class=&quot;language-text&quot;&gt;npm install&lt;/code&gt; in the repository folder to install all the required dependencies.&lt;/p&gt;
&lt;h3 id=&quot;setup&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#setup&quot; aria-label=&quot;setup permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Setup&lt;/h3&gt;
&lt;p&gt;Before you can start using the bot on Skype, you need to create a bot and register it with Microsoft as an app. Create a Microsoft app as directed &lt;a href=&quot;https://docs.botframework.com/en-us/csharp/builder/sdkreference/gettingstarted.html#registering&quot;&gt;here&lt;/a&gt;. When you register your bot, you&apos;ll have to give it a name of your choice that will be used in Skype chat to talk with it.&lt;/p&gt;
&lt;p&gt;Once you register the bot, you&apos;ll have an app ID and app Password with you. Go ahead and create a copy of the file &lt;code class=&quot;language-text&quot;&gt;creds.template.js&lt;/code&gt; into &lt;code class=&quot;language-text&quot;&gt;creds.js&lt;/code&gt; and replace the ID and password in it. If you don&apos;t want to store the ID and password in that readable file, you can have the same keys set as environment variables and Heybot will read from there. Note, that you still need to have a dummy &lt;code class=&quot;language-text&quot;&gt;creds.js&lt;/code&gt; file.&lt;/p&gt;
&lt;p&gt;The bot framework requires the bot server to be running on a valid secure connection. Therefore, you&apos;ll need to provide the Heybot with your domain&apos;s SSL certificates (the .crt and .key files). Place them in the repository folder as &lt;code class=&quot;language-text&quot;&gt;ssl.cert&lt;/code&gt; and &lt;code class=&quot;language-text&quot;&gt;ssl.key&lt;/code&gt;.&lt;/p&gt;
&lt;h3 id=&quot;running-the-bot-server&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#running-the-bot-server&quot; aria-label=&quot;running the bot server permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Running the bot server&lt;/h3&gt;
&lt;p&gt;Now that you have setup your bot, you can run the bot server by running the command &lt;code class=&quot;language-text&quot;&gt;npm start&lt;/code&gt;. Similarly to stop it you can run &lt;code class=&quot;language-text&quot;&gt;npm stop&lt;/code&gt;.&lt;/p&gt;
&lt;h3 id=&quot;adding-your-bot-on-skype&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#adding-your-bot-on-skype&quot; aria-label=&quot;adding your bot on skype permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Adding your bot on Skype&lt;/h3&gt;
&lt;p&gt;The bot you setup would in most cases have commands that you use on day to day basis and it won&apos;t make sense to put such a bot publicly on the Microsoft bot marketplace. For this reason, you can keep you bot in preview mode - just available for you and anyone with the link to add the bot.&lt;/p&gt;
&lt;p&gt;Go to your bot&apos;s page from &lt;a href=&quot;https://dev.botframework.com/bots&quot;&gt;https://dev.botframework.com/bots&lt;/a&gt;. Now click on the &lt;strong&gt;Add to Skype&lt;/strong&gt; button to add it to your skype.&lt;/p&gt;
&lt;div style=&quot;text-align:center; margin: 10px;&quot;&gt;
  &lt;img src=&quot;/images/2016/12/add-to-skype.png&quot;&gt;
&lt;/div&gt;
&lt;p&gt;Once you have added it your skype, you are all set to give it commands. Lets assume you gave your bot the name &lt;strong&gt;droid&lt;/strong&gt; while registering. You can test your new bot by starting a conversation with it and saying anything. If it replies with a Hello message, its working perfectly. You can then try out pre-loaded commands such as &lt;code class=&quot;language-text&quot;&gt;!bored&lt;/code&gt;, &lt;code class=&quot;language-text&quot;&gt;!sad&lt;/code&gt;, &lt;code class=&quot;language-text&quot;&gt;!bitcoin&lt;/code&gt; etc.&lt;/p&gt;
&lt;p&gt;If you add the bot to a group chat, you can give it command by simply mentioning its name before the command&apos;s usual syntax. Eg. &lt;code class=&quot;language-text&quot;&gt;@Droid !bored&lt;/code&gt;.&lt;/p&gt;
&lt;div style=&quot;text-align:center; margin: 10px;&quot;&gt;
  &lt;img src=&quot;/images/2016/12/chatscreen.png&quot;&gt;
&lt;/div&gt;
&lt;p&gt;There you go! Build your own commands and automate your daily boring tasks with Heybot! And do &lt;a href=&quot;https://github.com/wingify/heybot/issues&quot;&gt;tell us on Github&lt;/a&gt; about any feature request, suggestion or any cool command that you made for Heybot!&lt;/p&gt;</content:encoded><author>Kushagra Gour</author></item><item><title><![CDATA[Speeding Up VWO]]></title><description><![CDATA[About two years ago, Wingify had introduced the new generation of our Visual Website Optimizer to the world. Boasting a modern visual…]]></description><link>https://engineering.wingify.com//posts/speeding-up-vwo/</link><guid isPermaLink="false">https://engineering.wingify.com//posts/speeding-up-vwo/</guid><pubDate>Fri, 16 Sep 2016 18:30:00 GMT</pubDate><content:encoded>&lt;p&gt;About two years ago, Wingify had introduced the &lt;a href=&quot;https://vwo.com/blog/launching-new-vwo/&quot;&gt;new generation of our Visual Website Optimizer&lt;/a&gt; to the world. Boasting a modern visual interface, it also had many new features. We’ve come a long way since then. We’ve added even more features to it while improving the previous ones. But with continuous development, it becomes imperative to keep the app lean and fast as well. New features, unless proactively attended to, usually make apps slower. This effect is especially prominent in SPAs(Single Page Applications) which have to be downloaded first on the browser before they can execute. Thus, performance management is an iterative and continuous process. This post is largely a collection of our learnings and implementations done on/to our app to keep it lean and slick.&lt;/p&gt;
&lt;p&gt;There are several types of performances when it comes to modern web applications. This blog post chiefly deals with our efforts in improving the app load time. This was also the first phase of the plan since the first things users notice is how soon can they start using the app.&lt;/p&gt;
&lt;h3 id=&quot;performance-monitoring-tools&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#performance-monitoring-tools&quot; aria-label=&quot;performance monitoring tools permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Performance Monitoring Tools&lt;/h3&gt;
&lt;p&gt;To measure performance, we’ve installed monitoring tools which help us visualize the improvement or deterioration of the app with every release made to production. The chief ones among them are:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;Speedcurve&lt;/strong&gt; — &lt;a href=&quot;https://speedcurve.com/&quot;&gt;Speedcurve&lt;/a&gt; generates a detailed report of the key metrics required to measure network performance. Speedcurve ensures that the each release is monitored. It has a detailed dashboard which shows the health of the app over a period of time. If there’s any negative impact in performance it sends a mail with details of the key performance parameters (like the content size of the page, content requests made by the page, page load time, rendering time etc.).&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Web Page Test Charts API&lt;/strong&gt; — We’ve also installed a custom flavour of Trulia’s open source &lt;a href=&quot;https://github.com/trulia/webpagetest-charts-api&quot;&gt;Webpage Test Charts API&lt;/a&gt; . Since both Speedcurve and Web Page Test Charts API essentially get the test results from webpagetest.org the benchmarking source is same. Web Page Test Charts API allows us to view other parameters which Speedcurve doesn’t show.&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&quot;performance-improvement-measures&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#performance-improvement-measures&quot; aria-label=&quot;performance improvement measures permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Performance Improvement Measures&lt;/h3&gt;
&lt;p&gt;Apart from the tools placed to measure performance, we’d also been busy shipping the following boosts to the app: &lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;Upgrade to AngularJS 1.5&lt;/strong&gt; — While making the VWO App, two years back, the most stable version of AngularJS present was 1.2. Since then several versions have released with the latest one being 1.5. The &lt;a href=&quot;https://medium.com/google-developer-experts/angular-new-features-in-angularjs-1-5-24f9b503af15#.87u227j06&quot;&gt;features&lt;/a&gt; and performance benefits of 1.5 over 1.2 were convincing enough to make the move. But there were plenty of breaking changes which kept the Dev team as well as the QA team busy for quite some time in making sure that the upgraded code was bug free and the customers had a seamless transition. I’m glad to share that we’ve finally made the transition.&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;Move to HTTP/2 Protocol&lt;/strong&gt; — &lt;a href=&quot;https://en.wikipedia.org/wiki/HTTP/2&quot;&gt;HTTP/2 protocol&lt;/a&gt;, the successor of the HTTP 1.1 protocol and based loosely on the SPDY protocol provides several benefits. It enables multiplexing of resources across single TCP connection, compressing and reducing HTTP headers and also supports Server Push (The server can optimistically push resources to the browser which it understands that the browser might require). HTTP/2 has good browser support and is backward compatible with HTTP 1.1 which means browsers not supporting it can fallback to the older protocol.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/images/2016/09/http2-browser-support.png&quot; alt=&quot;HTTP/2 support&quot;&gt;&lt;/p&gt;
&lt;div style=&quot;text-align:center&quot;&gt;HTTP/2 browser support information on Can I Use&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Move to HTTPS&lt;/strong&gt; — HTTPS is a precondition for HTTP/2. So, yay!&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Reduce the initial app content on bootstrap&lt;/strong&gt; — We’ve reduced the initial app loading size by more than a 100 KBs (and more… or should I say &lt;strong&gt;less&lt;/strong&gt;… to come). This has been achieved due to the combined result of:&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Removing heavy libraries with their lighter counterparts&lt;/strong&gt; - We&apos;ve completely removed libraries like Angular Bootstrap and Chosen from our app dependency. These have been replaced by in-house implementations of the respective libraries.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Loading only the modules critical to bootstrap, on bootstrap&lt;/strong&gt; - On analyzing, our app&apos;s bootstrap process, we realized that several modules which weren&apos;t critical to it were still loaded. After some code refactor these modules have been eliminated from the process.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Splitting of vendor files into primary and secondary files&lt;/strong&gt; - More on that later in the post.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Implement better cache-bust mechanism&lt;/strong&gt; — We&apos;ve moved to naming our files based on &lt;a href=&quot;https://en.wikipedia.org/wiki/MD5&quot;&gt;MD5&lt;/a&gt; checksum of their content instead of naming them based on their timestamp of generation, which was the case earlier. This has resulted in generation of fewer unique files on every build. Only the files which are modified get renamed. &lt;/li&gt;
&lt;li&gt;&lt;strong&gt;ETags for the index page&lt;/strong&gt; — The &lt;a href=&quot;https://en.wikipedia.org/wiki/HTTP_ETag&quot;&gt;ETag or entity tag&lt;/a&gt; based on the HTTP protocol allows the client to make conditional requests. This enhances the caching mechanism and saves bandwidth since the browser only makes the request when the file has changed. Ergo, better loading time!&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Split vendor files into primary and secondary&lt;/strong&gt; — It is a common practice in web development to combine all the libraries, required by the app, into a single file. Usually, this is called the vendor file and it gets downloaded entirely in the beginning. Often, several components of the vendor file aren’t required in the usual app usage, but they still get downloaded since it is a single bundle. We’ve divided the vendor file into two and split their content based on the frequency of usage. The first vendor file contains all the libraries which are absolutely necessary for the application to load. For example, AngularJS and its dependencies. The second vendor file is loaded on demand, based on modules which require less frequently required libraries, for example, Graph libraries to show graphs. By doing so we’ve cut a good chunk of approximately 200 KBs from the original monolithic vendor file, a considerable amount by any standard.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Implement login page in vanilla JS&lt;/strong&gt; — The VWO app is written in AngularJS framework. AngularJS is a heavy framework. To add to the woe it has tons of dependencies. The benefit of moving the login page out of AngularJS context, and keeping it in plain JS has a two-fold benefit. Firstly, the login page becomes lighter since it isn’t dependant on the framework anymore. Secondly, by utilising the time that the user takes in filling his credentials we can load, as much of the app, in the background, as possible. Thus, when the user is done signing in, a major portion of the app, if not all, would’ve already been downloaded.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Optimize images&lt;/strong&gt; - Though we used to optimize images earlier, it required the developers to manually run the task and commit those images to the repository. This was cumbersome and often developers would miss doing it. This has now been incorporated into our build process. Each image that now reaches the browser is optimized. &lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;We’ve come a long way from the initial VWO app that was made two years back. And we still have a lot to cover. As we see it, this is just the tip of the iceberg. We’ll be publishing more posts on the improvements that we push to the app. If you have any suggestions, queries or concerns feel free to drop a comment.&lt;/p&gt;</content:encoded><author>Dinkar Pundir</author></item><item><title><![CDATA[Secure Your Web Application @JSChannel Conference ’16]]></title><description><![CDATA[Recently, I spoke about securing Web Applications at JSChannel Conference ’16. The conference venue was The Ritz-Carlton, Bangalore…]]></description><link>https://engineering.wingify.com//posts/secure-your-web-apps/</link><guid isPermaLink="false">https://engineering.wingify.com//posts/secure-your-web-apps/</guid><pubDate>Wed, 24 Aug 2016 18:30:00 GMT</pubDate><content:encoded>&lt;p&gt;Recently, I spoke about securing Web Applications at &lt;a href=&quot;http://2016.jschannel.com&quot;&gt;JSChannel Conference ’16&lt;/a&gt;. The conference venue was The Ritz-Carlton, Bangalore.
JSChannel is a great conference to attend and to connect with some great people. And when I say great, I literally mean it. We met with Yehuda Katz (one of the creators of Ember.js), Lea Verou (Expert in the W3C CSS Working Group) &amp;#x26; Christian Lilley (Father of SVG) and experts from McKinsey.&lt;/p&gt;
&lt;p style=&quot;text-align: center;&quot;&gt;
    &lt;img width=&quot;480&quot; height=&quot;360px&quot; src=&quot;/images/2016/08/jschannel_speakers.jpg&quot;&gt;
&lt;/p&gt;
&lt;p&gt;Three Wingifighters flew to attend and listen to this amazing conference and here we are, showing off some swag.🤘&lt;/p&gt;
&lt;p style=&quot;text-align: center;&quot;&gt;
    &lt;img style=&quot;width:320px !important&quot; src=&quot;/images/2016/08/jschannel_swag.jpg&quot;&gt;
    &lt;img style=&quot;width:320px !important&quot; src=&quot;/images/2016/08/wingifighters.jpg&quot;&gt;
&lt;/p&gt;
&lt;p&gt;Day 1 was amazing. Rachit, having attended almost all the sessions, has shared his learning experience at the conference on the &lt;a href=&quot;http://team.wingify.com/a-wingifighters-account-of-speaking-and-listening-at-the-jschannel&quot;&gt;Team Wingify’s Space&lt;/a&gt;.&lt;/p&gt;
&lt;h3 id=&quot;before-the-talk&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#before-the-talk&quot; aria-label=&quot;before the talk permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Before The Talk&lt;/h3&gt;
&lt;p&gt;Speaking at a conference involves a lot of work before getting on stage. Preparation is crucial. I spent a good number of hours to jot down a list of security vulnerabilities to talk about and steps to mitigate them. I had to make sure none of my demonstrations exposed the vulnerabilities of the websites I chose to talk about.&lt;/p&gt;
&lt;p&gt;And guess what, in my preparation for the demo, I actually found another way to bypass a previously reported vulnerability in time just before the conference.
Keeping in mind the JavaScript conference and the audience, I made sure everything was related to Browser level and Node.js application attacks.&lt;/p&gt;
&lt;h3 id=&quot;the-talk&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#the-talk&quot; aria-label=&quot;the talk permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;The Talk&lt;/h3&gt;
&lt;div style=&quot;width: 100%&quot;&gt;
    &lt;script async class=&quot;speakerdeck-embed&quot; data-id=&quot;73bbddb59072472a88de3b22005089f1&quot; data-ratio=&quot;1.77777777777778&quot; src=&quot;//speakerdeck.com/assets/embed.js&quot;&gt;&lt;/script&gt;
    &lt;p&gt;For the video, scroll down to the end of the post.&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;It all started with a humorous introduction and a show of my prowess!&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Security is like the elephant in the room where everyone agrees that it&apos;s very important but only a few take it very seriously.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;I touched upon the recent Github reused password attack and why we should follow a good password hygiene and move towards multi-factor authentication (MFA).&lt;/p&gt;
&lt;h4 id=&quot;xss&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#xss&quot; aria-label=&quot;xss permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;XSS&lt;/h4&gt;
&lt;img src=&quot;/images/2016/08/jschannel_xss.jpeg&quot;&gt;
&lt;p&gt;&lt;strong&gt;Rule of thumb&lt;/strong&gt;: Validate input and escape output&lt;/p&gt;
&lt;h4 id=&quot;csrf&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#csrf&quot; aria-label=&quot;csrf permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;CSRF&lt;/h4&gt;
&lt;p&gt;XSS + CSRF = Game Over!&lt;/p&gt;
&lt;p&gt;I&apos;ve developed a sample web application using Node.js, Express and Angular that is vulnerable to common security vulnerabilities were demonstrated. &lt;a href=&apos;https://github.com/djadmin/vulnerable-app&apos; target=&apos;_blank&apos;&gt;Click here to see the code.&lt;/a&gt;&lt;/p&gt;
&lt;h4 id=&quot;what-could-possibly-go-wrong&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#what-could-possibly-go-wrong&quot; aria-label=&quot;what could possibly go wrong permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;What could possibly go wrong?&lt;/h4&gt;
&lt;p&gt;The talk ended with a live demonstration of an interesting and serious vulnerability found on a popular hiring platform, RecruiterBox. A JavaScript injection using which an attacker can upload a maliciously crafted resume and can perform Cross-site Scripting attacks. I used Burp Suite, an interceptor proxy to bypass the fix deployed by Recruiterbox, for demonstration purposes.&lt;/p&gt;
&lt;p&gt;To know more about the vulnerability, &lt;a href=&quot;https://medium.com/@dheerajhere/hiring-made-so-easy-security-write-up-c717a152c21c&quot;&gt;click here&lt;/a&gt;.&lt;/p&gt;
&lt;h3 id=&quot;feedback&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#feedback&quot; aria-label=&quot;feedback permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Feedback:&lt;/h3&gt;
&lt;p&gt;After the talk, it was rewarding to see a good response and interesting queries from the audience. One comment I received from audience was &quot;We have just realized that our services are vulnerable to one of the attacks you have demonstrated and we never gave a thought to it. Thank you!&quot;.&lt;/p&gt;
&lt;script&gt;Galleria.run(&apos;#jschannel-gallery&apos;);&lt;/script&gt;
&lt;div id=&quot;jschannel-gallery&quot; style=&quot;height: 400px;&quot;&gt;
    &lt;img src=&quot;/images/2016/08/jschannel_resp1.png&quot;&gt;
    &lt;img src=&quot;/images/2016/08/jschannel_resp2.png&quot;&gt;
&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;My 2 cents for attending any tech conference&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;More than the talks themselves, it is the people that you should attend the conference for. You should meet the other attendees! If a particular talk is interesting and useful then you can and should talk to the speaker.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Key takeaways:&lt;/strong&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Never blindly trust user input.&lt;/li&gt;
&lt;li&gt;Always use proven sanitizers and tools.&lt;/li&gt;
&lt;li&gt;Perform security audits.&lt;/li&gt;
&lt;li&gt;Keep discussing vulnerabilities because the Internet has a bunch of weird old stuff that, not necessarily, every software developer knows about.&lt;/li&gt;
&lt;/ol&gt;
&lt;h4 id=&quot;video&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#video&quot; aria-label=&quot;video permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Video.&lt;/h4&gt;
&lt;div class=&quot;gatsby-resp-iframe-wrapper&quot; style=&quot;padding-bottom: 56.25%; position: relative; height: 0; overflow: hidden; &quot; &gt; &lt;iframe src=&quot;https://www.youtube.com/embed/XaHkHBtth-U&quot; frameborder=&quot;0&quot; allowfullscreen style=&quot; position: absolute; top: 0; left: 0; width: 100%; height: 100%; &quot;&gt;&lt;/iframe&gt; &lt;/div&gt;
&lt;p&gt;As a first-time speaker, I wasn’t sure what to expect. It turned out to be a great experience and received very positive feedback.&lt;/p&gt;</content:encoded><author>Dheeraj Joshi</author></item><item><title><![CDATA[Automating Web Push Notifications @Selenium Conference 2016]]></title><description><![CDATA[There were just two hours left to catch a flight for an exciting opportunity to present at the biggest Selenium conference, SeleniumConf…]]></description><link>https://engineering.wingify.com//posts/automating-web-push-notifications/</link><guid isPermaLink="false">https://engineering.wingify.com//posts/automating-web-push-notifications/</guid><pubDate>Wed, 03 Aug 2016 18:30:00 GMT</pubDate><content:encoded>&lt;p&gt;There were just two hours left to catch a flight for an exciting opportunity to present at the biggest Selenium conference, SeleniumConf 2016, and we were still waiting for our cab to the airport. Our driver was lost within 350 meters of our &lt;a href=&quot;https://wingify.com/&quot;&gt;Wingify&lt;/a&gt; office, finding his way around the vicinity. Eventually, we boarded the flight at the &lt;em&gt;final call&lt;/em&gt;!&lt;/p&gt;
&lt;img src=&quot;/images/2016/08/pushknot_final_call.png&quot;&gt;
&lt;p&gt;A cool breeze welcomed us at Bengaluru airport, and the next morning we were at The Chancery Pavillion Hotel with our passes:&lt;/p&gt;
&lt;img style=&quot;width:280px !important&quot; src=&quot;/images/2016/08/badges_humans.jpg&quot;&gt;
&lt;p&gt;Day 1 was about keynotes, new tools and sponsor stands. HP launches lean UFT, introducing Selenium inbuilt with the tool. There were a lot of talks that explored more areas Selenium could be used in, thereby widening its scope.&lt;/p&gt;
&lt;h3 id=&quot;d-day-demo-day&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#d-day-demo-day&quot; aria-label=&quot;d day demo day permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;D day: Demo day&lt;/h3&gt;
&lt;p&gt;There was no hurry to reach the venue today as the streets were all mapped a day before, suits and boots were tied up. It was the day to present, world&apos;s first ever open source automation tool for push notifications - &lt;em&gt;PushKnot&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Push notifications let users to opt into timely updates from sites they love and allow you to effectively re-engage them with customized, engaging content.
As per recent surveys, push notifications are turning out to be better than email notifications.&lt;/p&gt;
&lt;p&gt;Since it&apos;s a relatively new technology which is booming, the SDLC flows goes like this specs written, functionality developed, unit tests written, how about testing it end to end?
Do it manually or automate it like a boss!&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;PushKnot&lt;/strong&gt; helps you do the latter part well.&lt;/p&gt;
&lt;img src=&quot;/images/2016/08/pushknot_logo.png&quot;&gt;
&lt;blockquote&gt;
&lt;p&gt;&quot;PushKnot is a specialized open-source proxy tool for modifying, parsing and fetching desktop push notifications.”&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h4 id=&quot;how-pushknot-works&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#how-pushknot-works&quot; aria-label=&quot;how pushknot works permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;How PushKnot works:&lt;/h4&gt;
&lt;p&gt;It works as a proxy server which intercepts the service-worker registration request’s response. It adds a specific payload and the new modified service-worker is registered with the browser.&lt;/p&gt;
&lt;img src=&quot;/images/2016/08/pushknot_first_diagram.jpg&quot;&gt;
&lt;p&gt;This payload has specialized code which intercepts and captures the push notification received. Once it has intercepted the push notifications, it saves the notification data in JSON format in a file, and forwards the notification back to the browser so that it can be seen there.&lt;/p&gt;
&lt;img src=&quot;/images/2016/08/pushknot_second_diagram.jpg&quot;&gt;
&lt;p&gt;Once the response is stored in a JSON file it can be easily read and verified.&lt;/p&gt;
&lt;img src=&quot;/images/2016/08/sample_json.png&quot;&gt;
&lt;p&gt;&lt;strong&gt;Steps:&lt;/strong&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;The service is available at &lt;a href=&quot;https://github.com/Ankitagupta2309/pushKnot&quot;&gt;https://github.com/Ankitagupta2309/pushKnot&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;After cloning the repo and running &lt;code class=&quot;language-text&quot;&gt;npm install&lt;/code&gt;, you can start it by running&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;text&quot;&gt;&lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;````node start.js —domain=&amp;lt;yourdomain&amp;gt;
````&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;/li&gt;
&lt;li&gt;By default it will run on port 9002, if you want to change it, you can do so by using the flag —port=9003&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Set up &lt;strong&gt;https&lt;/strong&gt; system proxy to point to 127.0.0.1:9002&lt;/p&gt;
&lt;p&gt; &lt;img src=&quot;/images/2016/08/setup_proxy_push.png&quot; alt=&quot;setup proxy push&quot;&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;When you are launching your browser you need to set 2 flags:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Start a chrome browser with &lt;code class=&quot;language-text&quot;&gt;--ignore-certificate-errors&lt;/code&gt; flag&lt;/li&gt;
&lt;li&gt;Set browser preference &lt;code class=&quot;language-text&quot;&gt;&amp;#39;profile.default_content_setting_values.notifications&amp;#39;: 1&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;{% highlight js %}
chromeOptions: {
&apos;args&apos;: [&apos;--ignore-certificate-errors&apos;],
prefs: {
&apos;profile.default&lt;em&gt;content&lt;/em&gt;setting_values.notifications&apos;: 1
}
}
{% endhighlight %}&lt;/p&gt;
&lt;p&gt;&lt;a href=&apos;http:///www.slideshare.net/ankitagupta2309/pushknot&apos; target=&apos;_blank&apos;&gt;Slides deck&lt;/a&gt; from the talk.&lt;/p&gt;
&lt;div class=&quot;gatsby-resp-iframe-wrapper&quot; style=&quot;padding-bottom: 81.5126050420168%; position: relative; height: 0; overflow: hidden; &quot; &gt; &lt;div style=&quot;width: 100%&quot;&gt; &lt;iframe src=&quot;//www.slideshare.net/slideshow/embed_code/key/jinpOBbAaNDv54&quot; frameborder=&quot;0&quot; marginwidth=&quot;0&quot; marginheight=&quot;0&quot; scrolling=&quot;no&quot; style=&quot;border:1px solid #CCC; border-width:1px; margin-bottom:5px; max-width: 100%; position: absolute; top: 0; left: 0; width: 100%; height: 100%; &quot; allowfullscreen&gt; &lt;/iframe&gt; &lt;/div&gt; &lt;/div&gt;
&lt;p&gt;&lt;a href=&apos;http://www.slideshare.net/ankitagupta2309/pushknot-demo&apos; target=&apos;_blank&apos;&gt;Demo&lt;/a&gt; from the talk.&lt;/p&gt;
&lt;div class=&quot;gatsby-resp-iframe-wrapper&quot; style=&quot;padding-bottom: 56.30252100840336%; position: relative; height: 0; overflow: hidden; &quot; &gt; &lt;iframe src=&quot;//www.slideshare.net/slideshow/embed_code/key/LsA1VDNjsPPfR0&quot; frameborder=&quot;0&quot; marginwidth=&quot;0&quot; marginheight=&quot;0&quot; scrolling=&quot;no&quot; style=&quot;border:1px solid #CCC; border-width:1px; margin-bottom:5px; max-width: 100%; position: absolute; top: 0; left: 0; width: 100%; height: 100%; &quot; allowfullscreen&gt; &lt;/iframe&gt; &lt;/div&gt;
&lt;p&gt;&lt;a href=&apos;https://www.youtube.com/watch?v=Lj9HD-1Pikc&apos; target=&apos;_blank&apos;&gt;Video&lt;/a&gt; of the talk.&lt;/p&gt;
&lt;div class=&quot;gatsby-resp-iframe-wrapper&quot; style=&quot;padding-bottom: 56.30252100840336%; position: relative; height: 0; overflow: hidden; &quot; &gt; &lt;iframe src=&quot;//www.youtube.com/embed/Lj9HD-1Pikc&quot; frameborder=&quot;0&quot; marginwidth=&quot;0&quot; marginheight=&quot;0&quot; scrolling=&quot;no&quot; style=&quot;border:1px solid #CCC; border-width:1px; margin-bottom:5px; max-width: 100%; position: absolute; top: 0; left: 0; width: 100%; height: 100%; &quot; allowfullscreen&gt; &lt;/iframe&gt; &lt;/div&gt;
&lt;p&gt;It was a great learning experience. Received good feedback on our tool, some of which have already been implemented. Write back to us if you have any feedback or queries.&lt;/p&gt;</content:encoded><author>Jatin Makhija, Ankita Gupta</author></item><item><title><![CDATA[Let's talk Security - Engineering Talkies]]></title><description><![CDATA[At Wingify, we recently began an initiative by the name Engineering Talkies where our engineering teams share their experiences, repertoire…]]></description><link>https://engineering.wingify.com//posts/lets-talk-security/</link><guid isPermaLink="false">https://engineering.wingify.com//posts/lets-talk-security/</guid><pubDate>Sun, 01 May 2016 18:30:00 GMT</pubDate><content:encoded>&lt;p&gt;At &lt;a href=&quot;https://wingify.com/&quot;&gt;Wingify&lt;/a&gt;, we recently began an initiative by the name &lt;strong&gt;&lt;em&gt;Engineering Talkies&lt;/em&gt;&lt;/strong&gt; where our engineering teams share their experiences, repertoire of best practices, and learnings. Think of it as a knowledge sharing session between people within and across teams.&lt;/p&gt;
&lt;p&gt;The last talk was about &lt;strong&gt;Web Application Security&lt;/strong&gt; where I spoke about the best practices to follow for tightening the security of our web applications.&lt;/p&gt;
&lt;p&gt;It started with a little introduction to my infosec journey and how companies deal with security researchers. Along the way I also touched upon why startups, specifically, should care about security.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Information Security is not just about following some best practices checklist, it&apos;s all about lateral thinking.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;We explored &lt;a href=&quot;https://www.owasp.org/index.php/Category:OWASP_Top_Ten_Project&quot;&gt;OWASP&apos;s Top 10 Vulnerabilities&lt;/a&gt; considering possible attacks and techniques to shore up our defense against them. Next we went through some real world examples of common security threats and how the risks can be mitigated and flaws addressed.&lt;/p&gt;
&lt;p&gt;In my preparation for the talk, I had conducted an internal security audit of our product application and the security measures we have put in place for &lt;a href=&quot;https://app.vwo.com&quot;&gt;VWO&lt;/a&gt; that should be followed for other products under the &lt;a href=&quot;https://wingify.com/&quot;&gt;Wingify&lt;/a&gt; umbrella. Yes, we are coming up with some cool new products other than VWO, the beloved A/B Testing Tool, Stay tuned.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://speakerdeck.com/djadmin/lets-talk-security&quot;&gt;Slides&lt;/a&gt; from the talk on security at Wingify Engineering Talkies:&lt;/p&gt;
&lt;div style=&quot;width: 100%&quot;&gt;
	&lt;script async class=&quot;speakerdeck-embed&quot; data-id=&quot;09d60c94ca6446e68d5b4779ab71359c&quot; data-ratio=&quot;1.77777777777778&quot; src=&quot;//speakerdeck.com/assets/embed.js&quot;&gt;&lt;/script&gt;
&lt;/div&gt;
&lt;p&gt;It&apos;s very useful for companies to perform internal security audits and today we understand a little better about why we sometimes need to slow down feature development and clean up a bit.&lt;/p&gt;
&lt;p&gt;We take security very seriously at &lt;a href=&quot;https://wingify.com/&quot;&gt;Wingify&lt;/a&gt;. If you find any security vulnerability, please report it to &lt;a href=&quot;mailto:security@wingify.com?Subject=Found%20a%20vulnerability&quot;&gt;security@wingify.com&lt;/a&gt;. We will respond as quickly as we can to any security issues identified.&lt;/p&gt;</content:encoded><author>Dheeraj Joshi</author></item><item><title><![CDATA[Code In the Dark at Wingify]]></title><description><![CDATA[Coding is always fun at Wingify, be it a Wingify Camp or a Fun Friday. And to add to the fun, in a Fun Friday Code In the Dark was organized…]]></description><link>https://engineering.wingify.com//posts/code-in-the-dark/</link><guid isPermaLink="false">https://engineering.wingify.com//posts/code-in-the-dark/</guid><pubDate>Wed, 27 Apr 2016 18:30:00 GMT</pubDate><content:encoded>&lt;div style=&quot;text-align:center; margin: 10px;&quot;&gt;
  &lt;img src=&quot;/images/2016/04/CITD_1.JPG&quot;&gt;
&lt;/div&gt;
&lt;p&gt;Coding is always fun at &lt;a href=&quot;https://wingify.com/&quot;&gt;Wingify&lt;/a&gt;, be it a Wingify Camp or a Fun Friday. And to add to the fun, in a Fun Friday &lt;a href=&quot;http://codeinthedark.com/&quot;&gt;Code In the Dark&lt;/a&gt; was organized by Wingify on 15th April 2016 in both Wingify&apos;s Delhi and Pune office. The event is a front-end (HTML, CSS) competition created by the folks at &lt;a href=&quot;https://tictail.com/&quot;&gt;Tictail&lt;/a&gt;, where each contestant compete to implement a website design given only a screenshot. The catch is, no previews of the results are allowed during the implementation, and no measuring tools can be used. There are some simple rules of the event:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Duration: 15 min&lt;/li&gt;
&lt;li&gt;Technology: HTML/CSS&lt;/li&gt;
&lt;li&gt;No previews&lt;/li&gt;
&lt;li&gt;One champion&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The event started at 5 o&apos;clock in the evening and was divided into two slots, each slot having 9 participants. The rule was to choose two from each slot so that final four compete in the final round. Along with that, to add to the fun and frolic, a loud music was played to motivate the contestants to write the code as fast as they can. The lights were turned off to create an awesome atmosphere to complement the theme of the event. The only light flashing was that of TV and Laptop screens which added a magical appearance to the room.&lt;/p&gt;
&lt;div style=&quot;text-align:center; margin: 10px;&quot;&gt;
  &lt;img src=&quot;/images/2016/04/CITD_2.JPG&quot;&gt;
  &lt;div style=&quot;margin: 10px;&quot;&gt;Ankit Jain and Kushagra Gour starting the event
  &lt;/div&gt;
&lt;/div&gt;
&lt;div style=&quot;text-align:center; margin: 10px;&quot;&gt;
  &lt;img src=&quot;/images/2016/04/CITD_6.jpg&quot;&gt;
  &lt;div style=&quot;margin: 10px;&quot;&gt;Contestants coding in the dark
  &lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;After the completion of the allotted time, two participants from each team were selected based on the audience voting.&lt;/p&gt;
&lt;p&gt;A final round was organized between selected &quot;Fantastic Four&quot; participants from the 2 slots which were &lt;a href=&quot;https://www.linkedin.com/in/sparshgupta&quot;&gt;Sparsh Gupta&lt;/a&gt;,  &lt;a href=&quot;http://hemkaranraghav.in/&quot;&gt;Hemkaran Raghav&lt;/a&gt;,  &lt;a href=&quot;https://www.linkedin.com/in/ashish-bardhan-07654a26&quot;&gt;Ashish Bardhan&lt;/a&gt;, &lt;a href=&quot;https://twitter.com/dheerajhere&quot;&gt;Dheeraj Joshi&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Meanwhile, some people were busy in eating delicious sandwiches and having some beer to quench their thirst.&lt;/p&gt;
&lt;div style=&quot;text-align:center; margin: 10px;&quot;&gt;
  &lt;img src=&quot;/images/2016/04/CITD_4.JPG&quot;&gt;
&lt;/div&gt;
&lt;p&gt;Meanwhile in Wingify&apos;s Pune office...
/&lt;/p&gt;
&lt;div style=&quot;text-align:center; margin: 10px;&quot; class=&quot;galleria&quot;&gt;
  &lt;img src=&quot;/images/2016/04/CITD_pune3.jpg&quot;&gt;
  &lt;img width=&quot;49%&quot; src=&quot;/images/2016/04/CITD_pune2.jpg&quot;&gt;
  &lt;img width=&quot;49%&quot; src=&quot;/images/2016/04/CITD_pune1.jpg&quot;&gt;
&lt;/div&gt;
&lt;p&gt;Next was to decide the winner, and after voting by everyone finally we had the winners.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href=&quot;https://www.linkedin.com/in/sparshgupta&quot;&gt;Sparsh Gupta&lt;/a&gt; (Our CTO) - Winner&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://hemkaranraghav.in&quot;&gt;Hemkaran Raghav&lt;/a&gt; - Runner Up&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Also, The winners from Pune office were:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href=&quot;http://paraschopra.com/&quot;&gt;Paras Chopra&lt;/a&gt; (Our CEO) - Winner&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://rachitgulati.com/&quot;&gt;Rachit Gulati&lt;/a&gt; - Runner Up&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Yeah, our CEO &amp;#x26; CTO are code-in-dark experts :) Checkout the awesome prizes that winners got:&lt;/p&gt;
&lt;div style=&quot;text-align:center; margin: 10px;&quot;&gt;
  &lt;img src=&quot;/images/2016/04/CITD_5.jpg&quot;&gt;
  &lt;div style=&quot;margin: 10px;&quot;&gt;Sparsh Gupta and Hemkaran Raghav getting his prize
  &lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;It was a great experience to participate in the event. Thanks to Kushagra Gour for organizing the awesome blossom event. We hope that this type of events will continue to happen in the time to come.&lt;/p&gt;
&lt;p&gt;You can watch a glimpse of the event here:&lt;/p&gt;
&lt;div class=&quot;gatsby-resp-iframe-wrapper&quot; style=&quot;padding-bottom: 56.25%; position: relative; height: 0; overflow: hidden; &quot; &gt; &lt;div style=&quot;text-align:center; margin: 10px;&quot;&gt; &lt;iframe src=&quot;https://www.youtube.com/embed/x3PoYQtsVjE&quot; frameborder=&quot;0&quot; allowfullscreen style=&quot; position: absolute; top: 0; left: 0; width: 100%; height: 100%; &quot;&gt;&lt;/iframe&gt; &lt;/div&gt; &lt;/div&gt;
&lt;p&gt;If you want to know more about the events and happenings at Wingify, follow us on (&lt;a href=&quot;https://twitter.com/wingify_engg&quot;&gt;Twitter&lt;/a&gt;, or &lt;a href=&quot;https://www.facebook.com/Wingify&quot;&gt;Facebook&lt;/a&gt;). If you have any suggestions for different type of events that we can organize, go ahead and leave comments and we will get back to you. If you like what we do at Wingify and want to join the force, we will be more than happy to work with you. &lt;a href=&quot;https://wingify.com/careers&quot;&gt;As always, we are looking for talented people to work with us&lt;/a&gt;!&lt;/p&gt;</content:encoded><author>Hemkaran Raghav</author></item><item><title><![CDATA[A layout trick]]></title><description><![CDATA[Few weeks ago, we did a redesign of our product - VWO. It wasn't a complete overhaul from scratch, but some major design decisions were…]]></description><link>https://engineering.wingify.com//posts/layout-trick/</link><guid isPermaLink="false">https://engineering.wingify.com//posts/layout-trick/</guid><pubDate>Sun, 03 Apr 2016 18:30:00 GMT</pubDate><content:encoded>&lt;p&gt;Few weeks ago, we did a redesign of our product - VWO. It wasn&apos;t a complete overhaul from scratch, but some major design decisions were taken in the existing design based on the feedback we have received from users since we launched v3.0. This post is about a cool trick we used to achieve a task in that redesign project.&lt;/p&gt;
&lt;h2 id=&quot;the-task-or-issue&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#the-task-or-issue&quot; aria-label=&quot;the task or issue permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;The task (or issue)&lt;/h2&gt;
&lt;p&gt;One of the most principle decisions we made was regarding the main layout of the app. It wasn&apos;t about changes in placement of content, but actually about the UI semantics. It mostly translated to color changes to bring a sense of how any screen in the app is structured and how all components on the page relate to each other. Here is a comparison of the before &amp;#x26; after designs:&lt;/p&gt;
&lt;h3 id=&quot;old-design&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#old-design&quot; aria-label=&quot;old design permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Old Design&lt;/h3&gt;
&lt;p&gt;&lt;img src=&quot;/images/2016/04/old-design.png&quot;&gt;&lt;/p&gt;
&lt;h3 id=&quot;new-design&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#new-design&quot; aria-label=&quot;new design permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;New Design&lt;/h3&gt;
&lt;p&gt;&lt;img src=&quot;/images/2016/04/new-design.png&quot;&gt;&lt;/p&gt;
&lt;p&gt;Note in the new design how different sections on the screen are more distinguished with definite boundaries and background in contrast to old design where all the page content was on a single grey surface. The old design reflected in the architecture as well - every main module got the complete page structure (except the main top header and left navigation) along with it. Eg. A Campaign module (page) in the above screenshot comprises markup of the page title section, tab menu, main content and sidebar. What I am trying to put forth is that a transition between modules causes the complete module content (mentioned sections) to disappear and appear again. This was fine with old design as we need to keep the base layout (the single grey surface) intact and custom content can transition over it. But the new design bought an issue with this approach. &lt;strong&gt;The base layout was no more just a single grey surface, rather it got split into 4 separate distinguishable sections&lt;/strong&gt;:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;white page title section&lt;/li&gt;
&lt;li&gt;grey tab menu&lt;/li&gt;
&lt;li&gt;white main content section&lt;/li&gt;
&lt;li&gt;grey sidebar&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;And all these section&apos;s markup being part of every main module&apos;s markup, would fade in/out during page transitions which was unacceptable as the common page layout (white grey sections) would itself keep getting fade in/out along with the custom content inside them - bad experience!&lt;/p&gt;
&lt;h2 id=&quot;the-trick&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#the-trick&quot; aria-label=&quot;the trick permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;The &quot;Trick&quot;&lt;/h2&gt;
&lt;p&gt;The most trivial approach to retaining the page layout sections during transitions would have been to create those sections in the main markup instead of every module bringing its own 4 sections. And every module change would have simply substituted appropriate custom content inside those constant 4 sections on the page. But this would have meant a major change in the module architecture increasing the scope of the redesign project. Heres how we tackled this issue...&lt;/p&gt;
&lt;p&gt;We used the above mentioned solution but instead of dividing the content into 4 sections at root level, &lt;strong&gt;we created an illusion of having 4 sections always present on the page - using pseudo element &amp;#x26; background gradients!&lt;/strong&gt; Heres how:&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/images/2016/04/pseudo-layout.png&quot;&gt;&lt;/p&gt;
&lt;p&gt;So basically the pseudo structure always stays on the screen with all the custom content going and coming over it and giving an illusion that custom content renders inside those sections - just what we wanted for the end user!&lt;/p&gt;
&lt;h2 id=&quot;final-result-and-code&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#final-result-and-code&quot; aria-label=&quot;final result and code permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Final result and code&lt;/h2&gt;
&lt;iframe height=&apos;358&apos; scrolling=&apos;no&apos; src=&apos;//codepen.io/chinchang/embed/YqEzEQ/?height=358&amp;theme-id=0&amp;default-tab=result&apos; frameborder=&apos;no&apos; allowtransparency=&apos;true&apos; allowfullscreen=&apos;true&apos; style=&apos;width: 100%;&apos;&gt;See the Pen &lt;a href=&apos;http://codepen.io/chinchang/pen/YqEzEQ/&apos;&gt;Pseudo layout illusion&lt;/a&gt; by Kushagra Gour (&lt;a href=&apos;http://codepen.io/chinchang&apos;&gt;@chinchang&lt;/a&gt;) on &lt;a href=&apos;http://codepen.io&apos;&gt;CodePen&lt;/a&gt;.
&lt;/iframe&gt;
&lt;h2 id=&quot;in-the-end&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#in-the-end&quot; aria-label=&quot;in the end permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;In the End&lt;/h2&gt;
&lt;p&gt;This trick (or hack as one may call) helped us achieve the desired UX without actually modifying the base module architecture and it has been working really great so far without any compromises made. &lt;strong&gt;Hacks are not always bad after all...its just about evaluating what is best when.&lt;/strong&gt;&lt;/p&gt;</content:encoded><author>Kushagra Gour</author></item><item><title><![CDATA[Free objects - a generalized interpreter pattern]]></title><description><![CDATA[In the GOF book, the interpreter pattern is probably one of the most poorly described patterns. The interpreter pattern basically consists…]]></description><link>https://engineering.wingify.com//posts/Free-objects/</link><guid isPermaLink="false">https://engineering.wingify.com//posts/Free-objects/</guid><pubDate>Sun, 14 Feb 2016 18:30:00 GMT</pubDate><content:encoded>&lt;p&gt;In the &lt;a href=&quot;http://www.amazon.com/Design-Patterns-Elements-Reusable-Object-Oriented/dp/0201633612&quot;&gt;GOF book&lt;/a&gt;, the &lt;a href=&quot;https://en.wikipedia.org/wiki/Interpreter_pattern&quot;&gt;interpreter pattern&lt;/a&gt; is probably one of the most poorly described patterns. The interpreter pattern basically consists of building a specialty programming language out of objects in your language, and then interpreting it on the fly. &lt;a href=&quot;https://en.wikipedia.org/wiki/Greenspun%27s_tenth_rule&quot;&gt;Greenspun&apos;s Tenth Rule&lt;/a&gt; describes it as follows:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Any sufficiently complicated C or Fortran program contains an ad hoc, informally-specified, bug-ridden, slow implementation of half of Common Lisp.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;In essence, the interpreter pattern consists of dynamically generating and transmitting code at run time instead of statically generating it at compile time.&lt;/p&gt;
&lt;p&gt;However, I believe that modern functional programming provides us some alternatives that provide functionality approaching that of embedding a lisp interpreter in our runtime, but also with some measures of type safety. I&apos;m going to describe Free Objects, and how they can be used as a substitute for an interpreter.&lt;/p&gt;
&lt;p&gt;At Wingify, we have several important interpreters floating around in our (currently very experimental) event driven notification system. In this post I&apos;ll show how Free Boolean Algebras can drastically simplify the process of defining custom events.&lt;/p&gt;
&lt;h1 id=&quot;algebraic-structures&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#algebraic-structures&quot; aria-label=&quot;algebraic structures permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Algebraic structures&lt;/h1&gt;
&lt;p&gt;In functional programming, there are a lot of algebraic structures that are used to write programs in a type-safe manner. &lt;a href=&quot;https://blog.safaribooksonline.com/2013/05/15/monoids-for-programmers-a-scala-example/&quot;&gt;Monoids&lt;/a&gt; are one of the simplest examples - a monoid is a type &lt;code class=&quot;language-text&quot;&gt;T&lt;/code&gt; together with an operation &lt;code class=&quot;language-text&quot;&gt;|+|&lt;/code&gt; and an element &lt;code class=&quot;language-text&quot;&gt;zero[T]&lt;/code&gt; with the following properties:&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;text&quot;&gt;&lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;a |+| (b |+| c) === (a |+| b) |+| c   //associativity
a |+| zero === a                      //zero&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;A type is a monoid if it contains elements which can be added together in an associative way, together with a zero element. A number of common structures form monoids - integers (with &lt;code class=&quot;language-text&quot;&gt;a |+| b = a + b&lt;/code&gt; ) are a simple example. For instance:&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;text&quot;&gt;&lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;3 + (5 + 7) === (3 + 5) + 7 === 15
-17 + 0 === -17&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;But many other data structures also obey this law. Lists and strings, using &lt;code class=&quot;language-text&quot;&gt;|+|&lt;/code&gt; for concatenation and either &lt;code class=&quot;language-text&quot;&gt;[]&lt;/code&gt; or &lt;code class=&quot;language-text&quot;&gt;&amp;quot;&amp;quot;&lt;/code&gt; as the zero element, are also monoids. Monoids are commonly used as data structures to represent logs, for example.&lt;/p&gt;
&lt;p&gt;Another algebraic structure is the Boolean Algebra. This is a type &lt;code class=&quot;language-text&quot;&gt;T&lt;/code&gt; with three operations - &lt;code class=&quot;language-text&quot;&gt;&amp;amp;&lt;/code&gt;, &lt;code class=&quot;language-text&quot;&gt;|&lt;/code&gt; and &lt;code class=&quot;language-text&quot;&gt;~&lt;/code&gt;, with a rather larger set of properties:&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;text&quot;&gt;&lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;a &amp;amp; (b &amp;amp; c) === (a &amp;amp; b) &amp;amp; c
a | (b | c) === (a | b) | c
~~a === a
a &amp;amp; (b | c) === (a &amp;amp; b) | (a &amp;amp; c)
a | (b &amp;amp; c) === (a | b) &amp;amp; (a | c)
a &amp;amp; a === a
a | a === a
...etc...&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;A boolean algebra also has both a &lt;code class=&quot;language-text&quot;&gt;zero&lt;/code&gt; and &lt;code class=&quot;language-text&quot;&gt;one&lt;/code&gt; element, satisfying &lt;code class=&quot;language-text&quot;&gt;zero &amp;amp; _ === zero&lt;/code&gt;, &lt;code class=&quot;language-text&quot;&gt;zero | x === x&lt;/code&gt;, &lt;code class=&quot;language-text&quot;&gt;one &amp;amp; x === x&lt;/code&gt; and &lt;code class=&quot;language-text&quot;&gt;one | _ === one&lt;/code&gt;. There are many common boolean algebras as well - &lt;code class=&quot;language-text&quot;&gt;Boolean&lt;/code&gt; of course, but also fixed-length bitmaps (with operations interpreted bitwise), functions of type &lt;code class=&quot;language-text&quot;&gt;T =&amp;gt; Boolean&lt;/code&gt; (here &lt;code class=&quot;language-text&quot;&gt;f &amp;amp; g = (x =&amp;gt; f(x) &amp;amp;&amp;amp; g(x))&lt;/code&gt;, etc).&lt;/p&gt;
&lt;p&gt;There are quite a few more algebraic structures - monads provide another example. But I&apos;m going to leave the trickier ones for another post.&lt;/p&gt;
&lt;h2 id=&quot;side-note-boolean-algebras-are-monoids-too&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#side-note-boolean-algebras-are-monoids-too&quot; aria-label=&quot;side note boolean algebras are monoids too permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Side note: Boolean Algebras are Monoids Too&lt;/h2&gt;
&lt;p&gt;One of the interesting facts about abstract algebra is that many of these structures interact with each other in interesting ways. For example, any boolean algebra also has &lt;em&gt;two&lt;/em&gt; monoids built into it. The operations &lt;code class=&quot;language-text&quot;&gt;&amp;amp;&lt;/code&gt; and &lt;code class=&quot;language-text&quot;&gt;one&lt;/code&gt; satisfy the laws of a monoid:&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;text&quot;&gt;&lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;a &amp;amp; (b &amp;amp; c) === (a &amp;amp; b) &amp;amp; c
a &amp;amp; one === a&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Similarly, the operations &lt;code class=&quot;language-text&quot;&gt;|&lt;/code&gt; and &lt;code class=&quot;language-text&quot;&gt;zero&lt;/code&gt; also satisfy the monoid laws:&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;text&quot;&gt;&lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;a | (b | c) === (a | b) | c
a | zero === a&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h1 id=&quot;event-predicates---take-one&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#event-predicates---take-one&quot; aria-label=&quot;event predicates   take one permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Event predicates - take one&lt;/h1&gt;
&lt;p&gt;In our experimental (i.e., you can&apos;t use it yet) event based targeting system, I wanted to create an easy way for users to trigger events. I.e., I want to be able to define a formula and evaluate whether it is true or false for some event. E.g.:&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;text&quot;&gt;&lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;((EventType == &amp;#39;pageview&amp;#39;) &amp;amp; (url == &amp;#39;http://www.vwo.com/pricing/&amp;#39;))
   | ((EventType == &amp;#39;custom&amp;#39;) &amp;amp; (custom_event_name == &amp;#39;pricing_popup_displayed&amp;#39;))&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This can be represented in Scala pretty straightforwardly:&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;text&quot;&gt;&lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;sealed trait EventPredicate {
  def matches(evt: Event): Boolean
  def &amp;amp;(other: EventPredicate) = And(this, other)
  def |(other: EventPRedicate) = Or(this, other)
  ...
}
case class EventType(kind: String) extends EventPredicate {
  def matches(evt: Event) = EventLenses.eventType.get(evt) == kind
}&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;We also need boolean operators:&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;text&quot;&gt;&lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;case class And(a: EventPredicate, b: EventPredicate) extends EventPredicate {
  def matches(evt: Event) = a.matches(evt) &amp;amp;&amp;amp; b.matches(evt)
}

...etc...&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Unfortunately, we have more than one type of predicate. We had quite a few requirements, in fact:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;We want to compile &lt;em&gt;some&lt;/em&gt; predicates to Javascript so they can be evaluated browser side.&lt;/li&gt;
&lt;li&gt;We want to define compound predicates for the convenience of the user. E.g. &lt;code class=&quot;language-text&quot;&gt;GACampaign(utm_source, utm_campaign, ...)&lt;/code&gt; instead of &lt;code class=&quot;language-text&quot;&gt;URLParam(&amp;quot;utm_source&amp;quot;, &amp;quot;email&amp;quot;) &amp;amp; URLParam(&amp;quot;utm_campaign&amp;quot;, &amp;quot;ilovepuppies&amp;quot;) &amp;amp; ...&lt;/code&gt;, but we&apos;d also like to avoid re-implementing in multiple places things like parsing URL params.&lt;/li&gt;
&lt;li&gt;We actually have multiple types of predicate - &lt;code class=&quot;language-text&quot;&gt;EventPredicate&lt;/code&gt;, &lt;code class=&quot;language-text&quot;&gt;UserPredicate&lt;/code&gt;, &lt;code class=&quot;language-text&quot;&gt;PagePredicate&lt;/code&gt; and we&apos;d like to avoid duplicating code to handle simple boolean algebra stuff. We&apos;d also like to avoid namespace collisions, so we&apos;d need to do &lt;code class=&quot;language-text&quot;&gt;AndEvent&lt;/code&gt;, &lt;code class=&quot;language-text&quot;&gt;AndUser&lt;/code&gt;, etc.&lt;/li&gt;
&lt;li&gt;We also need to serialize these data structures to JSON, so it would be great if we could not duplicate code around things like serializing &lt;code class=&quot;language-text&quot;&gt;And___&lt;/code&gt;, &lt;code class=&quot;language-text&quot;&gt;Or___&lt;/code&gt;, etc.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;The simple object-oriented approach described above doesn&apos;t really satisfy all these requirements.&lt;/p&gt;
&lt;h1 id=&quot;the-free-boolean-algebra&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#the-free-boolean-algebra&quot; aria-label=&quot;the free boolean algebra permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;The Free Boolean Algebra&lt;/h1&gt;
&lt;p&gt;Ultimately, what I really want to do is the following. I want to define a &lt;em&gt;set&lt;/em&gt; of objects, e.g.:&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;text&quot;&gt;&lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;case class EventType(kind: String) extends EventSpec
case class URLMatch(url: String) extends EventSpec
...&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Then I want to be able to build a boolean algebra out of them with some sort of simple type constructor. Given
an object created with this type constructor, I then need to be able to make various algebra preserving transformations.&lt;/p&gt;
&lt;p&gt;Luckily the field of abstract algebra provides a generic solution to this problem - the &lt;a href=&quot;https://en.wikipedia.org/wiki/Free_object&quot;&gt;Free Object&lt;/a&gt;.
A free object is a version of an algebraic structure which has no interpretation whatsoever - it&apos;s a purely symbolic
way of representing that algebra. But the important thing about the free object is that it gives interpretation almost
for free.&lt;/p&gt;
&lt;p&gt;More concretely, a Free Object is a &lt;a href=&quot;http://eed3si9n.com/learning-scalaz/Functor.html&quot;&gt;Functor&lt;/a&gt; with a particular natural transformation. I.e., for any type &lt;code class=&quot;language-text&quot;&gt;T&lt;/code&gt;, there is a type &lt;code class=&quot;language-text&quot;&gt;FreeObj[T]&lt;/code&gt; with the following properties:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;For any object &lt;code class=&quot;language-text&quot;&gt;t&lt;/code&gt; of type &lt;code class=&quot;language-text&quot;&gt;T&lt;/code&gt;, there is a corresponding object &lt;code class=&quot;language-text&quot;&gt;t.point[FreeObj]&lt;/code&gt; having type &lt;code class=&quot;language-text&quot;&gt;FreeObj[T]&lt;/code&gt;. I.e., objects outside the functor can be lifted into it.&lt;/li&gt;
&lt;li&gt;Let &lt;code class=&quot;language-text&quot;&gt;X&lt;/code&gt; be another object having the same algebraic structure (e.g., &lt;code class=&quot;language-text&quot;&gt;X&lt;/code&gt; is any boolean algebra). Then for any function &lt;code class=&quot;language-text&quot;&gt;f: T =&amp;gt; X&lt;/code&gt;, there is a natural transformation &lt;code class=&quot;language-text&quot;&gt;nat(f): FreeObj[T] =&amp;gt; X&lt;/code&gt; with the properties that (a) &lt;code class=&quot;language-text&quot;&gt;nat(f)(t.point) = f(t)&lt;/code&gt; and (b) &lt;code class=&quot;language-text&quot;&gt;nat(f)&lt;/code&gt; preserves the structure of the underlying algebra.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Preserving the structure of the underlying algebra is important - this means that for a boolean algebra, &lt;code class=&quot;language-text&quot;&gt;nat(f)(x &amp;amp; y) === nat(f)(x) &amp;amp; nat(f)(y)&lt;/code&gt;, &lt;code class=&quot;language-text&quot;&gt;nat(f)(x | y) === nat(f)(x) | nat(f)(y)&lt;/code&gt;, etc.This property of preserving the structure is called &lt;em&gt;homomorphism&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;This bit of mathematics is, in programming terms, the API of our FreeObject. This API allows us to turn any type into a monoid/boolean algebra/etc, and it guarantees that no information whatsoever is lost by doing so.&lt;/p&gt;
&lt;h2 id=&quot;how-to-use-it&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#how-to-use-it&quot; aria-label=&quot;how to use it permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;How to use it&lt;/h2&gt;
&lt;p&gt;We&apos;ve developed a library which includes Free Boolean Algebras called &lt;a href=&quot;https://github.com/stucchio/oldmonk&quot;&gt;Old Monk&lt;/a&gt;. It&apos;s named after the &lt;a href=&quot;https://en.wikipedia.org/wiki/Old_Monk&quot;&gt;finest rum in the world&lt;/a&gt;. Old Monk also builds on top of &lt;a href=&quot;https://github.com/non/spire&quot;&gt;Spire&lt;/a&gt;, which provides various abstract algebra type classes in Scala.&lt;/p&gt;
&lt;p&gt;To create a simple Boolean algebra for events, we import the following:&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;text&quot;&gt;&lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;import com.vwo.oldmonk.free._
implicit val freeBoolAlgebra = FreeBoolListAlgebra //There are multiple variants
type FreeBool = FreeBoolList
import spire.algebra._
import spire.implicits._&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;We then define our underlying type:&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;text&quot;&gt;&lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;sealed trait EventSpec
case class CookieValue(key: String, value: String) extends EventSpec
...&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Finally, we define the predicate type:&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;text&quot;&gt;&lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;type EventPredicate = FreeBool[EventSpec]&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Combining objects is now straightforward, and uses Spire syntax:&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;text&quot;&gt;&lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;val pred = CookieValue(&amp;quot;foo&amp;quot;, &amp;quot;bar&amp;quot;).point[FreeBool] | URLParam(&amp;quot;_foo&amp;quot;, &amp;quot;bar&amp;quot;)
val pred2 = ...
val pred3 = ~pred &amp;amp; pred2&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;(There is an implicit in oldmonk which is smart enough to turn the &lt;code class=&quot;language-text&quot;&gt;URLParam&lt;/code&gt; object into an &lt;code class=&quot;language-text&quot;&gt;EventPredicate&lt;/code&gt;, but not smart enough to apply to the first one.)&lt;/p&gt;
&lt;p&gt;That&apos;s great - we&apos;ve now got a boolean algebra. But how do we use it?&lt;/p&gt;
&lt;h3 id=&quot;evaluating-a-predicate&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#evaluating-a-predicate&quot; aria-label=&quot;evaluating a predicate permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Evaluating a predicate&lt;/h3&gt;
&lt;p&gt;To evaluate a predicate, we need to use the &lt;code class=&quot;language-text&quot;&gt;nat&lt;/code&gt; operation. Recall that the type of &lt;code class=&quot;language-text&quot;&gt;nat&lt;/code&gt; is:&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;text&quot;&gt;&lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;def nat[T,X](f: T =&amp;gt; X): FreeBool[T] =&amp;gt; X&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;So to use this, we simply need to define how our function &lt;code class=&quot;language-text&quot;&gt;f&lt;/code&gt; operates on &lt;em&gt;individual&lt;/em&gt; &lt;code class=&quot;language-text&quot;&gt;EventSpec&lt;/code&gt; objects:&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;text&quot;&gt;&lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;def evalEventSpec(evt: Event): (EventSpec =&amp;gt; Boolean) = (e:EventSpec) =&amp;gt;
  e match {
    case CookieValue(k, v) =&amp;gt; EventLenses.cookie(k).get(evt).getOrElse(false)
    case URLMatches(url) =&amp;gt; EventLenses.url.get(evt) == url
    ...
  }&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Then by the magic of &lt;code class=&quot;language-text&quot;&gt;nat&lt;/code&gt;, we can evaluate predicates:&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;text&quot;&gt;&lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;def evaluateEventPredicate(pred: EventPredicate, event: Event): Boolean =
  nat(evalEventSpec(event))(pred)&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;The logic is that &lt;code class=&quot;language-text&quot;&gt;evalEventSpec(event)&lt;/code&gt; has type &lt;code class=&quot;language-text&quot;&gt;EventSpec =&amp;gt; Boolean&lt;/code&gt;. The operation &lt;code class=&quot;language-text&quot;&gt;nat&lt;/code&gt; lifts this to
a function mapping &lt;code class=&quot;language-text&quot;&gt;EventPredicate =&amp;gt; Boolean&lt;/code&gt;, and then this function is applied to the actual predicate.&lt;/p&gt;
&lt;p&gt;Due to the laws of the Free Boolean Algebra, we know that this method must evaluate things correctly. I.e.,
imagine we had a predicate &lt;code class=&quot;language-text&quot;&gt;a.point[FreeBool] | b.point[FreeBool]&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;By the second law of free Boolean algebras, the homomorphism property, we know that:&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;text&quot;&gt;&lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;nat(f)(a.point[FreeBool] | b.point[FreeBool]) ===
  nat(f)(a.point[FreeBool]) | nat(f)(b.point[FreeBool])&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;By the first law, we know that:&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;text&quot;&gt;&lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;nat(f)(a.point[FreeBool]) === f(a)
nat(f)(b.point[FreeBool]) === f(b)&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Substituting this in yields:&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;text&quot;&gt;&lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;nat(f)(a.point[FreeBool] | b.point[FreeBool]) ===
  nat(f)(a.point[FreeBool]) | nat(f)(b.point[FreeBool]) ===
  f(a) | f(b)&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Thus, the &lt;code class=&quot;language-text&quot;&gt;nat&lt;/code&gt; function has faithfully created a way for us to evaluate our predicates.&lt;/p&gt;
&lt;h3 id=&quot;translating-predicates&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#translating-predicates&quot; aria-label=&quot;translating predicates permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Translating predicates&lt;/h3&gt;
&lt;p&gt;Consider one of our other requirements - we want to build convenience predicates for the user, but we don&apos;t want to duplicate work to evaluate them.&lt;/p&gt;
&lt;p&gt;To handle this case, we&apos;d tweak the underlying definition of our predicates a bit:&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;text&quot;&gt;&lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;sealed trait EventSpec

sealed trait PrimitiveEventSpec extends EventSpec
case class CookieValue(key: String, value: String) extends PrimitiveEventSpec
...

sealed trait CompoundEventSpec extends EventSpec
case class GACampaignMatches(source: String,campaign: String)&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;We&apos;ll approach this problem in two ways. First, we&apos;ll build a &lt;em&gt;translation&lt;/em&gt; layer - a way to translate &lt;code class=&quot;language-text&quot;&gt;FreeBool[EventSpec] =&amp;gt; FreeBool[PrimitiveEventSpec]&lt;/code&gt;.
Then we&apos;ll build the &lt;em&gt;evaluation&lt;/em&gt; layer - a way to compute &lt;code class=&quot;language-text&quot;&gt;FreeBool[PrimitiveEventSpec] =&amp;gt; Boolean&lt;/code&gt;. With this structure, we only need to
define evaluation on the primitives.&lt;/p&gt;
&lt;p&gt;The translation is actually very simple with &lt;code class=&quot;language-text&quot;&gt;nat&lt;/code&gt;. First we define a mapping from &lt;code class=&quot;language-text&quot;&gt;EventSpec =&amp;gt; FreeBool[PrimitiveEventSpec]&lt;/code&gt;, and then we use &lt;code class=&quot;language-text&quot;&gt;nat&lt;/code&gt; to lift this function to &lt;code class=&quot;language-text&quot;&gt;FreeBool&lt;/code&gt;:&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;text&quot;&gt;&lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;def primitivizeSpec(es: EventSpec): FreeBool[PrimitiveEventSpec]) = (es: EventSpec) match {
  case (x: PrimitiveEventSpec) =&amp;gt; x.point[FreeBool]
  case (c: CompountEventSpec) =&amp;gt; c match {
    case GACampaignMatches(source, campaign) =&amp;gt;
      (URLParam(&amp;quot;utm_source&amp;quot;, source) : FreeBool[PrimitiveEventSpec]) &amp;amp; (URLParam(&amp;quot;utm_campaign&amp;quot;, campaign) : FreeBool[PrimitiveEventSpec])
      ...
  }
}

val primitivize: FreeBool[EventSpec] =&amp;gt; FreeBool[PrimitiveEventSpec] = nat(primitivizeSpec _)&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Then we would define evaluation the same as above:&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;text&quot;&gt;&lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;def evalPrimitiveEventSpec(evt: Event): (EventSpec =&amp;gt; Boolean) = (e:EventSpec) =&amp;gt;
  e match {
    case CookieValue(k, v) =&amp;gt; EventLenses.cookie(k).get(evt).getOrElse(false)
    case URLMatches(url) =&amp;gt; EventLenses.url.get(evt) == url
    ...
  }

def evaluatePrimitiveEventPredicate(pred: PrimitiveEventPredicate, event: Event): Boolean =
  nat(evalPrimitiveEventSpec(event))(pred)&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Finally we would define evaluation as:&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;text&quot;&gt;&lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;def evaluateEventPredicate(pred: EventPredicate, event: Event): Boolean =
  evaluatePrimitiveEventPredicate(primitivize(pred))&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h3 id=&quot;partial-evaluation&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#partial-evaluation&quot; aria-label=&quot;partial evaluation permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Partial Evaluation&lt;/h3&gt;
&lt;p&gt;Another cool trick this approach gives us is partial evaluation. Suppose we gain partial information about a predicate, but it&apos;s incomplete.
For instance, we know that &lt;code class=&quot;language-text&quot;&gt;evaluate(a)&lt;/code&gt; should be &lt;code class=&quot;language-text&quot;&gt;True&lt;/code&gt; but we don&apos;t know what &lt;code class=&quot;language-text&quot;&gt;evaluate(b)&lt;/code&gt; should be.&lt;/p&gt;
&lt;p&gt;Concretely, suppose we have a function:&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;text&quot;&gt;&lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;def partialEvaluate(e: EventSpec): Option[Boolean] = ...&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;We can then partially evaluate our predicates:&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;text&quot;&gt;&lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;def partiallyEvaluatePredicate(e: EventPredicate) =
  nat( (e:EventSpec) =&amp;gt; {
    partialEvaluate(e).fold( e )(x =&amp;gt; {
      if (x) { True } else { False }
      })
    })&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Then, supposing we know &lt;code class=&quot;language-text&quot;&gt;a&lt;/code&gt; to be true but &lt;code class=&quot;language-text&quot;&gt;b&lt;/code&gt; is unknown, this will evaluate to:&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;text&quot;&gt;&lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;partiallyEvaluatePredicate(a &amp;amp; b) ===
  partialEvaluate(a) &amp;amp; partialEvaluate(b) ===
  True &amp;amp; b ===
  b&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;This is useful to us in a variety of cases. Often times we&apos;ll have a predicate which combines information known server
side, and other information which is only known in the browser. Partial evaluation lets us compute the server side information,
substitute this result in, and have a resulting predicate which depends only on browser-side information.&lt;/p&gt;
&lt;p&gt;The browser-side predicate can then be rendered to javascript and evaluated in the browser directly. This is pretty straightforward, in fact:&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;text&quot;&gt;&lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;def evaluateServerSide(e: ServerSideEventSpec): Boolean = ...

def browserify(e: EventPredicate): BrowserSideEventPredicate =
  nat( (e:EventSpec) =&amp;gt; e match {
      case (b:BrowserSideEventSpec) =&amp;gt; b.point[FreeBool] : BrowserSideEventPredicate
      case (s:ServerSideEventSpec) =&amp;gt; if (evaluateServerSide(s)) {
         TruePred : BrowserSideEventPredicate
       } else {
         FalsePred : BrowserSideEventPredicate
       }
    }
  )&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h1 id=&quot;conclusion&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#conclusion&quot; aria-label=&quot;conclusion permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Conclusion&lt;/h1&gt;
&lt;p&gt;Free objects are a great way to build generalized interpreter patterns. Just as the &lt;code class=&quot;language-text&quot;&gt;FreeMonad&lt;/code&gt; (called simply &lt;code class=&quot;language-text&quot;&gt;Free&lt;/code&gt; in Scalaz) enables one to build generalized
stateful computations, abstracting away the actual state, &lt;code class=&quot;language-text&quot;&gt;FreeBool&lt;/code&gt; allows us to build generalized predicates and manipulate them in a straightforward manner.&lt;/p&gt;
&lt;p&gt;More generally, if you find yourself re-implementing the same algebraic structure over and over, it might be worth asking yourself if a free version of
that algebraic structure exists. If so, you might save yourself a lot of work by using that.&lt;/p&gt;
&lt;h1 id=&quot;other-free-objects&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#other-free-objects&quot; aria-label=&quot;other free objects permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Other Free Objects&lt;/h1&gt;
&lt;p&gt;One important free object is the &lt;code class=&quot;language-text&quot;&gt;FreeMonoid&lt;/code&gt;. It turns out that the functor &lt;code class=&quot;language-text&quot;&gt;List[_]&lt;/code&gt; is actually a Free Monoid. This can be shown by defining &lt;code class=&quot;language-text&quot;&gt;nat&lt;/code&gt; for a list:&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;text&quot;&gt;&lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;def nat[A,B](f: A=&amp;gt;B)(implicit m: Monoid[B]): (List[A] =&amp;gt; B) =
  (l: List[A]) =&amp;gt; l.map(f).reduce((x,y) =&amp;gt; m.append(x,y))&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Essentially, the natural transformation consists of taking each element of the list, applying the function &lt;code class=&quot;language-text&quot;&gt;f&lt;/code&gt; to it, and then appending the elements.&lt;/p&gt;
&lt;p&gt;A somewhat more interesting free algebra is the &lt;code class=&quot;language-text&quot;&gt;FreeGroup&lt;/code&gt;. A &lt;code class=&quot;language-text&quot;&gt;Group&lt;/code&gt; is a &lt;code class=&quot;language-text&quot;&gt;Monoid&lt;/code&gt;, but with an additional operation - inversion. Inversion - denoted by &lt;code class=&quot;language-text&quot;&gt;~x&lt;/code&gt; - has the important property that for any &lt;code class=&quot;language-text&quot;&gt;x&lt;/code&gt;, &lt;code class=&quot;language-text&quot;&gt;(~x) |+| x = zero&lt;/code&gt; and &lt;code class=&quot;language-text&quot;&gt;x |+| (~x) = zero&lt;/code&gt;. I.e., appending two elements together can always be undone by appending a new element.&lt;/p&gt;
&lt;p&gt;For an example of a group, consider the integers - &lt;code class=&quot;language-text&quot;&gt;x |+| y = x + y&lt;/code&gt;, and &lt;code class=&quot;language-text&quot;&gt;~x = -x&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;The type &lt;code class=&quot;language-text&quot;&gt;FreeGroup[A] then consists essentially of a&lt;/code&gt;List[A]&lt;code class=&quot;language-text&quot;&gt;, with the caveat that&lt;/code&gt;a&lt;code class=&quot;language-text&quot;&gt;and&lt;/code&gt;~a` cannot occur adjacent to each other in the list.&lt;/p&gt;
&lt;p&gt;Similarly, a &lt;code class=&quot;language-text&quot;&gt;FreeMonad&lt;/code&gt; is a way of taking any &lt;code class=&quot;language-text&quot;&gt;Functor&lt;/code&gt; and getting an abstract monad out of it. This is implemented &lt;a href=&quot;https://github.com/scalaz/scalaz/blob/series/7.2.x/core/src/main/scala/scalaz/Free.scala&quot;&gt;in scalaz&lt;/a&gt;, so the naming is a little different. Given an object &lt;code class=&quot;language-text&quot;&gt;x: Free[S,A]&lt;/code&gt; (for &lt;code class=&quot;language-text&quot;&gt;S[_]&lt;/code&gt; a &lt;code class=&quot;language-text&quot;&gt;Functor&lt;/code&gt;), &lt;code class=&quot;language-text&quot;&gt;x&lt;/code&gt; has the method &lt;code class=&quot;language-text&quot;&gt;foldMap[M[_]](f: S ~&amp;gt; M)(implicit M: Monad[M]): M[A]&lt;/code&gt;. This method implements the natural transformation. In the language we are using here, we could define &lt;code class=&quot;language-text&quot;&gt;nat&lt;/code&gt; as follows:&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;text&quot;&gt;&lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;def nat[S,M,A](f: S[A] =&amp;gt; M[A])(implicit m: Monad[M]): (Free[S,A] =&amp;gt; M[A]) =
  (x:Free[S,A]) =&amp;gt; x.foldMap(f)(m)&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;As an illustrated example of how free monads work, &lt;a href=&quot;http://polygonalhell.blogspot.com/2014/12/scalaz-getting-to-grips-free-monad.html&quot;&gt;this article&lt;/a&gt; discusses how to represent a Forth-like DSL with the &lt;code class=&quot;language-text&quot;&gt;FreeMonad&lt;/code&gt; and then interpret it via a mapping from &lt;code class=&quot;language-text&quot;&gt;Free =&amp;gt; State&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://eed3si9n.com/learning-scalaz/Free+Monad.html&quot;&gt;Free Monad&lt;/a&gt;.
&lt;a href=&quot;http://underscore.io/blog/posts/2015/04/14/free-monads-are-simple.html&quot;&gt;Free Monads are Simple&lt;/a&gt;
&lt;a href=&quot;http://underscore.io/blog/posts/2015/04/23/deriving-the-free-monad.html&quot;&gt;Deriving the Free Monad&lt;/a&gt;&lt;/p&gt;</content:encoded><author>Chris Stucchio</author></item><item><title><![CDATA[SuperElasticsearch - More Python goodness in elasticsearch-py]]></title><description><![CDATA[We have been using Elasticsearch for storing analytics data.
This data stored in Elasticsearch is used in the Post Report Segmentation…]]></description><link>https://engineering.wingify.com//posts/superlelasticsearch/</link><guid isPermaLink="false">https://engineering.wingify.com//posts/superlelasticsearch/</guid><pubDate>Tue, 06 Oct 2015 18:30:00 GMT</pubDate><content:encoded>&lt;p&gt;We have been using &lt;a href=&quot;https://www.elastic.co/products/elasticsearch&quot;&gt;Elasticsearch&lt;/a&gt; for &lt;a href=&quot;http://engineering.wingify.com/posts/elasticsearch-for-analytics/&quot;&gt;storing analytics data&lt;/a&gt;.
This data stored in Elasticsearch is used in the Post Report Segmentation
feature in VWO. So the amount of data getting stored in Elasticsearch is tied
up to the number of campaigns currently being run by our customers. And often
we need to have custom tooling to work with this data and the requirements of
such tooling are also not common. This blog post is about how we solved some
issues by building some missing blocks in the
&lt;a href=&quot;https://github.com/elastic/elasticsearch-py&quot;&gt;Official Elasticsearch Python&lt;/a&gt; client while working on this project.&lt;/p&gt;
&lt;p&gt;The code base where implementation of this feature (Post Report Segmentation)
lies is all written in Python. When we were starting out, we had to decide
which client to use because there were many out there. Eliminating some was
really easy because they were tied to certain frameworks like &lt;a href=&quot;http://www.tornadoweb.org/en/stable/guide.html&quot;&gt;Tornado&lt;/a&gt;
and &lt;a href=&quot;https://twistedmatrix.com/trac/&quot;&gt;Twisted&lt;/a&gt;. And we were not sure which path to take initially so we
decided to keep things simple, avoid early optimization and not use any of
these framework heavily dependent on Non-Blocking IO. If we needed any of that
later, Gevent could be put to use (in fact that’s exactly what we did). Even
for the simpler way there were quite a few options. The deciding factors for
us were:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Maintenance commitment from the author&lt;/li&gt;
&lt;li&gt;Un-opinionated&lt;/li&gt;
&lt;li&gt;Simple design&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Considering all these factors, we decided to go with the Official Python
Client for Elasticsearch. And we didn&apos;t really come across any issues and
problems according to our simple requirements. It is fairly extensible and
comes with some standard batteries included with it. For everything else, you
can extend it - thanks to its simple design.&lt;/p&gt;
&lt;p&gt;It worked well for a while until we had to add some internal tooling where we
needed to work a lot with Elasticsearch&apos;s &lt;a href=&quot;https://www.elastic.co/guide/en/elasticsearch/reference/current/search-request-scroll.html&quot;&gt;Scroll API&lt;/a&gt; and
&lt;a href=&quot;https://www.elastic.co/guide/en/elasticsearch/reference/1.4/docs-bulk.html&quot;&gt;Bulk APIs&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&quot;bulk-api&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#bulk-api&quot; aria-label=&quot;bulk api permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Bulk API&lt;/h2&gt;
&lt;p&gt;Elasticsearch&apos;s Bulk API lets you club together multiple individual API calls
into one. This is used a lot in speeding up indexing and can be very useful if
you are doing a lot of write operations in Elasticsearch.&lt;/p&gt;
&lt;p&gt;The way you work with Bulk APIs is that you
construct a different kind of request body for bulk requests and use the client
for sending that request data. The HTTP API that Elasticsearch exposes for bulk
operations is semantically different than the API for individual operations.&lt;/p&gt;
&lt;p&gt;Consider this. If you were to index a new document, update an existing document
and delete another existing document in Elasticsearch, you can do it like so:&lt;/p&gt;
&lt;p&gt;{% highlight python %}
from elasticsearch import Elasticsearch&lt;/p&gt;
&lt;p&gt;client = Elasticsearch(hosts=[&apos;localhost:9200&apos;])
client.index(index=&apos;test&lt;em&gt;index&lt;/em&gt;1&apos;, doc&lt;em&gt;type=&apos;test&lt;/em&gt;doc&lt;em&gt;type&apos;,
body=dict(key1=&apos;val1&apos;))
client.update(index=&apos;test&lt;/em&gt;index&lt;em&gt;3&apos;, doc&lt;/em&gt;type=&apos;test&lt;em&gt;doc&lt;/em&gt;type&apos;,
id=456, body={
&apos;script&apos;: &apos;ctx.&lt;em&gt;source.count += count&apos;,
&apos;params&apos;: {
&apos;count&apos;: 1
}
})
client.delete(index=&apos;test&lt;/em&gt;index&lt;em&gt;2&apos;, doc&lt;/em&gt;type=&apos;test&lt;em&gt;doc&lt;/em&gt;type&apos;,
id=123)
{% endhighlight %}&lt;/p&gt;
&lt;p&gt;If you were to achieve the same thing using Bulk APIs, you would end up writing
code like this:&lt;/p&gt;
&lt;p&gt;{% highlight python %}
from elasticsearch import Elasticsearch&lt;/p&gt;
&lt;p&gt;client = Elasticsearch(hosts=[&apos;localhost:9200&apos;])&lt;/p&gt;
&lt;p&gt;bulk_body = &apos;&apos;&lt;/p&gt;
&lt;h1 id=&quot;index-operation-body&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#index-operation-body&quot; aria-label=&quot;index operation body permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;index operation body&lt;/h1&gt;
&lt;p&gt;bulk&lt;em&gt;body += &apos;{ &quot;index&quot; : { &quot;&lt;/em&gt;index&quot; : &quot;test&lt;em&gt;index&lt;/em&gt;1&quot;, &quot;&lt;em&gt;type&quot; : &quot;test&lt;/em&gt;doc&lt;em&gt;type&quot;, &quot;&lt;/em&gt;id&quot; : &quot;1&quot; } }\n&apos;
bulk_body += &apos;{ &quot;key1&quot;: &quot;val1&quot; }\n&apos;&lt;/p&gt;
&lt;h1 id=&quot;update-operation-body&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#update-operation-body&quot; aria-label=&quot;update operation body permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;update operation body&lt;/h1&gt;
&lt;p&gt;bulk&lt;em&gt;body += &apos;{ &quot;update&quot; : {&quot;&lt;/em&gt;id&quot; : &quot;456&quot;, &quot;&lt;em&gt;index&quot; : &quot;test&lt;/em&gt;index&lt;em&gt;3&quot;, &quot;&lt;/em&gt;type&quot; : &quot;test&lt;em&gt;doc&lt;/em&gt;type&quot;} }\n&apos;
bulk&lt;em&gt;body += &apos;{ &quot;script&quot;: &quot;ctx.&lt;/em&gt;source.count += count&quot;, &quot;params&quot;: { &quot;count&quot;: 1 } }\n&apos;&lt;/p&gt;
&lt;h1 id=&quot;delete-operation-body&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#delete-operation-body&quot; aria-label=&quot;delete operation body permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;delete operation body&lt;/h1&gt;
&lt;p&gt;bulk&lt;em&gt;body += &apos;{ &quot;delete&quot; : { &quot;&lt;/em&gt;index&quot; : &quot;test&lt;em&gt;index&lt;/em&gt;2&quot;, &quot;&lt;em&gt;type&quot; : &quot;test&lt;/em&gt;doc&lt;em&gt;type&quot;, &quot;&lt;/em&gt;id&quot; : &quot;123&quot; } }&apos;&lt;/p&gt;
&lt;h1 id=&quot;finally-make-the-request&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#finally-make-the-request&quot; aria-label=&quot;finally make the request permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;finally, make the request&lt;/h1&gt;
&lt;p&gt;client.bulk(body=bulk_body)
{% endhighlight %}&lt;/p&gt;
&lt;p&gt;There is a ton of difference in how bulk operations work on the code and API
level as compared to individual operations.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;The request body is considerably different in Bulk APIs as compared to their
individual APIs.&lt;/li&gt;
&lt;li&gt;The responsibility of properly serializing request body is now shifted to
the developer whereas this can be handled at the client level.&lt;/li&gt;
&lt;li&gt;Serialization format itself is a mixup of JSON and new-line character
separated string.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;If you are depending a lot on bulk operations, these problems will bite you when
you start using it at a lot of places in your code. The flexibility of
manipulating bulk request bodies at will lacks with the current support for Bulk
APIs.&lt;/p&gt;
&lt;p&gt;The official client as well does not really take care of this issue - not
blaming because the author&apos;s objective is to be as unopinionated as possible
and this also gave us the chance to do it our way instead of adopt an existing
implementation. We wanted to use Bulk API the same way we would use individual
APIs. And why shouldn&apos;t it be the same! They are essentially individual
operations put together and executed on a different end-point.&lt;/p&gt;
&lt;p&gt;Our solution for this was to provide a BulkClient which would allow you to
start a bulk operation, execute bulk operations in a way that you would execute
individual operations and then when you want to execute them together, it will
make the required request body and use the Elasticsearch client to make the
request. Exposing bulk operations in a way that semantically look the same as
individual operations required us to implement APIs similar to individual APIs
on a very high level in the &lt;code class=&quot;language-text&quot;&gt;BulkClient&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;This is how the &lt;code class=&quot;language-text&quot;&gt;BulkClient&lt;/code&gt; works:&lt;/p&gt;
&lt;p&gt;{% highlight python %}
from elasticsearch import Elasticsearch&lt;/p&gt;
&lt;p&gt;client = Elasticsearch(hosts=[&apos;localhost:9200&apos;])&lt;/p&gt;
&lt;p&gt;bulk = BulkClient(client)
bulk.index(index=&apos;test&lt;em&gt;index&lt;/em&gt;1&apos;, doc&lt;em&gt;type=&apos;test&lt;/em&gt;doc&lt;em&gt;type&apos;,
body=dict(key1=&apos;val1&apos;))
bulk.delete(index=&apos;test&lt;/em&gt;index&lt;em&gt;2&apos;, doc&lt;/em&gt;type=&apos;test&lt;em&gt;doc&lt;/em&gt;type&apos;,
id=123)
bulk.update(index=&apos;test&lt;em&gt;index&lt;/em&gt;3&apos;, doc&lt;em&gt;type=&apos;test&lt;/em&gt;doc&lt;em&gt;type&apos;,
id=456, body={
&apos;script&apos;: &apos;ctx.&lt;/em&gt;source.count += count&apos;,
&apos;params&apos;: {
&apos;count&apos;: 1
}
})
resp = bulk.execute()
{% endhighlight %}&lt;/p&gt;
&lt;h2 id=&quot;scroll-api&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#scroll-api&quot; aria-label=&quot;scroll api permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Scroll API&lt;/h2&gt;
&lt;p&gt;The next problem we faced was with Scroll API.&lt;/p&gt;
&lt;p&gt;According to the documentation:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;While a search request returns a single &quot;page&quot; of results, the scroll API can
be used to retrieve large numbers of results (or even all results) from a
single search request, in much the same way as you would use a cursor on a
traditional database.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Scroll API is helpful if you want to work with a large number of documents -
more like get them out of Elasticsearch.&lt;/p&gt;
&lt;p&gt;The problem with Scroll API is that it requires you to do a lot of book
keeping. You have to keep &lt;code class=&quot;language-text&quot;&gt;scroll_id&lt;/code&gt; after every iteration to get the next set
of documents. Depending upon your application, there is probably no work
around. However, our use-case was to get a large number of documents all
together. You can do that without Scroll API as well i.e. by using the size
parameter where you can tell Elasticsearch how many documents to return and you
can ask it to return all documents by using the Count Search API first and then
passing the size, but that will usually time out (or at least it did for us).
So what we did was scroll Elasticsearch in a loop and do the book keeping in
the code. And that was simple as well until we had to do it at multiple places&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;there was no uniform way to do that and a lot of code repetition was done as
well.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Our solution to this problem was to create a separate wrapper API only for this
purpose and use that everywhere in our project. So we wrote a simple function
that would do the book-keeping for us and it could be used like so:&lt;/p&gt;
&lt;p&gt;{% highlight python %}
def scrolled_search(es, scroll, *args, **kwargs):
&apos;&apos;&apos;
Iterator for Elasticsearch Scroll API.&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;text&quot;&gt;&lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;:param es: Elasticsearch client object
:param str scroll: scroll expiry time according to Elasticsearch Scroll API
                   docs

... Note:: this function accepts `*args` and ``**kwargs`` and passes them
           as they are to :meth:`Elasticsearch.search` method.
&amp;#39;&amp;#39;&amp;#39;

...&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;es = Elasticsearch(hosts=[&apos;localhost:9200&apos;])
for docs in scrolled_search(es, &apos;10m&apos;, index=&apos;tweets&apos;):
for doc in docs:
print doc
{% endhighlight %}&lt;/p&gt;
&lt;h3 id=&quot;iterator-based-scrolling-in-elasticsearch-py&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#iterator-based-scrolling-in-elasticsearch-py&quot; aria-label=&quot;iterator based scrolling in elasticsearch py permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Iterator based Scrolling in elasticsearch-py&lt;/h3&gt;
&lt;p&gt;We must highlight that the official client also added support for iterator based
scrolling later in the official client as a &lt;strong&gt;&lt;em&gt;helper&lt;/em&gt;&lt;/strong&gt;. We had already started
using our solution in our project and we find ours is slightly different than
theirs. For more details, &lt;a href=&quot;https://elasticsearch-py.readthedocs.org/en/master/helpers.html#elasticsearch.helpers.scan&quot;&gt;read the docs here&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&quot;superelasticsearch---elasticsearch-py-with-goodies&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#superelasticsearch---elasticsearch-py-with-goodies&quot; aria-label=&quot;superelasticsearch   elasticsearch py with goodies permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;SuperElasticsearch - elasticsearch-py with goodies!&lt;/h2&gt;
&lt;p&gt;Our solution to both the problems described earlier were based on the official
Elasticsearch client. After having solved these two problems, we figured that
instead of passing around the client object to our new API, it will be nicer if
we can use the new APIs in a way that it feels a part of the client itself. So
we went ahead and sub-classed the existing client class Elasticsearch to make
it easier to use the new APIs. You can use the sub-classed client
SuperElasticsearch like so:&lt;/p&gt;
&lt;p&gt;{% highlight python %}
from superelasticsearch import SuperElasticsearch&lt;/p&gt;
&lt;p&gt;client = SuperElasticsearch(hosts=[&apos;localhost:9200&apos;])&lt;/p&gt;
&lt;h1 id=&quot;example-of-using-scrolled-search&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#example-of-using-scrolled-search&quot; aria-label=&quot;example of using scrolled search permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Example of using Scrolled Search&lt;/h1&gt;
&lt;p&gt;for doc in client.itersearch(index=&apos;test&lt;em&gt;index&apos;, doc&lt;/em&gt;type&apos;tweets&apos;,
scroll=&apos;10m&apos;):
# do something with doc here
print doc&lt;/p&gt;
&lt;h1 id=&quot;example-of-using-bulk-operations&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#example-of-using-bulk-operations&quot; aria-label=&quot;example of using bulk operations permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Example of using Bulk Operations&lt;/h1&gt;
&lt;p&gt;bulk = client.bulk&lt;em&gt;operation()
bulk.index(index=&apos;test&lt;/em&gt;index&lt;em&gt;1&apos;, doc&lt;/em&gt;type=&apos;test&lt;em&gt;doc&lt;/em&gt;type&apos;,
body=dict(key1=&apos;val1&apos;))
bulk.delete(index=&apos;test&lt;em&gt;index&lt;/em&gt;2&apos;, doc&lt;em&gt;type=&apos;test&lt;/em&gt;doc&lt;em&gt;type&apos;,
id=123)
bulk.update(index=&apos;test&lt;/em&gt;index&lt;em&gt;3&apos;, doc&lt;/em&gt;type=&apos;test&lt;em&gt;doc&lt;/em&gt;type&apos;,
id=456, body={
&apos;script&apos;: &apos;ctx._source.count += count&apos;,
&apos;params&apos;: {
&apos;count&apos;: 1
}
})
resp = bulk.execute()
{% endhighlight %}&lt;/p&gt;
&lt;p&gt;This has also made it easy for us to do releases of SuperElasticsearch.
SuperElasticsearch does not depend on the official client in ways that it will
break compatibility with new releases of the official client, or if it will
then we can make the adjustments and come up with a new release. Basically it
has been written in a way to work with new versions of the official client with
minimum friction. If a new release of the official client comes out, then you
should be able to upgrade to the new Elasticsearch client without upgrading
SuperElasticsearch. This way we can try to keep developing SuperElasticsearch
at its own pace and release only when we have new features to release or when
it breaks compatibility. It also makes it easier for you to use the new APIs
because you get all of them with the client object itself.&lt;/p&gt;
&lt;p&gt;SuperElasticsearch is available on &lt;a href=&quot;https://github.com/wingify/superelasticsearch&quot;&gt;Github&lt;/a&gt;.&lt;/p&gt;</content:encoded><author>Vaidik Kapoor</author></item><item><title><![CDATA[Wingify at Meta Refresh 2015]]></title><description><![CDATA[After hosting the Meta Refresh Delhi Runup Event, it was time for us at Wingify to prep up for MetaRefresh. We were very excited to…]]></description><link>https://engineering.wingify.com//posts/meta-refresh-conference/</link><guid isPermaLink="false">https://engineering.wingify.com//posts/meta-refresh-conference/</guid><pubDate>Mon, 01 Jun 2015 18:30:00 GMT</pubDate><content:encoded>&lt;p&gt;After hosting the &lt;a href=&quot;/posts/post-meta-refresh-run-up/&quot;&gt;Meta Refresh Delhi Runup Event&lt;/a&gt;, it was time for us at &lt;a href=&quot;https://wingify.com/&quot;&gt;Wingify&lt;/a&gt; to prep up for &lt;a href=&quot;https://metarefresh.in/2015/&quot;&gt;MetaRefresh&lt;/a&gt;. We were very excited to contribute back to the community by not just sponsoring MetaRefresh, but also by adding content to the conference through a talk and a workshop, both focused towards Web Performance.&lt;/p&gt;
&lt;p&gt;We started off our journey from Delhi to Bangalore on 15th May, a day before the conference, and were welcomed by awesome weather at Bangalore. We took off early the next morning and grabbed our bags to march towards MLR Convention Centre, Bangalore to setup our company booth. The setup didn’t take much time, and we were ready to welcome fellow attendees to share more about Wingify through our stall.&lt;/p&gt;
&lt;p&gt;While speaking to the attendees, many expressed their interest to get interviewed at Wingify. Usually, we redirect the interested candidates to mail their resume to careers@wingify.com and follow the procedure, though this time, we gave it a unique touch, while using a Hack developed by &lt;a href=&quot;http://paraschopra.com/&quot;&gt;Paras&lt;/a&gt; (our Founder &amp;#x26; CEO), on a hack night. It was a mystery containing different hints that lead to the next clue, solved using browser’s developer console. It was great fun to watch attendees trying their best to crack the hints and unravel the mystery, though only few were able to solve it.&lt;/p&gt;
&lt;p&gt;Some moments captured during Meta Refresh 2015:&lt;/p&gt;
&lt;script&gt;Galleria.run(&apos;#fifth-elephant-gallery&apos;);&lt;/script&gt;
&lt;div id=&quot;fifth-elephant-gallery&quot; style=&quot;height: 600px;&quot;&gt;
    &lt;img src=&quot;/images/2015/03/conference/0.jpg&quot;&gt;
    &lt;img src=&quot;/images/2015/03/conference/1.jpg&quot;&gt;
    &lt;img src=&quot;/images/2015/03/conference/3.jpg&quot;&gt;
    &lt;img src=&quot;/images/2015/03/conference/4.jpg&quot;&gt;
    &lt;img src=&quot;/images/2015/03/conference/5.jpg&quot;&gt;
    &lt;img src=&quot;/images/2015/03/conference/6.jpg&quot;&gt;
    &lt;img src=&quot;/images/2015/03/conference/7.jpg&quot;&gt;
    &lt;img src=&quot;/images/2015/03/conference/8.jpg&quot;&gt;
    &lt;img src=&quot;/images/2015/03/conference/9.jpg&quot;&gt;
    &lt;img src=&quot;/images/2015/03/conference/10.jpg&quot;&gt;
    &lt;img src=&quot;/images/2015/03/conference/11.jpg&quot;&gt;
    &lt;img src=&quot;/images/2015/03/conference/12.jpg&quot;&gt;
    &lt;img src=&quot;/images/2015/03/conference/13.jpg&quot;&gt;
    &lt;img src=&quot;/images/2015/03/conference/14.jpg&quot;&gt;
    &lt;img src=&quot;/images/2015/03/conference/15.jpg&quot;&gt;
    &lt;img src=&quot;/images/2015/03/conference/16.jpg&quot;&gt;
&lt;/div&gt;
&lt;p&gt;A generic issue discussed in majority of the talks was regarding the maintenance of mobile web version of businesses after the successful creation of native apps on most popular mobile platforms. Several supporting /contradictory arguments were made with regard to this topic, though the most logical were in favor of supporting mobile web version as well. Several speakers shared their experience of the efforts involved in maintaining the web version or making the web experience as great as the one delivered through the native apps.&lt;/p&gt;
&lt;p&gt;Performance was another major topic discussed in several talks, involving not just the networking performance of web applications, but also the rendering performance as well. Another big discussion revolved around achieving jank free performance while performing animations in not just the web applications, but games as well. Several techniques and approaches were discussed in the talks that shared the experience of speakers on the quest to achieve 60fps in web applications.&lt;/p&gt;
&lt;p&gt;We had a great time being part of MetaRefresh 2015, and look forward to more such events, so stay tuned with our different social media channels (&lt;a href=&quot;https://twitter.com/wingify_engg&quot;&gt;Twitter&lt;/a&gt;, &lt;a href=&quot;https://www.facebook.com/Wingify&quot;&gt;Facebook&lt;/a&gt;) to meet us at another conference.&lt;/p&gt;</content:encoded><author>Apoorv Saxena</author></item><item><title><![CDATA[Meta Refresh 2015 Delhi Run-up Event hosted at Wingify]]></title><description><![CDATA[Giving back to the community has always been a priority at Wingify, be it through open sourcing internal projects or via organizing…]]></description><link>https://engineering.wingify.com//posts/post-meta-refresh-run-up/</link><guid isPermaLink="false">https://engineering.wingify.com//posts/post-meta-refresh-run-up/</guid><pubDate>Sun, 31 May 2015 18:30:00 GMT</pubDate><content:encoded>&lt;p&gt;Giving back to the community has always been a priority at &lt;a href=&quot;https://wingify.com/&quot;&gt;Wingify&lt;/a&gt;, be it through open sourcing internal projects or via organizing / sponsoring community events, the most recent being &lt;a href=&quot;https://metarefresh.talkfunnel.com/2015-delhi/&quot;&gt;Meta Refresh Delhi Run-up Event&lt;/a&gt; organized and hosted by Wingify on 21st March 2015. &lt;a href=&quot;https://in.linkedin.com/in/tonysimonodyssey&quot;&gt;Tony Simon&lt;/a&gt; from HasGeek was present from the MetaRefresh Team to help us host this event and help us make it more awesome.&lt;/p&gt;
&lt;div style=&quot;text-align:center; margin: 10px;&quot;&gt;
  &lt;img src=&quot;/images/2015/03/1.jpg&quot;&gt;
  &lt;div style=&quot;margin: 10px;&quot;&gt; Siddharth Deswal speaking on “How to Communicate Better with Marketing, Sales and Other &apos;Business&apos; Types”
  &lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;The event started on time (10:30am) with Tony introducing MetaRefresh, HasGeek and Wingify to the attendees. &lt;a href=&quot;https://twitter.com/siddharthdeswal&quot;&gt;Siddharth Deswal&lt;/a&gt;, Marketing Guru at Wingify kickstarted the event with his talk on &quot;How to Communicate Better with Marketing, Sales and Other &apos;Business&apos; Types&quot;, along with shots of humour. The talk started with the narration of his own experience of wearing different hats at Wingify with him helping different departments. He concluded on a great note saying that different departments shouldn&apos;t be isolated and must focus on sharing and imparting knowledge to people from other departments, especially the ones who are interdependent; the best example being that marketing team should also try to understand the technical aspects related to feature development.&lt;/p&gt;
&lt;div style=&quot;text-align:center; margin: 10px;&quot;&gt;
  &lt;img src=&quot;/images/2015/03/2.jpg&quot;&gt;
  &lt;div style=&quot;margin: 10px;&quot;&gt;Apoorv Saxena describing browser evolution in his talk on “Hacking to be Performant?”
  &lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;A pure technical talk related to web performance, started off with a poll to find out how many of the participants measure performance regularly and have it part of their deployment process, the feedback from the attendees depicted negligible measures taken to continuously monitor product performance. Next was the discussion of the reasons on why performance mattered, which was followed up with the discussion of various hacks that people employed to bring performance to their applications. The core part of this talk discussed the difference between using hacks versus following different approach during development, and how each of them paid in the long run.&lt;/p&gt;
&lt;p&gt;Slides: &lt;a href=&quot;http://www.slideshare.net/ApoorvSaxena/hacking-to-be-performant&quot;&gt;www.slideshare.net/ApoorvSaxena/hacking-to-be-performant&lt;/a&gt;&lt;/p&gt;
&lt;div style=&quot;text-align:center; margin: 10px;&quot;&gt;
  &lt;img src=&quot;/images/2015/03/3.jpg&quot;&gt;
  &lt;div style=&quot;margin: 10px;&quot;&gt;Vipul Taneja speaking on “Landing Pages Optimization”
  &lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;Next talk was presented by &lt;a href=&quot;http://vipultaneja.com/&quot;&gt;Vipul Taneja&lt;/a&gt; from AdSparkx media on &quot;Landing Pages Optimization - Things you can do to &apos;Test&apos;&quot;, with him briefing the attendees about his visit to Vegas and his observance about it during that time. His talk comprised of various techniques that his company uses to maximize ROI on different landing pages of businesses that hire them. The talk comprised of the discussion of both White Hat and Black Hat techniques as well for increasing landing page conversions.&lt;/p&gt;
&lt;div style=&quot;text-align:center; margin: 10px;&quot;&gt;
  &lt;img src=&quot;/images/2015/03/4.jpg&quot;&gt;
  &lt;div style=&quot;margin: 10px;&quot;&gt;Taruna Manchanda speaking on “How to optimize your webpages - lessons learnt from 101 VWO customers&apos; A/B tests”
  &lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;Next speaker was &lt;a href=&quot;https://in.linkedin.com/in/tarunamanchanda&quot;&gt;Taruna Manchanda&lt;/a&gt;, who shared her experiences and learnings while taking care of all paid acquisitions and customer case studies, as part of the Digital Marketing Team at Wingify. The attendees gathered great insights about how to best A/B Test a webpage along with the focus on what needs to be measured and how.&lt;/p&gt;
&lt;p&gt;Slides: &lt;a href=&quot;http://www.slideshare.net/tarunamanchanda23/7-cro-lessons-learned-after-going-through-100s-of-ab-testing-case-studies&quot;&gt;www.slideshare.net/tarunamanchanda23/7-cro-lessons-learned-after-going-through-100s-of-ab-testing-case-studies&lt;/a&gt;&lt;/p&gt;
&lt;div style=&quot;text-align:center; margin: 10px;&quot;&gt;
  &lt;img src=&quot;/images/2015/03/5.jpg&quot;&gt;
  &lt;div style=&quot;margin: 10px;&quot;&gt;Saptarshi Chatterjee speaking on “How to automatically generate Tests for your JavaScript file”
  &lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;Last on the speaker line up was &lt;a href=&quot;https://in.linkedin.com/pub/saptarshi-chatterjee/13/226/55a&quot;&gt;Saptarshi Chatterjee&lt;/a&gt;, Technical Lead at McKinsey, presented on &quot;How to automatically generate tests for your JavaScript file&quot;, while introducing his open source project to the world named YoSapy([yeo]man generator + [Sap]tarshi). He started off with the discussion of the importance of test cases and how he came across the idea to automate the test case creation process. He gave a hands-on demo of his project and took the rest of his time out to answer questions from the audience on how easy to have it part of their existing projects and also about how to extend / contribute to the same further.&lt;/p&gt;
&lt;p&gt;Slides: &lt;a href=&quot;http://www.slideshare.net/sapta9433/auto-generate-customized-test-suit-for-your-angularjs&quot;&gt;www.slideshare.net/sapta9433/auto-generate-customized-test-suit-for-your-angularjs&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;to-sum-up&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#to-sum-up&quot; aria-label=&quot;to sum up permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;To Sum up&lt;/h3&gt;
&lt;p&gt;It was a great experience hosting this event. Thanks to HasGeek for helping us with organizing the event. We hope that the conference will continue to happen in the years to come.&lt;/p&gt;
&lt;p&gt;If you were present at the run-up event and met us there, stay tuned with our different social media channels(&lt;a href=&quot;https://twitter.com/wingify_engg&quot;&gt;Twitter&lt;/a&gt;, &lt;a href=&quot;https://www.facebook.com/Wingify&quot;&gt;Facebook&lt;/a&gt;) to again be a part of another event going to be hosted by us. If you have any suggestions to make your experience better, go ahead and leave comments and we will get back to you. If you like what we do at Wingify and want to join the force, we will be more than happy to work with you. &lt;a href=&quot;https://wingify.com/careers&quot;&gt;As always, we are looking for talented people to work with us&lt;/a&gt;!&lt;/p&gt;</content:encoded><author>Apoorv Saxena</author></item><item><title><![CDATA[Q-Directives - A Faster Directive System For Angular.js]]></title><description><![CDATA[Performance matters, and an Angular.js developer would especially know it. Several watchers in a digest cycle can often be a bottleneck, and…]]></description><link>https://engineering.wingify.com//posts/q-directives/</link><guid isPermaLink="false">https://engineering.wingify.com//posts/q-directives/</guid><pubDate>Mon, 04 May 2015 18:30:00 GMT</pubDate><content:encoded>&lt;p&gt;Performance matters, and an Angular.js developer would especially know it. Several watchers in a digest cycle can often be a bottleneck, and &lt;a href=&quot;http://stackoverflow.com/questions/9682092/databinding-in-angularjs&quot;&gt;Angular doesn&apos;t recommend having more than 2,000 of them in your application&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;We are proud to announce &lt;a href=&quot;/q-directives/&quot;&gt;q-directives&lt;/a&gt;, a brand new and fast directive system for Angular.js, that takes the watcher optimization to a whole new level. It was a result of several &lt;a href=&quot;http://jsperf.com&quot;&gt;jsperf&lt;/a&gt; tests and Chrome Timeline runs.&lt;/p&gt;
&lt;div style=&quot;text-align: center;&quot;&gt;
	&lt;a href=&quot;https://github.com/wingify/q-directives&quot; style=&quot;padding: 20px 40px; font-size: 24px;&quot; class=&quot;btn btn-primary&quot;&gt;Q-Directives on Github&lt;/a&gt;
&lt;/div&gt;
&lt;h2 id=&quot;motivation&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#motivation&quot; aria-label=&quot;motivation permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Motivation&lt;/h2&gt;
&lt;p&gt;&lt;a href=&quot;https://app.vwo.com&quot;&gt;VWO&lt;/a&gt; is single-page application made entirely in Angular.js. When designing a detailed reporting system for campaigns in Angular.js, we faced troubles with rendering large amounts of data using Angular directives. In one of the report pages, the application had registered 15,000+ watchers, especially due to the way &lt;code class=&quot;language-text&quot;&gt;ng-repeat&lt;/code&gt; works.&lt;/p&gt;
&lt;p&gt;With q-directives and a revamped directive system, the number of watchers for a &lt;code class=&quot;language-text&quot;&gt;q-repeat&lt;/code&gt; directive (replacement for the &lt;code class=&quot;language-text&quot;&gt;ng-repeat&lt;/code&gt; directive) was brought down to just 1. So whenever the list changes, only one watcher gets fired.&lt;/p&gt;
&lt;h2 id=&quot;performance-benchmarks&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#performance-benchmarks&quot; aria-label=&quot;performance benchmarks permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Performance Benchmarks&lt;/h2&gt;
&lt;p&gt;Below stats are a rendition of the Chrome (version 37) timeline for the following use case:&lt;/p&gt;
&lt;p&gt;A table containing 216 rows repeated by q-repeat. Each row has about 10 columns containing about 50+ Angular directives each (Original). The optimized version has those Angular directives replaced with q-directives, and ng-repeat is replaced by q-repeat.&lt;/p&gt;
&lt;p&gt;Data is collected over 5 samples for both Original and Optimized situations.&lt;/p&gt;
&lt;h3 id=&quot;initial-table-render&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#initial-table-render&quot; aria-label=&quot;initial table render permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Initial table render&lt;/h3&gt;
&lt;h4 id=&quot;original&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#original&quot; aria-label=&quot;original permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Original&lt;/h4&gt;
&lt;p&gt;&lt;a href=&quot;/images/2015/05/1.png&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;/images/2015/05/1.png&quot; alt=&quot;graph&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h4 id=&quot;optimized&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#optimized&quot; aria-label=&quot;optimized permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Optimized&lt;/h4&gt;
&lt;p&gt;&lt;a href=&quot;/images/2015/05/2.png&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;/images/2015/05/2.png&quot; alt=&quot;graph&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h4 id=&quot;optimized--disabling-nganimate&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#optimized--disabling-nganimate&quot; aria-label=&quot;optimized  disabling nganimate permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Optimized (+ disabling ngAnimate)&lt;/h4&gt;
&lt;p&gt;&lt;a href=&quot;/images/2015/05/3.png&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;/images/2015/05/3.png&quot; alt=&quot;graph&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;sorting-the-table&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#sorting-the-table&quot; aria-label=&quot;sorting the table permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Sorting the table&lt;/h3&gt;
&lt;h4 id=&quot;original-1&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#original-1&quot; aria-label=&quot;original 1 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Original&lt;/h4&gt;
&lt;p&gt;&lt;a href=&quot;/images/2015/05/4.png&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;/images/2015/05/4.png&quot; alt=&quot;graph&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h4 id=&quot;optimized-1&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#optimized-1&quot; aria-label=&quot;optimized 1 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Optimized&lt;/h4&gt;
&lt;p&gt;&lt;a href=&quot;/images/2015/05/5.png&quot; target=&quot;_blank&quot;&gt;&lt;img src=&quot;/images/2015/05/5.png&quot; alt=&quot;graph&quot;&gt;&lt;/a&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&quot;documentation&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#documentation&quot; aria-label=&quot;documentation permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Documentation&lt;/h2&gt;
&lt;p&gt;Head over to &lt;a href=&quot;/q-directives/&quot;&gt;this link&lt;/a&gt; for a usage documentation and API reference.&lt;/p&gt;
&lt;h2 id=&quot;contributing&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#contributing&quot; aria-label=&quot;contributing permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Contributing&lt;/h2&gt;
&lt;p&gt;If you are interested in contributing to the project, we would love to hear from you. Just &lt;a href=&quot;https://github.com/wingify/q-directives/fork&quot;&gt;fork the repository&lt;/a&gt; and &lt;a href=&quot;https://github.com/wingify/q-directives/pulls&quot;&gt;submit a pull request&lt;/a&gt;.&lt;/p&gt;</content:encoded><author>Himanshu Kapoor</author></item><item><title><![CDATA[Elasticsearch for Analytics]]></title><description><![CDATA[Elasticsearch is essentially a distributed search-engine but there have
been more than one example of companies and projects using…]]></description><link>https://engineering.wingify.com//posts/elasticsearch-for-analytics/</link><guid isPermaLink="false">https://engineering.wingify.com//posts/elasticsearch-for-analytics/</guid><pubDate>Thu, 26 Mar 2015 18:30:00 GMT</pubDate><content:encoded>&lt;p&gt;&lt;a href=&quot;https://www.elastic.co/products/elasticsearch&quot;&gt;Elasticsearch&lt;/a&gt; is essentially a distributed search-engine but there have
been more than one example of companies and projects using Elasticsearch for
analytics instead of search. We, at &lt;a href=&quot;https://wingify.com&quot;&gt;Wingify&lt;/a&gt;, had similar requirements when we
decided to make our analytics more powerful to empower the customers of our
product, &lt;a href=&quot;https://vwo.com&quot;&gt;Visual Website Optimizer (VWO)&lt;/a&gt;. This blog post is about how we
used Elasticsearch to make &lt;a href=&quot;https://vwo.com&quot;&gt;VWO&apos;s&lt;/a&gt; user tracking a lot more powerful than it
earlier was.&lt;/p&gt;
&lt;h2 id=&quot;the-problem&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#the-problem&quot; aria-label=&quot;the problem permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;The Problem&lt;/h2&gt;
&lt;p&gt;For context, &lt;a href=&quot;https://vwo.com&quot;&gt;VWO&lt;/a&gt; is a tool that makes A/B testing of websites and mobile apps
so simple so that there is no engineering intervention involved to run new
A/B testing campaigns. Marketers and UI/UX designers do A/B testing to
improve online conversions and sales. &lt;a href=&quot;https://vwo.com&quot;&gt;VWO&lt;/a&gt; helps them with performing these A/B
tests with almost no engineering knowledge.&lt;/p&gt;
&lt;p&gt;Since &lt;a href=&quot;https://vwo.com&quot;&gt;VWO&lt;/a&gt; is at the center of optimizing websites and mobile apps, this makes
user tracking important for our product - our users make use of the data we
collect to understand how their users (different segments of users) behave and
make optimization decisions accordingly. For example, in an A/B test campaign
with three variations, variation 2 might be winning for all the goals but for all
the users coming from India, variation 3 might be winning for all or some of the
goals. It should be possible for our customers to generate custom segmented
reports and observe these different behaviours. &lt;/p&gt;
&lt;p&gt;So lets summarize how a campaign and its reporting should work:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;A &lt;a href=&quot;https://vwo.com&quot;&gt;VWO&lt;/a&gt; customer may create multiple campaigns. These campaigns have more
than one variations (variations are variants of web pages or iOS apps with UI
changes) that our customer wants to A/B test against real-traffic.&lt;/li&gt;
&lt;li&gt;Every campaign has more than one goals (goals are events that you want to track,
such as visiting a particular page, clicking a DOM element, submitting a
form, triggering a custom event with JavaScript etc.) which our customer wants
us to track.&lt;/li&gt;
&lt;li&gt;Our JavaScript library tracks how real visitors trigger goals (events) per
variation and sends this data to our data collection end-points.&lt;/li&gt;
&lt;li&gt;Our data backend stores every visit and conversion for all the defined goals per
variation. This is stored on a day-wise basis.&lt;/li&gt;
&lt;li&gt;When the campaign&apos;s report is accessed, the day-wise visitor and goal conversion data
is used in the statistics that go behind generating the report.&lt;/li&gt;
&lt;li&gt;Reports are generated considering behaviour of all the users who became a part
of the campaign. However, our customers should have the flexibility to segment
reports on the basis of parameters like location, browser, operating system,
time range, query parameters, traffic type, etc.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;in-the-prehistoric-times&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#in-the-prehistoric-times&quot; aria-label=&quot;in the prehistoric times permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;In the prehistoric times&lt;/h2&gt;
&lt;p&gt;We used to store only counters in our database (we use MySQL) i.e. for goal per
variation, we used to store number of visitors and conversions. Here is some
sample data:&lt;/p&gt;
&lt;pre&gt;
+------------+---------------+-----------+---------+-----------------+------+-------------+
| account_id | experiment_id | variation | goal_id | event_date      | hits | conversions |
+------------+---------------+-----------+---------+-----------------+------+-------------+
|          1 |           198 | 2         |       1 | 2011-02-19      |   15 |          12 |
|          1 |           198 | 1         |       1 | 2011-02-19      |   10 |           2 |
|          1 |           198 | 2         |       1 | 2011-02-20      |    6 |           2 |
|          1 |           198 | 1         |       1 | 2011-02-20      |   13 |           8 |
|          1 |           198 | 1         |       2 | 2011-02-21      |    7 |           0 |
|          1 |           198 | 1         |       1 | 2011-02-21      |    7 |           7 |
|          1 |           198 | 2         |       2 | 2011-02-21      |    8 |           0 |
|          1 |           198 | 2         |       1 | 2011-02-21      |    8 |           8 |
|          1 |           198 | 2         |       2 | 2011-02-22      |    6 |           0 |
|          1 |           198 | 1         |       1 | 2011-02-22      |    8 |           8 |
+------------+---------------+-----------+---------+-----------------+------+-------------+
&lt;/pre&gt;
&lt;p&gt;We also support revenue tracking for a goal. There is a different table for
revenue tracking, which looks something like this:&lt;/p&gt;
&lt;pre&gt;
+------------+---------------+-----------+---------+-----------------+---------+
| account_id | experiment_id | variation | goal_id | event_date      | revenue |
+------------+---------------+-----------+---------+-----------------+---------+
|          1 |           198 | 2         |       1 | 2011-02-19      |   32.43 |
|          1 |           198 | 1         |       1 | 2011-02-19      |   34.35 |
|          1 |           198 | 1         |       1 | 2011-02-19      |    6.13 |
|          1 |           198 | 2         |       1 | 2011-02-19      |   21.93 |
|          1 |           198 | 2         |       1 | 2011-02-20      |   83.36 |
|          1 |           198 | 2         |       1 | 2011-02-20      |   72.65 |
|          1 |           198 | 1         |       1 | 2011-02-20      |   56.14 |
|          1 |           198 | 1         |       1 | 2011-02-20      |   87.12 |
|          1 |           198 | 1         |       1 | 2011-02-21      |   78.25 |
|          1 |           198 | 1         |       1 | 2011-02-21      |   88.36 |
+------------+---------------+-----------+---------+-----------------+---------+
&lt;/pre&gt;
&lt;p&gt;So when our customers want to view the report, our application&apos;s backend
will run some queries to generate aggregated metrics like total visitors per
goal per variation, total conversions per goal per variation, etc. which could
be taken care of using MySQL&apos;s built-in functions and then do some
statistics at the application level to decide winning variations per goal.&lt;/p&gt;
&lt;p&gt;Notice that in our first table where we store hits (visitors) and conversions,
we store total counters of these two metrics per goal per variation per day. In
the revenue table, we store every individual revenue per goal per variation
with the exact date they occurred on. We need these separately as we need to
calculate sum of squares of every revenue generated which is used in the
statistics. I am not going to delve in the statistics side of things because
that is out of scope of this article.&lt;/p&gt;
&lt;p&gt;This worked pretty well for us for a while. It was all very simple and we had
to deal with aggregated data most of the times other than the case of revenue
where in we had to get every row of revenue for a particular campaign. At the
application level, it was essentially firing up a few MySQL queries that would
give us the aggregated and day-wise data and then use that data to statistically
find winning variations per goal.&lt;/p&gt;
&lt;p&gt;But this setup had a major drawback. Our customers were restricted to the view
of reports we would expose them to. It was not possible to drill down and
understand how different segments of users are behaving as the complete picture
may not say it all about some different segments. For example, in an A/B test
campaign with three variations, variation 2 might be winning for all the goals
but for all the users coming from India, variation 3 might be winning for all
or some of the goals. Finding this out was only possible by running another
campaign targeted to users from India on the basis of a hunch to understand if
the results would differ. And many times the results would not differ and our
customers will lose visitors from their visitor quota.&lt;/p&gt;
&lt;p&gt;Furthermore, our data storage had a few other problems like no fine grain
control over date and time range (it was all day-wise), we would store all
the counters according to our customers&apos; timezone (set at the time of account
creation) which means that changing timezone later would be possible but the
data collected earlier would be shown according to the previously selected
timezone. These were some major drawbacks to our way of storing visitor and
conversion data.&lt;/p&gt;
&lt;h2 id=&quot;new-age-reporting&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#new-age-reporting&quot; aria-label=&quot;new age reporting permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;New Age Reporting&lt;/h2&gt;
&lt;p&gt;We knew that our existing MySQL based setup was not perfect but more
importantly we realized that it does not help our customers. We wanted to make
things simpler for our customers so that:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;they could easily find important segments of users that behave
differently and run targeted campaigns for them if necessary.&lt;/li&gt;
&lt;li&gt;they have finer control over date and time so that they can see reports
at different steps like months, days, hours, minutes, etc.&lt;/li&gt;
&lt;li&gt;store everything in UTC so that we can take care of timezone changes at
application level.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Looking at our application requirements, we realized that we cannot work with
just aggregated data any more. We needed to start storing individual visitor&apos;s
data and their corresponding conversions to achieve flexibility and giving the
power of slicing and dicing of the data in our customers&apos; hands.&lt;/p&gt;
&lt;p&gt;We are also a pretty small team, which means that we wanted lesser headaches
about ops and maintaining the entire system in production. We wanted things to
be simple and as self-managed as possible.&lt;/p&gt;
&lt;p&gt;Our specific requirements were:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Allow storage of individual visitor data with a lot of properties for
performing segmentation.&lt;/li&gt;
&lt;li&gt;Allow filtering on all the stored fields for performing segmentation.&lt;/li&gt;
&lt;li&gt;Allow full text search on a few fields.&lt;/li&gt;
&lt;li&gt;Capable of storing events for lifetime of a customer account. This means that
we cannot delete visitor data as long as our customer is with us.&lt;/li&gt;
&lt;li&gt;Getting consumable data out should be fast, or lets say not terribly slow. We
are okay with an average of 2-3 seconds to start with.&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Easy ops:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Fault tolerant system. Failing nodes should not bring the service down.&lt;/li&gt;
&lt;li&gt;Scalable to handle our growing traffic, storage and other requirements.&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;We knew that Hadoop is the de-facto system in the Big Data universe but the
entire Hadoop system is so vast that getting started with it is not as easy.
There tons of different tools in the Hadoop ecosystem and just selecting the
right tools for your use-case may take a significant amount of time for
research, leaving the implementation time aside. Also, running a Hadoop cluster
is no piece of cake. There are so many moving parts that you are not completely
aware of as soon as you start. And performing upgrades of systems that have more
systems running with it will always be problematic. Further, tuning all these
systems to give an acceptable performance also seemed like a daunting task for a
team as small as our&apos;s with no prior experience with such systems.&lt;/p&gt;
&lt;p&gt;On top of the above problems that we got to know about Hadoop from our friends
working with it and from different blogs/websites, the task of implementing
the infrastructure requirements for Hadoop, building an implementation,
managing in production and then repeating the cycle for a team of 2 engineers
seemed like a daunting task.&lt;/p&gt;
&lt;p&gt;We knew that life would be much easy if we keep things simple and we started
looking at other options.&lt;/p&gt;
&lt;h2 id=&quot;elasticsearch-to-the-rescue&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#elasticsearch-to-the-rescue&quot; aria-label=&quot;elasticsearch to the rescue permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Elasticsearch to the rescue&lt;/h2&gt;
&lt;p&gt;Having worked with Elasticsearch before for a smaller project and remembering
that I had watched &lt;a href=&quot;https://vimeo.com/44716955&quot;&gt;Shay&apos;s talk&lt;/a&gt; from Berlin Buzzwords where he mentioned
that Elasticsearch was also being used for analytics, we started looking at
Elasticsearch to solve our problems.&lt;/p&gt;
&lt;p&gt;Elasticsearch supports filtering which we could use to filter visitors and
their conversions on the basis of a lot of properties that we wanted to
collect for every visitor. Filtering would be fast in Elasticsearch because you
can have indexes on every field if you want and since Elasticsearch
uses Lucene under-the-hood, we were confident about its indexing
capabilities. Elasticsearch supports full text search out-of-the-box.
This fits well with our basic application requirements. On top of this,
Elasticsearch supported Faceting (when we were evaluating, aggregations
frameworks was not there) which we could exploit for analytics. That means we
don&apos;t even have to get all the data out of Elasticsearch to our application
layer. Elasticsearch is capable of giving us an aggregated view of the data we
were storing.&lt;/p&gt;
&lt;p&gt;This was just amazing for us. We were able to build a PoC within two weeks. The
next couple of months were spent on understanding Elasticsearch better,
optimizing our implementation, testing Elasticsearch against production load
and tuning it for the same.&lt;/p&gt;
&lt;p&gt;In the meantime, Elasticsearch released 1.0.0 with aggregation framework and we
quickly moved from using &lt;a href=&quot;http://www.elastic.co/guide/en/elasticsearch/reference/current/search-facets.html&quot;&gt;Facets&lt;/a&gt; (see &lt;a href=&quot;https://en.wikipedia.org/wiki/Faceted_search&quot;&gt;Faceted Search&lt;/a&gt;) to Aggregations.
&lt;a href=&quot;http://www.elastic.co/guide/en/elasticsearch/reference/current/search-aggregations.html&quot;&gt;Aggregations&lt;/a&gt; proved to be very useful with revenue goals as we could just
ask Elasticsearch to give us sum of squares of individual revenues without
getting individual revenues out of Elasticsearch.&lt;/p&gt;
&lt;p&gt;As pointed out earlier, we need to track individual users. How we do this is
we create a document for a unique visitor per account per campaign in
Elasticsearch. This document stores user meta data, data for segmentation and
goal conversion tracking data. A typical visitor document looks like this:&lt;/p&gt;
&lt;p&gt;{% highlight json %}
{
&quot;&lt;em&gt;index&quot;: &quot;february-2015&quot;,
&quot;&lt;/em&gt;type&quot;: &quot;123&quot;,
&quot;&lt;em&gt;id&quot;: &quot;D2E0A04858025DFE23928BC1F70D2156&lt;/em&gt;123&lt;em&gt;313&quot;,
&quot;&lt;/em&gt;score&quot;: 1,
&quot;&lt;em&gt;source&quot;: {
&quot;query&lt;/em&gt;params&quot;: [
{
&quot;val&quot;: &quot;val1&quot;,
&quot;param&quot;: &quot;param1&quot;
},
{
&quot;val&quot;: &quot;val2&quot;,
&quot;param&quot;: &quot;param2&quot;
}
],
&quot;browser&lt;em&gt;string&quot;: &quot;Chrome 40.0.2214&quot;,
&quot;ip&quot;: &quot;8.8.8.0&quot;,
&quot;screen&lt;/em&gt;colors&quot;: &quot;24&quot;,
&quot;browser&lt;em&gt;version&quot;: &quot;40.0.2214&quot;,
&quot;session&quot;: 1,
&quot;device&lt;/em&gt;type&quot;: &quot;Desktop&quot;,
&quot;document&lt;em&gt;encoding&quot;: &quot;UTF-8&quot;,
&quot;variation&lt;/em&gt;goals&lt;em&gt;facet&lt;/em&gt;term&quot;: &quot;c1&lt;em&gt;g1&quot;,
&quot;ts&quot;: 1424348107,
&quot;hour&lt;/em&gt;of&lt;em&gt;day&quot;: 12,
&quot;os&lt;/em&gt;version&quot;: &quot;&quot;,
&quot;experiment&quot;: 313,
&quot;user&lt;em&gt;time&quot;: &quot;2015-02-19T12:15:07.271000&quot;,
&quot;direct&lt;/em&gt;traffic&quot;: false,
&quot;variation&quot;: &quot;1&quot;,
&quot;ua&quot;: &quot;Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/40.0.2214.111 Safari/537.36&quot;,
&quot;search&lt;em&gt;traffic&quot;: false,
&quot;social&lt;/em&gt;referrer&quot;: &quot;youtube&quot;,
&quot;returning&lt;em&gt;visitor&quot;: false,
&quot;hit&lt;/em&gt;time&quot;: &quot;2015-02-19T12:15:07&quot;,
&quot;user&lt;em&gt;language&quot;: &quot;en-us&quot;,
&quot;device&quot;: &quot;Other&quot;,
&quot;active&lt;/em&gt;goals&quot;: [
1
],
&quot;account&quot;: 196,
&quot;url&quot;: &quot;&lt;a href=&quot;https://vwo.com/lp/ab-testing-tool/?gclid=CPiZ7JT-7cMCFfDKtAodPUwAhQ%22&quot;&gt;https://vwo.com/lp/ab-testing-tool/?gclid=CPiZ7JT-7cMCFfDKtAodPUwAhQ&quot;&lt;/a&gt;,
&quot;country&quot;: &quot;United Kingdom&quot;,
&quot;day&lt;em&gt;of&lt;/em&gt;week&quot;: &quot;Thursday&quot;,
&quot;converted&lt;em&gt;goals&quot;: [
1
],
&quot;social&lt;/em&gt;traffic&quot;: true,
&quot;converted&lt;em&gt;goals&lt;/em&gt;info&quot;: [
{
&quot;id&quot;: 1,
&quot;facet&lt;em&gt;term&quot;: &quot;1&lt;/em&gt;1&quot;,
&quot;conversion_time&quot;: &quot;2015-02-19T12:15:54&quot;
}
],
&quot;referrer&quot;: &quot;&lt;a href=&quot;https://www.youtube.com/watch?v=EM-5IxL4HwQ%22&quot;&gt;https://www.youtube.com/watch?v=EM-5IxL4HwQ&quot;&lt;/a&gt;,
&quot;browser&quot;: &quot;Chrome&quot;,
&quot;os&quot;: &quot;Windows 7&quot;,
&quot;email_traffic&quot;: false
}
}
{% endhighlight %}&lt;/p&gt;
&lt;p&gt;&lt;code class=&quot;language-text&quot;&gt;_id&lt;/code&gt; is the UUID of the visitor. Most of the other fields have
information extracted out from the IP address, the User Agent, the URL and the
Referring URL.&lt;/p&gt;
&lt;p&gt;All the fields except a few are some fields with their types correctly set.
Indexes are maintained on all of them so that visitor documents can be filtered
according to the values in these fields.&lt;/p&gt;
&lt;p&gt;But there are a few fields that are interesting:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;query_params&lt;/li&gt;
&lt;li&gt;converted&lt;em&gt;goals&lt;/em&gt;info&lt;/li&gt;
&lt;li&gt;converted&lt;em&gt;goals&lt;/em&gt;info.facet_term&lt;/li&gt;
&lt;li&gt;variation&lt;em&gt;goals&lt;/em&gt;facet_term&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Let&apos;s look at each of them one-by-one.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;query_params&lt;/strong&gt; is an array of objects for storing query parameters and their
respective values. This is of type &lt;code class=&quot;language-text&quot;&gt;nested&lt;/code&gt; because our customers may want to
find all visitors and their conversions who visited pages with certain query
parameters. Consider a scenario where you want to find all visitor documents
with query parameter &lt;code class=&quot;language-text&quot;&gt;param1&lt;/code&gt; and &lt;code class=&quot;language-text&quot;&gt;val2&lt;/code&gt;. A simple &lt;code class=&quot;language-text&quot;&gt;bool must&lt;/code&gt; query with
term query would return the above document if &lt;code class=&quot;language-text&quot;&gt;query_params&lt;/code&gt; was not nested
because it would find one of the two &lt;code class=&quot;language-text&quot;&gt;query_params.param&lt;/code&gt; values to be equal
to &lt;code class=&quot;language-text&quot;&gt;param1&lt;/code&gt; and the one of the two &lt;code class=&quot;language-text&quot;&gt;query_params.val&lt;/code&gt; values to be equal to
&lt;code class=&quot;language-text&quot;&gt;val2&lt;/code&gt; but we know that &lt;code class=&quot;language-text&quot;&gt;param1&lt;/code&gt; never had &lt;code class=&quot;language-text&quot;&gt;val2&lt;/code&gt; as its value. This happens
because each object in &lt;code class=&quot;language-text&quot;&gt;query_params&lt;/code&gt; array is not considered as an individual
component of the document. &lt;code class=&quot;language-text&quot;&gt;nested&lt;/code&gt; types solve this problem. Read more about
&lt;code class=&quot;language-text&quot;&gt;nested&lt;/code&gt; documents and relations in Elasticsearch in this &lt;a href=&quot;https://www.elastic.co/blog/managing-relations-inside-elasticsearch/&quot;&gt;blog post&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;converted&lt;em&gt;goals&lt;/em&gt;info&lt;/strong&gt; is also an array of objects for storing information
of individual goal conversions. Here we store &lt;code class=&quot;language-text&quot;&gt;goal_id&lt;/code&gt; of the converted goal,
the time of conversion as a DateTime field and another field that we will
shortly discuss. This field is also of &lt;code class=&quot;language-text&quot;&gt;nested&lt;/code&gt; type for the same reason as
with &lt;code class=&quot;language-text&quot;&gt;query_params&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;converted&lt;em&gt;goals&lt;/em&gt;info.facet_term&lt;/strong&gt; and &lt;strong&gt;variation&lt;em&gt;goals&lt;/em&gt;facet_term&lt;/strong&gt; need to
be discussed together because their values are constructed in a similar way.
They in particular don&apos;t hold any new information. In the beginning of the
post, we saw how we used to store aggregated visitor and conversion count per
goal per variation per day. We still need that data out of Elasticsearch in a
similar way for our statistics. The day-wise problem gets solved by using
day-wise buckets in aggregations framework. The next problem is getting visitor
counts per variation per goal. In MySQL terms, we would want to run a GROUP BY
query on &lt;code class=&quot;language-text&quot;&gt;variation&lt;/code&gt; and &lt;code class=&quot;language-text&quot;&gt;goal_id&lt;/code&gt; column. In Elasticsearch, we can do
something similar by using &lt;a href=&quot;https://www.elastic.co/guide/en/elasticsearch/reference/current/search-aggregations-bucket-terms-aggregation.html#search-aggregations-bucket-terms-aggregation-script&quot;&gt;Terms Aggregation using Scripts&lt;/a&gt;. The problem
with this approach is that if you have a large number of documents, your
script will get evaluated on all of them and Elasticsearch is not really a
script execution engine (no matter which scripting plugin you use). What you
can do instead is push the result of a script at the time of indexing and then
simply run Terms Aggregation on it. We saw massive performance boost by doing
this performance hack.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Every document gets saved under the &lt;code class=&quot;language-text&quot;&gt;doc_type&lt;/code&gt; for the account that campaign
belongs to i.e. every account on &lt;a href=&quot;https://vwo.com&quot;&gt;VWO&lt;/a&gt; has a separate doc type.&lt;/p&gt;
&lt;h3 id=&quot;performance&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#performance&quot; aria-label=&quot;performance permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Performance&lt;/h3&gt;
&lt;p&gt;From performance point-of-view, Elasticsearch has very fast indexing and
querying capabilities. It is a distributed system - you can deploy a cluster
of nodes in production which stores indexes in a distributed fault-tolerant
way to give you performance benefits. Increase the number of replicas per shard
and you can scale reads and queries. This can be done after creating an index as
well. Elasticsearch does not allow changing of number of shards though. But
there is a sweet work around for that. Just create a new index with more shards
and use aliases, and you can now scale indexing as well.&lt;/p&gt;
&lt;h4 id=&quot;sharding&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#sharding&quot; aria-label=&quot;sharding permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Sharding&lt;/h4&gt;
&lt;p&gt;From our experience with working on large data sets which need to be queried on
an ad-hoc basis and have low latency requirements and from our learning from
&lt;a href=&quot;http://thedudeabides.com/&quot;&gt;Shay&apos;s&lt;/a&gt; talks (&lt;a href=&quot;https://www.youtube.com/watch?v=SIj5eJw8BUE&quot;&gt;1&lt;/a&gt;, &lt;a href=&quot;https://www.youtube.com/watch?v=fEsmydn747c&quot;&gt;2&lt;/a&gt;, &lt;a href=&quot;https://vimeo.com/44716955&quot;&gt;3&lt;/a&gt;), we understood that a data storage
system meant to store a lot
of data will scale for your reads and querying requirements well if you can
shard your data well according to the variable that determines the growth of
that data. For example, if you are using any database for storing machine logs,
you should be able to shard your data probably according to time because you
would want to query the most recent data and if you have to do it from the all
the data you ever collected, then your old data will only become a performance
bottleneck. So a possible sharding strategy could be sharding data according to
month-year.&lt;/p&gt;
&lt;p&gt;Our requirement was similar. We get visitor data which we could easily shard
on monthly basis. And since this data would keep on growing, we can just add new
indexes every month and place the new data in these indexes. However, which
index a visitor document goes to is not determined by the timestamp of the
visitor but it is determined by the date of creation of the campaign. Why? Our
customers view campaign reports i.e. when a campaign report is opened, we want
to get data for that campaign only. So it would make sense to have all the data
for a campaign reside only in one index because we wouldn&apos;t want to look into
multiple indexes for generating report of one campaign. If we decided to put
visitor documents in different indexes depending upon time of visit, we would
have faced the following problems:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;A campaign may run for more than a month, so visitor documents for a campaign
may be in more than one indexes and we would not have any way to know which
all indexes without keeping a track of it separately as to which indexes have
visitors for a given campaign. This would be painful.&lt;/li&gt;
&lt;li&gt;Since visitors also convert goals and we store conversion data in visitor
documents, it would be very difficult for us to find which index to find the
visitor document in so that we can add conversion tracking related data in the
document.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;These problems get solved when we restrict all visitor data for a given campaign
to go in one index only. So for &lt;code class=&quot;language-text&quot;&gt;account_id&lt;/code&gt; 123 that has two campaigns -
campaign 1 (created in January 2015) and campaign 2 (created in February 2015),
the visitor documents for both will be created in the indexes for January 2015
and February 2015 respectively.&lt;/p&gt;
&lt;p&gt;Another big advantage of this is that we can adjust the number of shards every
month. So if we are seeing a trend of more visitors getting tracked month after
month, in the next month we can create a new index with more shards than the
previous month&apos;s index.&lt;/p&gt;
&lt;h4 id=&quot;routing&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#routing&quot; aria-label=&quot;routing permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Routing&lt;/h4&gt;
&lt;p&gt;Since documents are stored in a particular shard in an index, Elasticsearch
needs to decide which shard to put the document in. Elasticsearch use a hashing
algorithm that is used for shard selection and Elasticsearch uses document&apos;s ID
by default for determining which shard that document goes into. This is called
routing a document into a shard. This may work fine in some cases. But the
drawback of this default routing strategy is felt when you have a large number
of shards and also when you have to serve a lot of queries. The drawback is that
Elasticsearch now needs to search every shard in an index for all the documents
matching a given query, wait for the results, aggregate them and then return the
final result. So for a given query, all shards get busy.&lt;/p&gt;
&lt;p&gt;This can be controlled by using a better routing strategy. In our case, we
generate reports of a campaign of a given account. It would be ideal that one
account does not limit report generation of another account. So instead of going
with the default routing strategy, we decided to route documents on the basis of
&lt;code class=&quot;language-text&quot;&gt;account_id&lt;/code&gt;. So now, when a campaign report is generated for a given account,
the query hits only a single shard, leaving all other shards available for
serving other queries and also freeing up CPU resources. After moving to this
routing strategy, we saw a significant reduction in CPU usage in our cluster.&lt;/p&gt;
&lt;h3 id=&quot;operations&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#operations&quot; aria-label=&quot;operations permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Operations&lt;/h3&gt;
&lt;p&gt;From operations and management point-of-view, Elasticsearch is fault tolerant -
indexes can be sharded and replicated and distributed in a cluster.
Elasticsearch distributes shards and their replicas on different nodes in the
cluster so that if a node fails, Elasticsearch promotes replicas to be the
primary shards and moves shards and replicas in the cluster to balance the
cluster. What is really amazing is that Elasticsearch also gives control over
placement of shards in a cluster so that it is easy for you to separate hot
data from cold (historic) data easily. We have not had the need to use this
feature yet, but it is good to know that we can do this if at all historic data
becomes a performance problem. Chances are that it will become a problem but
probably much later.&lt;/p&gt;
&lt;h2 id=&quot;drawbacks&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#drawbacks&quot; aria-label=&quot;drawbacks permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Drawbacks&lt;/h2&gt;
&lt;p&gt;Although Elasticsearch made it really easy for us to push out something like
this with so much ease (and remember we had no experience building something
like this before) and we love Elasticsearch for that, we did find a few things
with it that we think limits us.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;The facet term hack for avoiding running scripts works great but then it&apos;s also
limiting if you want to add new features in your application that rely on
different scripts that were not added at the time of indexing. This means that
you will have to re-index all your data if you want to support this new
feature or just provide this feature on new data.&lt;/li&gt;
&lt;li&gt;Lack of JOINS becomes limiting. As of now we push the conversion data in
visitor document. But it would have been ideal if we could independently index
conversions data in a separate index or doc type.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;We don&apos;t know how to solve these problems yet or if Elasticsearch team has any
plans for bringing something new that fixes these problems. It will open
Elasticsearch to a lot more possibilities if JOINS were possible. But we also
understand that it&apos;s not a simple problem to solve and Lucene and Elasticsearch
were not made keeping these use-cases in mind. Nevertheless, we hope to see
these improving in the future, especially because a lot of companies are using
Elasticsearch for analytics as well.&lt;/p&gt;
&lt;h2 id=&quot;conclusion&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#conclusion&quot; aria-label=&quot;conclusion permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Conclusion&lt;/h2&gt;
&lt;p&gt;Elasticsearch has been great for us and it proves that you don&apos;t always need
Hadoop for building analytics depending upon your requirements. The amazing
thing is that we feel Elasticsearch is amazing when it comes to scaling when
limited by resources - horizontal scaling is extremely simple. But it will work
for you or not depends entirely on your requirements.&lt;/p&gt;
&lt;p&gt;Elasticsearch already works with Hadoop, which is being further developed to
expand the use-cases it can support. This gives us a lot of confidence as we
will add more features to &lt;a href=&quot;https://vwo.com&quot;&gt;VWO&apos;s&lt;/a&gt; user tracking in the future and we know that we
will not be limited by our decision to use Elasticsearch.&lt;/p&gt;</content:encoded><author>Vaidik Kapoor</author></item><item><title><![CDATA[Meta Refresh 2015 Delhi Run-Up Event]]></title><description><![CDATA[Meta Refresh is an event organised by HasGeek that focuses on design, user experience and the front-end web. The current iteration of Meta…]]></description><link>https://engineering.wingify.com//posts/meta-refresh-run-up/</link><guid isPermaLink="false">https://engineering.wingify.com//posts/meta-refresh-run-up/</guid><pubDate>Sun, 08 Mar 2015 18:30:00 GMT</pubDate><content:encoded>&lt;p&gt;&lt;a href=&quot;https://metarefresh.in/2015/&quot;&gt;Meta Refresh&lt;/a&gt; is an event organised by HasGeek that focuses on design, user experience and the front-end web. The current iteration of Meta Refresh (2015) will be held in Bangalore on April 16-17.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://wingify.com&quot;&gt;Wingify&lt;/a&gt; will be hosting the &lt;a href=&quot;https://metarefresh.talkfunnel.com/2015-delhi/&quot;&gt;Delhi run-up event&lt;/a&gt; for Meta Refresh. The session will focus on how designers, engineers, optimization specialists and businesses can use data (statistics) to drive design opinion, thereby optimizing their websites and web applications. The premise being that the data speaks for itself at any point of time, and provides you with validations or rejections on your hypothesis. A data-centric approach towards web-design serves the same cause. The design / layout of any website is based on certain intuitions of the designer, and many a times there is a conflict of interests between the designer and the business team. How about tweaking the website to bridge the gap between design and business?&lt;/p&gt;
&lt;p&gt;If this is a topic that interests you we encourage you to join us for the run-up even at our office on &lt;strong&gt;March 21, starting at 10am&lt;/strong&gt;. It would be a great opportunity for you to:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;Speak&lt;/strong&gt; - If you have a similar topic in mind, or even a different one that goes with the theme of Meta Refresh 2015 (&lt;em&gt;web in your pockets&lt;/em&gt;), &lt;a href=&quot;https://metarefresh.talkfunnel.com/2015-delhi/&quot;&gt;propose a session at the talk funnel&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Learn&lt;/strong&gt; - &lt;a href=&quot;https://metarefresh.talkfunnel.com/2015-delhi/&quot;&gt;RSVP for the event&lt;/a&gt; at the same link and be present for the event to learn from the community.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Interact&lt;/strong&gt; - Mingle and chat with us and other attendees about design, usability, or anything at all.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;We look forward to seeing you at the event!&lt;/p&gt;
&lt;h4 id=&quot;event-time-march-21-10am---3pm&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#event-time-march-21-10am---3pm&quot; aria-label=&quot;event time march 21 10am   3pm permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Event Time: March 21, 10am - 3pm&lt;/h4&gt;
&lt;h3 id=&quot;location&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#location&quot; aria-label=&quot;location permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Location&lt;/h3&gt;
&lt;p&gt;Wingify Software Pvt. Ltd.&lt;br&gt;
14th Floor, KLJ Tower North,&lt;br&gt;
Netaji Subhash Place,&lt;br&gt;
Pitam Pura,&lt;br&gt;
Delhi - 110034&lt;/p&gt;
&lt;p&gt;Google Maps: &lt;a href=&quot;http://bit.ly/1AmaGYh&quot;&gt;http://bit.ly/1AmaGYh&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;get-in-touch&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#get-in-touch&quot; aria-label=&quot;get in touch permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Get In Touch&lt;/h3&gt;
&lt;p&gt;You can mail us at &lt;a href=&quot;mailto:engineering@wingify.com&quot;&gt;engineering@wingify.com&lt;/a&gt; or give us a call at &lt;a href=&quot;tel:+91-9654585776&quot;&gt;+91-9654585776&lt;/a&gt;.&lt;/p&gt;</content:encoded><author>Himanshu Kapoor</author></item><item><title><![CDATA[Open source at Wingify]]></title><description><![CDATA[At Wingify, we believe in open source and actively seek opportunities to give back to the community. We make use of a lot of open source…]]></description><link>https://engineering.wingify.com//posts/opensource-at-wingify/</link><guid isPermaLink="false">https://engineering.wingify.com//posts/opensource-at-wingify/</guid><pubDate>Thu, 19 Feb 2015 18:30:00 GMT</pubDate><content:encoded>&lt;p&gt;At Wingify, we believe in open source and actively seek opportunities to give back to the community. We make use of a lot of open source technologies and libraries in our day to day work. And to share back the love, we have open sourced &lt;a href=&quot;https://github.com/wingify/please.js&quot;&gt;quite&lt;/a&gt; a few &lt;a href=&quot;https://github.com/wingify/lua-resty-rabbitmqstomp&quot;&gt;things&lt;/a&gt; over the past.&lt;/p&gt;
&lt;p&gt;Pravendra Singh, a hacker, recently went on to actually collect and visualize data about &lt;a href=&quot;http://pravj.github.io/blog/open-source-presence-infographic/&quot;&gt;open source contributions of some of the leading startups in India&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Something really cool that came into picture from his infographics was that Wingify was leading other organizations in terms of the most starred repository - our &lt;a href=&quot;https://github.com/wingify/please.js&quot;&gt;&lt;strong&gt;Please.js&lt;/strong&gt;&lt;/a&gt;. Moreover, we have three more of our repositories that made it to the top 10!&lt;/p&gt;
&lt;div style=&quot;text-align:center; margin: 5px&quot;&gt;
	&lt;img src=&quot;/images/2015/02/github-stars.png&quot;&gt;
&lt;/div&gt;
&lt;p&gt;There are more such cool infographics in his blog post - &lt;a href=&quot;http://pravj.github.io/blog/open-source-presence-infographic/&quot;&gt;Open Source Presence Infographic of Indian Startups&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;We keep doing a lot of cool open source stuff and if you are into such things, don&apos;t forget to &lt;a href=&quot;https://github.com/wingify&quot;&gt;follow us on github&lt;/a&gt; and on &lt;a href=&quot;https://twitter.com/wingify_engg&quot;&gt;twitter&lt;/a&gt;.&lt;/p&gt;</content:encoded><author>Kushagra Gour</author></item><item><title><![CDATA[Testing AngularJS Apps End to End Using Protractor]]></title><description><![CDATA[We, at Wingify, have been writing e2e test cases for our A/B testing app for the past 5 months using protractor. Writing e2e scripts is easy…]]></description><link>https://engineering.wingify.com//posts/angularapp-e2e-testing-with-protractor/</link><guid isPermaLink="false">https://engineering.wingify.com//posts/angularapp-e2e-testing-with-protractor/</guid><pubDate>Thu, 12 Feb 2015 18:30:00 GMT</pubDate><content:encoded>&lt;p&gt;We, at &lt;a href=&quot;https://wingify.com&quot;&gt;Wingify&lt;/a&gt;, have been writing e2e test cases for our &lt;a href=&quot;https://app.vwo.com&quot;&gt;A/B testing app&lt;/a&gt; for the past 5 months using protractor. Writing e2e scripts is easy but making them work 90% of the times on all browsers makes you go nuts! Sometimes, I feel that the browser is moody, but of course, we have to deal with all its moods and make sure that test cases are robust.&lt;/p&gt;
&lt;p&gt;Getting your e2e tests to run smoothly everytime comes with experience. And, learning from my experiences testing our app, here is a post describing them.&lt;/p&gt;
&lt;h2 id=&quot;an-overview-of-protractor&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#an-overview-of-protractor&quot; aria-label=&quot;an overview of protractor permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;An Overview of Protractor&lt;/h2&gt;
&lt;p&gt;&lt;a href=&quot;https://angular.github.io/protractor/#/&quot;&gt;Protractor&lt;/a&gt; is a specially designed wrapper around &lt;a href=&quot;https://code.google.com/p/selenium/wiki/WebDriverJs&quot;&gt;WebDriverJs&lt;/a&gt; to automate e2e testing for angular apps. The following figure gives an overview of the architecture involved for automation and testing :&lt;/p&gt;
&lt;div style=&quot;text-align:center; margin: 5px&quot;&gt;
	&lt;img src=&quot;/images/2015/02/2.png&quot;&gt;
&lt;/div&gt;
&lt;h2 id=&quot;setting-up-protractor-and-add-ons&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#setting-up-protractor-and-add-ons&quot; aria-label=&quot;setting up protractor and add ons permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Setting up protractor and add-ons&lt;/h2&gt;
&lt;p&gt;For basic setup, go through the &lt;a href=&quot;http://angular.github.io/protractor/#/tutorial&quot;&gt;Protractor official documentation&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Once the setup is done, you are ready to write and run e2e scripts. Next you need a report of failed and passed test cases along with screenshots. &lt;code class=&quot;language-text&quot;&gt;protractor-html-screenshot-reporter&lt;/code&gt; , an npm module, provides you with an Html report of the test cases along with screenshots. Set it up as mentioned in &lt;a href=&quot;https://www.npmjs.com/package/protractor-html-screenshot-reporter&quot;&gt;npm documentation&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Test Scenario and Test Data follow a one-to-many relationship, so we can&apos;t hardcode the test data within the code. For example: The same login test script can be used to test the login of different types of users. To make life easy, it is a better option to make use of .xls files (Microsoft Excel, OpenOffice etc) and import data dynamically into the script, while execution.
&lt;code class=&quot;language-text&quot;&gt;xlsjs&lt;/code&gt; npm module lets us fetch the data from an .xls file and use it in script. Follow the below mentioned steps to set it up :&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Install xlsjs
{% highlight bash %}
npm install xlsjs
{% endhighlight %}&lt;/li&gt;
&lt;li&gt;Define a JavaScript utility function as :&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;{% highlight javascript %}
cellFromXLS = function (cellId) {
&apos;use strict&apos;;
//Define sheetNumber
var sheetNumber = 0;
//Define file Path name
var fileNamePath = path.join(dirPath, &apos;data1.xls&apos;);
//NodeJs read file
var XLS;
if (typeof require !== &apos;undefined&apos;) {
XLS = require(&apos;xlsjs&apos;);
}
//Working with workbook
var workbook = XLS.readFile(fileNamePath);
var sheetNamelist = workbook.SheetNames;
var value = workbook.Sheets[sheetNamelist[sheetNumber]][cellid].v;
return value;
};
{% endhighlight %}&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Call function as:&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;{% highlight javascript %}
var email = cellFromXLS(&apos;B1&apos;);
{% endhighlight %}&lt;/p&gt;
&lt;h3 id=&quot;test-both-angularjs-and-non-angularjs-based-pages&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#test-both-angularjs-and-non-angularjs-based-pages&quot; aria-label=&quot;test both angularjs and non angularjs based pages permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Test both Angular.js and non-Angular.js based pages&lt;/h3&gt;
&lt;p&gt;Our use case involves using Protractor for an Angular.js based app, but it works pretty well for non-Angular.js pages as well.
Simply set the following flag to true and access the webdriver instance using browser.driver instead of element as shown below :&lt;/p&gt;
&lt;p&gt;{% highlight javascript %}
beforeEach(function() {
browser.ignoreSynchronization = true;
});
{% endhighlight %}&lt;/p&gt;
&lt;p&gt;For instance, the following code for an angular page:&lt;/p&gt;
&lt;p&gt;{% highlight javascript %} element(by.css(&apos;#elementid&apos;).click(); {% endhighlight %}&lt;/p&gt;
&lt;p&gt;would be written as shown below for non angular page:
{% highlight javascript %}
browser.driver.findElement(by.css(&apos;#elementid&apos;)).click();
{% endhighlight %}&lt;/p&gt;
&lt;p&gt;Sounds cool? Now let&apos;s dig deeper in the protractor world.&lt;/p&gt;
&lt;h2 id=&quot;a-piece-of-protractor-code&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#a-piece-of-protractor-code&quot; aria-label=&quot;a piece of protractor code permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;A piece of protractor code&lt;/h2&gt;
&lt;p&gt;Before we start with the advance functions, let&apos;s have a look at a simple login test case, where we verify that the user should be redirected to a welcome page after login.&lt;/p&gt;
&lt;p&gt;{% highlight javascript %}
//Jasmine describe statement : Describes the test
describe(&apos;APP LOGIN::&apos;, function() {
//before Each :  This piece of code executes before all it statement
beforeEach(function() {
var ptor = protractor.getInstance();
ptor.get(&apos;&lt;a href=&quot;https://app.vwo.com&amp;#x27;&quot;&gt;https://app.vwo.com&apos;&lt;/a&gt;);
});
//Jasmine it statement : What &quot;it&quot; will do.
it(&apos;Verify that the user is logged in&apos;, function() {
//Delete all cookies
browser.driver.manage().deleteAllCookies();
//Enter UserName
element.all(by.model(&apos;username&apos;)).get(0).sendKeys(&apos;abc@wingify.com&apos;);
//Enter Password
element(by.model(&apos;password&apos;)).sendKeys(&apos;test&apos;);
//Click Submit button
element(by.css(&apos;.login-form button[type=&quot;submit&quot;]&apos;)).click();
//Wait for the current URL to change to welcome
browser.driver.wait(function() {
return browser.driver.getCurrentUrl().then(function(url) {
return (/welcome/).test(url);
});
});
//Jasmine expect statement : compare actual and expected value
expect(browser.getCurrentUrl()).toEqual(&apos;&lt;a href=&quot;https://app.vwo.com/#/welcome&amp;#x27;&quot;&gt;https://app.vwo.com/#/welcome&apos;&lt;/a&gt;);
});
/* Write other it blocks */
});
{% endhighlight %}&lt;/p&gt;
&lt;h4 id=&quot;lets-study-the-code&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#lets-study-the-code&quot; aria-label=&quot;lets study the code permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Let&apos;s study the code:&lt;/h4&gt;
&lt;p&gt;&lt;code class=&quot;language-text&quot;&gt;Describe&lt;/code&gt; , &lt;code class=&quot;language-text&quot;&gt;it&lt;/code&gt; and &lt;code class=&quot;language-text&quot;&gt;expect&lt;/code&gt;  are jasmine framework methods to write the tests easily. Read more about them &lt;a href=&quot;http://jasmine.github.io/1.3/introduction.html&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;&lt;code class=&quot;language-text&quot;&gt;beforeEach&lt;/code&gt;  function in the code above executes before all &lt;code class=&quot;language-text&quot;&gt;it&lt;/code&gt;  blocks, however, you might not want to execute the code in &lt;code class=&quot;language-text&quot;&gt;beforeEach&lt;/code&gt;  for all &lt;code class=&quot;language-text&quot;&gt;it&lt;/code&gt;  blocks.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Tip:&lt;/strong&gt; To control its execution you can use a flag variable as shown in the code below.&lt;/p&gt;
&lt;p&gt;{% highlight javascript %}
//use pageLoadedStatus flag
var pageLoadedStatus = false;
beforeEach(function() {
if (!pageLoadedStatus) {
//browser.ignoreSynchronization = true;
var ptor = protractor.getInstance();
ptor.get(&apos;&lt;a href=&quot;https://app.vwo.com&amp;#x27;&quot;&gt;https://app.vwo.com&apos;&lt;/a&gt;);
pageLoadedStatus = true;
}
});
{% endhighlight %}&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Multiple ways to select elements:&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;{% highlight javascript %}
by.css		 by.model	   by.repeater		by.id		by.binding	    by.xpath
{% endhighlight %}&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Interacting with the DOM:&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code class=&quot;language-text&quot;&gt;element&lt;/code&gt;: returns a single element&lt;/li&gt;
&lt;li&gt;&lt;code class=&quot;language-text&quot;&gt;element.all&lt;/code&gt;: returns a collection of elements. Use &lt;code class=&quot;language-text&quot;&gt;get(index)&lt;/code&gt;, &lt;code class=&quot;language-text&quot;&gt;first()&lt;/code&gt;, and &lt;code class=&quot;language-text&quot;&gt;last()&lt;/code&gt; functions to get a single element out of the collection.&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;other-awesome-functions&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#other-awesome-functions&quot; aria-label=&quot;other awesome functions permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Other awesome functions&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code class=&quot;language-text&quot;&gt;filter&lt;/code&gt; : Similar to &lt;code class=&quot;language-text&quot;&gt;get(index)&lt;/code&gt;, &lt;code class=&quot;language-text&quot;&gt;first()&lt;/code&gt; and &lt;code class=&quot;language-text&quot;&gt;last()&lt;/code&gt; functions, &lt;code class=&quot;language-text&quot;&gt;filter&lt;/code&gt; takes a collection of elements and returns a single element. The only difference is that the element can be selected based on the specified condition. This is useful when there is a dynamic/long list of elements having same selector path and you need to get an element using its text or any unique property.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Let&apos;s take this example of clicking on a date from a calendar.&lt;/p&gt;
&lt;div style=&quot;text-align:center; margin: 5px&quot;&gt;
        &lt;img src=&quot;/images/2015/02/3.png&quot;&gt;
&lt;/div&gt;
&lt;p&gt;All the dates elements have the same selector. Therefore, define a filter function as :&lt;/p&gt;
&lt;p&gt;{% highlight javascript %}
clickDateByText = function (tileText) {
&apos;use strict&apos;;
//Select all date elements and apply filter function
element.all(by.css(&apos;.dates_selector&apos;)).filter(function (elem) {
//Return the element or elements
return elem.getText().then(function (text) {
//Match the text
return text === tileText;
});
}).then(function (filteredElements) {
//filteredElements is the list of filtered elements
filteredElements[0].click();
});
};
{% endhighlight %}&lt;/p&gt;
&lt;p&gt;Now to click on date 17, simply call the function as :&lt;/p&gt;
&lt;p&gt;{% highlight javascript %}
clickDateByText(17);
{% endhighlight %}&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code class=&quot;language-text&quot;&gt;each&lt;/code&gt; : Use it when the same action has to be taken for all elements having common selector. For example : clearing the list of input fields in a Signup form.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;{% highlight javascript %}
element.all(by.css(&apos;form&gt;input&apos;)).each(function (inputs) {
inputs.clear();
});
{% endhighlight %}&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code class=&quot;language-text&quot;&gt;map&lt;/code&gt; : Mapping a collection of elements in an array without use of protractor &lt;code class=&quot;language-text&quot;&gt;map&lt;/code&gt;  function involves a lot of code to deal with all the proimises one by one. On the contrary, using map function for the same purpose is a piece of cake. Map function iterates through each element found with the locator and then resolves all the promises to return a promise with an array of values. For example : To get the text of all elements (with ng-repeat = &apos;option in Options&apos;) in an array, write the code as :&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;{% highlight javascript %}
var optionTexts = element.all(by.repeater(&apos;option in Options&apos;)).map(function (Options) {
return Options.getText();
});
optionTexts.then(function (array) {
console.log(array);
});
{% endhighlight %}&lt;/p&gt;
&lt;h3 id=&quot;tips-and-tricks&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#tips-and-tricks&quot; aria-label=&quot;tips and tricks permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Tips and tricks&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;Manage Browser logs: There will always be certain scenarios which would not be covered in e2e scripts. Therefore, it is a smart move to always check browser console errors for any unexpected issue in the app. The following piece of code allows you to keep a check at browser logs and fails the test cases if there are any errors :&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;{% highlight javascript %}
afterEach(function () {
browser.manage().logs().get(&apos;browser&apos;).then(function (browserLog) {
expect(browserLog.length).toEqual(0);
if (browserLog.length) {
console.error(&apos;log: &apos; + JSON.stringify(browserLog));
}
});
});
{% endhighlight %}&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Combine element statements to move around the dom : Xpath provides an excellent way to move up and down the dom.
{% highlight javascript %}
// use &apos;..&apos; to select parent of an element
element(by.css(&apos;input&apos;)).element(by.xpath(&apos;..&apos;)); // Resulting element will be the parent of input
// use &apos;following-sibling&apos; to select the sibling
element(by.css(&apos;input&apos;)).element(by.xpath(&apos;following-sibling::span&apos;))
{% endhighlight %}&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Common UseCase: Error messages are often displayed as a sibling to input or submit types. Therefore, instead of using a different selector path for error message, xpath can be used to pick the sibling.&lt;/p&gt;
&lt;div style=&quot;text-align:center; margin: 5px&quot;&gt;
        &lt;img src=&quot;/images/2015/02/4.png&quot;&gt;
&lt;/div&gt;
&lt;p&gt;To verify the error message &quot;invalid URL&quot;, simply write the assertion as:
{% highlight javascript %}
element(by.model(&apos;Url&apos;)).sendkeys(&apos;&lt;a href=&quot;http://&amp;#x27;&quot;&gt;http://&apos;&lt;/a&gt;).then(function (ele){
expect(ele.element(by.xpath(&apos;following-sibling::span&apos;)).getText()).toEqual(&apos;Invalid URL&apos;);
});
{% endhighlight %}&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Never use protractor element statements inside loop: The simple reason is that the webdriverJS (protractor) API is asynchronous. Element statements returns a promise and that promise is in unresolved state while the code below the statements continues to execute. This leads to unpredictable results. Hence, it is advisable to use recursive functions instead of loops.&lt;/li&gt;
&lt;li&gt;Debug the tests using elementexplorer.js: elementexplorer.js lets you test the page interactively. You will find this JS file in node_modules/protractor/bin directory. Start the selenium server and run command:&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;{% highlight bash %}
node elementexplorer &lt;a href=&quot;https://app.vwo.com&quot;&gt;https://app.vwo.com&lt;/a&gt;
{% endhighlight %}&lt;/p&gt;
&lt;p&gt;Browser will load the URL and you will see &gt; prompt. Use browser, element and protractor variables to interact with page.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; Make sure that the developer tools are closed while running commands in elementexplorer.js prompt, otherwise you will face an unexpected error as &lt;strong&gt;&quot;TypeError: Cannot read property &apos;click&apos; of null&quot;&lt;/strong&gt;&lt;/p&gt;
&lt;h3 id=&quot;maintaining-and-reusing-test-cases&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#maintaining-and-reusing-test-cases&quot; aria-label=&quot;maintaining and reusing test cases permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Maintaining and reusing test cases&lt;/h3&gt;
&lt;p&gt;Let&apos;s admit it, e2e test cases are not easy to be maintained and updated. You have to organize the tests in a way that they can be edited easily. Let&apos;s have a glance at Page-Objects, common-files and tests approach that we follow at Wingify, using nodeJS &lt;code class=&quot;language-text&quot;&gt;require&lt;/code&gt;  and &lt;code class=&quot;language-text&quot;&gt;exports&lt;/code&gt;  functions.&lt;/p&gt;
&lt;div style=&quot;text-align:center; margin: 5px&quot;&gt;
        &lt;img src=&quot;/images/2015/02/5.png&quot;&gt;
&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;page-objects&lt;/strong&gt;: Page-objects is a commonly used practice across the industry while writing e2e tests. It enables you to write clean tests by listing all the information about the elements in a page-object file. This means that you only need to change the page object file, in case of any change in template of app.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Our Application has more than 50 screens. Therefore we list all the page-objects i.e. dom elements of each screen in a seprate JS file. Take a look at login screen page-object file :&lt;/p&gt;
&lt;p&gt;{% highlight javascript %}
/&lt;em&gt;File Name : loginPage.js&lt;/em&gt;/
var loginPage = function () {
&apos;use strict&apos;;
this.userName = element(by.model(&apos;username&apos;)).get(0);
this.password = element(by.model(&apos;password&apos;));
this.submitButton = element(by.css(&apos;.login-form button[type=&quot;submit&quot;]&apos;));
//&lt;strong&gt;&lt;strong&gt;&lt;strong&gt;&lt;strong&gt;****&lt;/strong&gt;&lt;/strong&gt;&lt;/strong&gt;&lt;/strong&gt; functions &lt;strong&gt;&lt;strong&gt;&lt;strong&gt;&lt;strong&gt;***&lt;/strong&gt;&lt;/strong&gt;&lt;/strong&gt;&lt;/strong&gt;
this.setUserName = function (username) {
this.userName.clear();
this.userName.sendKeys(username);
};
this.clickSubmit = function () {
this.submitButton.click();
};
};
module.exports = {
log: new loginPage()
};
{% endhighlight %}&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;common-module&lt;/strong&gt;: The idea is to divide the entire e2e scenario in small reusable functions in a way that these functions can be used in other e2e scenarios as well. These reusable functions can be grouped in different files for maintainblity. The login and logout module is used in many e2e scenarios. So, both can be clubbed in a file as shown below :&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;{% highlight javascript %}
/&lt;em&gt;File Name : LoginOut.js&lt;/em&gt;/
var loginPage = require(&apos;loginPage.js&apos;),
userName = &apos;test@wingify.com&apos;,
pass = &apos;12345&apos;;&lt;/p&gt;
&lt;p&gt;exports.login = function () {
//delete all cookies
browser.driver.manage().deleteAllCookies();
loginPage.log.setUserName(userName);
loginPage.log.setPassword(pass);
loginPage.log.clickSubmit();
browser.driver.wait(function () {
return browser.driver.getCurrentUrl().then(function (url) {
return (/welcome/).test(url);
});
});
browser.manage().getCookie(&apos;login&apos;).then(function (cookie) {
expect(cookie.value).toBeDefined();
expect(cookie.value).not.toEqual(&apos;&apos;);
});
};&lt;/p&gt;
&lt;p&gt;exports.logout = function () {
//logout script
};
{% endhighlight %}&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;e2e-scripts&lt;/strong&gt;: Include all the common-module functions to write the complete e2e-script as shown below :&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;{% highlight javascript %}
/&lt;em&gt;File Name : CreateNewUserE2E.js&lt;/em&gt;/
var loginMod = require(&apos;loginOut.js&apos;);
describe(&apos;Create a new user in the account and verify&apos;, function () {
/&lt;em&gt;Load Test Url */
&apos;use strict&apos;;
it(&apos;Verify login&apos;, function () {
loginMod.login();
});
/&lt;/em&gt; Rest of the modules to verify user creation */
it(&apos;Verify logout&apos;, function () {
loginMod.logout();
});
};
{% endhighlight %}&lt;/p&gt;
&lt;h2 id=&quot;to-conclude&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#to-conclude&quot; aria-label=&quot;to conclude permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;To conclude&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Take an extra step to write test cases in a way that they can be edited and maintained with ease.&lt;/li&gt;
&lt;li&gt;Create a modular approach keeping scalability in mind.&lt;/li&gt;
&lt;li&gt;Dive deep in the protractor world, use protractor&apos;s awesome functions and have fun!!&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Hope this post was a good enough reference to help you write end-to-end tests in a better way. If things might be unclear, or you have any questions, let us know via comments.&lt;/p&gt;
&lt;h2 id=&quot;links--references&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#links--references&quot; aria-label=&quot;links  references permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Links &amp;#x26; references&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Protractor API: &lt;a href=&quot;http://angular.github.io/protractor/#/api&quot;&gt;http://angular.github.io/protractor/#/api&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;npm xlsjs: &lt;a href=&quot;https://www.npmjs.com/package/xlsjs&quot;&gt;https://www.npmjs.com/package/xlsjs&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;ng-learn: &lt;a href=&quot;http://ng-learn.org/2014/02/Protractor_Testing_With_Angular_And_Non_Angular_Sites/&quot;&gt;http://ng-learn.org/2014/02/Protractor&lt;em&gt;Testing&lt;/em&gt;With&lt;em&gt;Angular&lt;/em&gt;And&lt;em&gt;Non&lt;/em&gt;Angular_Sites/&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content:encoded><author>Kamal Sahni</author></item><item><title><![CDATA[Overcoming the Challenges of Performance Testing Single-page Apps]]></title><description><![CDATA[To begin with, lets talk about two of the most important things are that come to mind when we talk about performance testing. The Metrics to…]]></description><link>https://engineering.wingify.com//posts/performance-testing/</link><guid isPermaLink="false">https://engineering.wingify.com//posts/performance-testing/</guid><pubDate>Wed, 28 Jan 2015 18:30:00 GMT</pubDate><content:encoded>&lt;p&gt;To begin with, lets talk about two of the most important things are that come to mind when we talk about performance testing.&lt;/p&gt;
&lt;h3 id=&quot;the-metrics-to-measure&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#the-metrics-to-measure&quot; aria-label=&quot;the metrics to measure permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;The Metrics to Measure&lt;/h3&gt;
&lt;p&gt;First lets consider the metrics to measure. Few important metrics that should always be considered are:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Response time which could include Javascript file load time, Image load time, CSS file load time, Content Download time etc.&lt;/li&gt;
&lt;li&gt;Number of HTTP Request and HTTP Response status.&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&quot;dependencies&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#dependencies&quot; aria-label=&quot;dependencies permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Dependencies&lt;/h3&gt;
&lt;p&gt;Coming to second part i.e. Dependencies. Now this could be broadly classified by 2 groups: &lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Client-side testing&lt;/li&gt;
&lt;li&gt;Server-side (API level) testing&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Most of the people focus on testing their servers and APIs. But server-side testing is not enough these days, as its hard to find applications which do not use Javascript/Ajax today.&lt;/p&gt;
&lt;p&gt;In single-page apps, the performance equally depends on both the client-side and the server-side. &lt;/p&gt;
&lt;p&gt;Since single-page apps are Javascript/Ajax enabled, measuring performance from server/API level is not enough. Even poorly written javascript code can majorly affect the performance of the app.&lt;/p&gt;
&lt;p&gt;Client-side performance testing can also be done using popular tools like &lt;a href=&quot;https://developers.google.com/speed/pagespeed/&quot;&gt;Google Page Speed&lt;/a&gt; or &lt;a href=&quot;http://webpagetest.org&quot;&gt;Webpagetest.org&lt;/a&gt;. But they cannot test different modules of the application separately. They&apos;d just test the URLs you enter. To test different sections of your application, we can follow a different approach. &lt;/p&gt;
&lt;p&gt;In this blog post, I’m going to show you how to use the most popular open-source tool (JMeter)[http://jmeter.apache.org/] to performance test AJAX-enabled websites.&lt;/p&gt;
&lt;h2 id=&quot;challenges&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#challenges&quot; aria-label=&quot;challenges permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Challenges&lt;/h2&gt;
&lt;p&gt;A well-known limitation of JMeter is that it isn&apos;t a browser i.e its inability to execute Javascript. This and that when JMeter makes a request to a page, AJAX calls are not automatically executed. JMeter does store Javascript requests when recorded but this is done as individual sampler.&lt;/p&gt;
&lt;p&gt;Now to overcome this challenge we have a few options we can work on:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Use WebDriver Sampler to measure the response time in a real time browser. Combining this with JMeter load test, we can measure the real time user experience when we apply severe load.&lt;/li&gt;
&lt;li&gt;Use JUnit Sampler to create selenium scripts using tools like Eclipse. Using this approach one can export JAR fie to JMeter and run the test in browser.&lt;/li&gt;
&lt;li&gt;Simulate an Ajax request using JSR223 sampler.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Lets talk in further detail about these methods to performance test.&lt;/p&gt;
&lt;h3 id=&quot;using-jmeter-webdriver-sampler-with-selenium&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#using-jmeter-webdriver-sampler-with-selenium&quot; aria-label=&quot;using jmeter webdriver sampler with selenium permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Using JMeter WebDriver Sampler with Selenium&lt;/h3&gt;
&lt;p&gt;Web Driver Sampler automates the execution and collection of Performance metrics on the Browser (client-side). You can download this plugin from the link shared below.&lt;/p&gt;
&lt;p&gt;A large part of performance testing, up to this point, has been on the server side of things. However, with the advancement of technology, HTML5, JS and CSS improvements, more and more logic and behaviour have been pushed down to the client. This adds to the overall perceived performance of website/webapp, but this metric is not available in JMeter.&lt;/p&gt;
&lt;p&gt;Simply add the following to your test plan:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Firefox Driver Config&lt;/li&gt;
&lt;li&gt;Web Driver Sampler&lt;/li&gt;
&lt;li&gt;View Results Table&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;img src=&quot;/images/2015/01/01.png&quot;&gt;&lt;/p&gt;
&lt;p&gt;Now add the following JavaScript code in WebDriver Sampler&lt;/p&gt;
&lt;p&gt;{% highlight js %}
WDS.sampleResult.sampleStart();
WDS.browser.get(&apos;&lt;a href=&quot;http://wingify.com&amp;#x27;&quot;&gt;http://wingify.com&apos;&lt;/a&gt;);
WDS.sampleResult.sampleEnd();
{% endhighlight %}&lt;/p&gt;
&lt;p&gt;The only problem with approach is that the automation capability is limited. But again that depends on the application. &lt;/p&gt;
&lt;p&gt;For more info, visit &lt;a href=&quot;http://jmeter-plugins.org/wiki/WebDriverTutorial/&quot;&gt;http://jmeter-plugins.org/wiki/WebDriverTutorial/&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;using-junit-sampler&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#using-junit-sampler&quot; aria-label=&quot;using junit sampler permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Using JUnit Sampler&lt;/h3&gt;
&lt;p&gt;Using this method all we need to do is create a JAR file using Eclipse and export it to JMeter. &lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Creating JAR using Eclipse&lt;/strong&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Create a JUnit Test case in your project.&lt;/li&gt;
&lt;li&gt;Write the following selenium code to open your homepage.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;{% highlight java %}
package wing;&lt;/p&gt;
&lt;p&gt;import static org.junit.Assert.*;&lt;/p&gt;
&lt;p&gt;import java.net.MalformedURLException;
import java.net.URL;&lt;/p&gt;
&lt;p&gt;import org.junit.Test;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.remote.DesiredCapabilities;
import org.openqa.selenium.remote.RemoteWebDriver;&lt;/p&gt;
&lt;p&gt;public class home {&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;text&quot;&gt;&lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;@Test
public void test() throws MalformedURLException {
	WebDriver driver2 = new RemoteWebDriver(new URL(&amp;quot;http://22.222.122.22:4444/wd/hub&amp;quot;),DesiredCapabilities.firefox());
	 driver2.get(&amp;quot;http://wingify.com&amp;quot;);
	 System.out.println(driver2.getTitle());
	 driver2.quit();
	
}&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;}
{% endhighlight %}&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: In the above code we are using RemoteWebDriver to open the browser on a different machine since we will integrate our test with jenkins.&lt;/p&gt;
&lt;p&gt;Once this is done you just need to export the JUnit test case to JMeter. Just copy the JAR file into JMeter/extras/JUnit folder and restart JMeter. &lt;/p&gt;
&lt;p&gt;After this just click on &quot;Search for JUnit 4 annotations&quot; in case you created a JUnit 4 test case and you ll find the JAR file with class name in drop down.&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;/images/2015/01/02.png&quot;&gt;&lt;/p&gt;
&lt;h3 id=&quot;simulate-an-ajax-request-using-jsr223-sampler&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#simulate-an-ajax-request-using-jsr223-sampler&quot; aria-label=&quot;simulate an ajax request using jsr223 sampler permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Simulate an Ajax request using JSR223 sampler&lt;/h3&gt;
&lt;p&gt;Normally this method is not recommended. But if above solutions don&apos;t work well with your system you can go for Beanshell and use any scripting language like groovy to create Ajax request.&lt;/p&gt;
&lt;h2 id=&quot;conclusion&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#conclusion&quot; aria-label=&quot;conclusion permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Conclusion&lt;/h2&gt;
&lt;p&gt;Below are some points to keep in mind while creating performance test plan:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Create custom scripts for different use cases and create a threshold for various metrics.&lt;/li&gt;
&lt;li&gt;You can also use headless browser testing using &lt;strong&gt;HtmlUnitDriver&lt;/strong&gt; or &lt;strong&gt;Xvfb&lt;/strong&gt; depending on your system. This approach would work well if you need to combine these with your load test.&lt;/li&gt;
&lt;li&gt;You can integrate your tests with &lt;strong&gt;Jenkins&lt;/strong&gt; using the &lt;strong&gt;performance plugin&lt;/strong&gt;. It really helps with reporting and you can simply run it with each new build. In fact, that is also how we do it here at Wingify.&lt;/li&gt;
&lt;li&gt;Client-Side performance testing is always done using 1 or 2 threads. But if you need to use it with your load test then you can simulate as many threads as you wish to.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;There&apos;s a lot more exciting stuff you can do to handle Javascript/Ajax enabled applications. This is just a brief summary of the work we do here at &lt;a href=&quot;http://wingify.com&quot;&gt;Wingify&lt;/a&gt;. Hope this helps you get started. There can be many ways you can achieve amazing results. If you have any questions/comments, or create something awesome, we will be more than happy to hear from you. &lt;/p&gt;</content:encoded><author>Rahul Jain</author></item><item><title><![CDATA[Wingify at CSSConf / JSConf Asia 2014]]></title><description><![CDATA[Back in November, I, along with some colleagues from Wingify went to Singapore to attend CSSConf and JSConf Asia. A part of DevFest Asia, it…]]></description><link>https://engineering.wingify.com//posts/jsconf-asia-2014/</link><guid isPermaLink="false">https://engineering.wingify.com//posts/jsconf-asia-2014/</guid><pubDate>Fri, 16 Jan 2015 18:30:00 GMT</pubDate><content:encoded>&lt;style&gt;
h2 a, h3 a { text-decoration: underline; }
&lt;/style&gt;
&lt;p&gt;Back in November, I, along with some colleagues from &lt;a href=&quot;http://wingify.com&quot;&gt;Wingify&lt;/a&gt; went to Singapore to attend &lt;a href=&quot;http://2014.cssconf.asia/&quot;&gt;CSSConf&lt;/a&gt; and &lt;a href=&quot;http://2014.jsconf.asia/&quot;&gt;JSConf&lt;/a&gt; Asia. A part of &lt;a href=&quot;http://2014.devfest.asia/&quot;&gt;DevFest Asia&lt;/a&gt;, it is the best way to meet and connect with front-end designers and developers in South East Asia. It was the first time CSSConf was happening in Asia, and our own &lt;a href=&quot;http://twitter.com/chinchang457&quot;&gt;Kushagra Gour&lt;/a&gt; had the opportunity to speak at it. He talked about &lt;em&gt;&lt;a href=&quot;https://speakerdeck.com/chinchang/10-commandments-for-efficient-css-architecture-cssconf-dot-asia-14&quot;&gt;10 Commandments for efficient CSS architecture&lt;/a&gt;&lt;/em&gt;. The conference venue was Hotel Amara Sanctuary, on the island of Sentosa, Singapore.&lt;/p&gt;
&lt;h2 id=&quot;cssconf&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#cssconf&quot; aria-label=&quot;cssconf permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;CSSConf&lt;/h2&gt;
&lt;p&gt;The day began with boarding the MRT and the Sentosa Express to get to the venue, and meanwhile being mesmerized by the marvelous Singaporean skyscrapers. A sip of coffee at the &lt;a href=&quot;http://www.jimmymonkey.com/&quot;&gt;Jimmy Monkey Cafe&lt;/a&gt; made our eyes open wide, and began &lt;a href=&quot;https://twitter.com/serrynaimo&quot;&gt;Thomas&lt;/a&gt;&apos; introduction to Asia&apos;s first CSSConf. It is commendable for a small bunch of people to organize conferences for the community at such large scale, working part time.&lt;/p&gt;
&lt;p&gt;The quality of the talks at the conference was way above our expectations for a first-time event. The speakers and the topics they spoke about were pretty interesting. Below are the talks that I found really intriguing, and I recommend everyone to go through the videos and slides for them:&lt;/p&gt;
&lt;h3 id=&quot;no-more-tools-by-karolina-szczur&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#no-more-tools-by-karolina-szczur&quot; aria-label=&quot;no more tools by karolina szczur permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=_UKrEfkiNZE&quot;&gt;No More Tools&lt;/a&gt; by &lt;a href=&quot;https://twitter.com/fox&quot;&gt;Karolina Szczur&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Her talk made an interesting point: with all the rapid development happening in the front-end realm, we&apos;re making use of tools more than ever, which when mixed with biases and preferences, do more harm than good. She explained what puts apart good tools from the bad ones, and the telltale signs of a tool doing more harm than good.&lt;/p&gt;
&lt;h3 id=&quot;build-scalable-automated-css-both-you-and-your-back-end-coders-can-love-by-christian-lilley&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#build-scalable-automated-css-both-you-and-your-back-end-coders-can-love-by-christian-lilley&quot; aria-label=&quot;build scalable automated css both you and your back end coders can love by christian lilley permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=Tk_0qYEFtAY&quot;&gt;Build Scalable, Automated CSS Both You and Your ’Back-End’ Coders Can Love&lt;/a&gt; by &lt;a href=&quot;https://twitter.com/xmlilley&quot;&gt;Christian Lilley&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;As front-end developers, we have been conditioned to live and breathe CSS, both good and bad parts, beckoning a love-hate relationship with it. But it is rather cumbersome for someone new coming in ease into the concept of cascading style sheets, and that coupled with misused practices makes people think of CSS as some sort of dark magic. Christian&apos;s talk separates the good parts from the bad ones, and points the listeners into a direction everyone can take to make CSS a language everyone can love.&lt;/p&gt;
&lt;h3 id=&quot;inside-the-airbnb-brand-evolution-by-fiona-tey&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#inside-the-airbnb-brand-evolution-by-fiona-tey&quot; aria-label=&quot;inside the airbnb brand evolution by fiona tey permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;a href=&quot;https://speakerdeck.com/fionatay/inside-the-airbnb-brand-evolution&quot;&gt;Inside the AirBnB brand evolution&lt;/a&gt; by &lt;a href=&quot;https://twitter.com/MsFionaTay&quot;&gt;Fiona Tey&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;AirBnB&apos;s product is so simple, yet efficient to use, especially their mobile app that it makes you feel a sense of satisfaction competing products or even luxurious hotels couldn&apos;t match. Booking for a stay with the locals via AirBnB has always been exciting inspiring for me. And today it was a fortunate time to see the face behind such great product design.&lt;/p&gt;
&lt;h3 id=&quot;what-are-we-doing-anyway-by-ben-schwartz&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#what-are-we-doing-anyway-by-ben-schwartz&quot; aria-label=&quot;what are we doing anyway by ben schwartz permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;a href=&quot;#&quot;&gt;What are we doing, anyway?&lt;/a&gt; by &lt;a href=&quot;https://twitter.com/benschwarz&quot;&gt;Ben Schwartz&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;If you&apos;re like me, perhaps you ask yourself this question as the sun rises each morning. Recall a time when that wasn&apos;t really the question? Ben&apos;s talk took the listeners on a nostalgic ride to the years of hacking around and creating things from the past. Recall spending nights working on creating things as the first ray of sun hits the window, the pride of showing around your project in your peer group, hours upon hours of creative brainstorming to build something exciting? Ben extracts out the secret sauce for that feeling of happiness that stems from creating something and how to hold on to it to keep treading that road.&lt;/p&gt;
&lt;img src=&quot;/images/2015/01/ben.jpg&quot;&gt;
&lt;p&gt;&lt;em&gt;Words of Wisdom&lt;/em&gt;&lt;/p&gt;
&lt;h2 id=&quot;jsconf&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#jsconf&quot; aria-label=&quot;jsconf permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;JSConf&lt;/h2&gt;
&lt;p&gt;JSConf had multitude of interesting talks. Below are the ones I found rather inspiring to attend:&lt;/p&gt;
&lt;h3 id=&quot;bad-form-by-chris-lienert&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#bad-form-by-chris-lienert&quot; aria-label=&quot;bad form by chris lienert permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=G7PBTOdAqrU&quot;&gt;Bad Form&lt;/a&gt; by &lt;a href=&quot;https://twitter.com/cliener&quot;&gt;Chris Lienert&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;&quot;Your password must contain an uppercase and a lowercase letter, a number, a dinosaur&apos;s name and your grandmother&apos;s maiden name&quot;: do sights of such messages make you cringe? Or perhaps you recall the frustration of filling out a large form and you missed out checking those terms and conditions and the page complains by asking you to fill everything over again? If you do, this talk will let you share your frustrations and learn about what you as a developer can do to create better forms for a better web.&lt;/p&gt;
&lt;h3 id=&quot;fun-with-javascript-and-sensors-by-jan-jongboom&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#fun-with-javascript-and-sensors-by-jan-jongboom&quot; aria-label=&quot;fun with javascript and sensors by jan jongboom permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=u6twcglDFNc&quot;&gt;Fun with JavaScript and Sensors&lt;/a&gt; by &lt;a href=&quot;https://twitter.com/janjongboom&quot;&gt;Jan Jongboom&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;In terms of what JavaScript can do on the browser and on mobile devices, Firefox OS is the best example of openness and accessibility to the lower language features. Jan, in his talk introduces several sensor APIs, primarily for Firefox OS that you could make use of to create your next big innovative app or game. Perhaps you could even mix and match the data from various sensors, or perhaps from a set of devices put together to create something awesome!&lt;/p&gt;
&lt;h3 id=&quot;translation-workflow-and-formatting-complex-translations-by-tingan-ho&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#translation-workflow-and-formatting-complex-translations-by-tingan-ho&quot; aria-label=&quot;translation workflow and formatting complex translations by tingan ho permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=4ZXagCR9urg&quot;&gt;Translation Workflow and Formatting Complex Translations&lt;/a&gt; by &lt;a href=&quot;https://twitter.com/tingan87&quot;&gt;Tingan Ho&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Tingan goes about solving the problem of i18n and l10n by introducing concepts like CLDR, pluralization, and ICU’s message formats. He also publishes his localization module &lt;a href=&quot;http://l10ns.org&quot;&gt;l10ns&lt;/a&gt; at the end of his talk. If you&apos;re planning to translate your app into multiple languages, especially east-Asian ones, this is a must see talk.&lt;/p&gt;
&lt;h3 id=&quot;webtorrent-by-feross-aboukhadijeh&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#webtorrent-by-feross-aboukhadijeh&quot; aria-label=&quot;webtorrent by feross aboukhadijeh permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=kxHRATfvnlw&quot;&gt;WebTorrent&lt;/a&gt; by &lt;a href=&quot;https://twitter.com/feross&quot;&gt;Feross Aboukhadijeh&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;BitTorrent is a great protocol to share data between users across the world. Feross introduces the underlying functionality of BitTorrent and the advantages of a distributed network when compared to a centralized one. He also highlights certain shortcomings of the protocol that are centralized, like torrent files and tracker servers, and how we could solve these problems. Finally he describes WebTorrent, a project that makes use of WebRTC and special &quot;hybrid clients&quot; to connect to the BitTorrent network.&lt;/p&gt;
&lt;h3 id=&quot;gibbering-at-algoraves---js-in-live-audiovisual-performances-by-charlie-roberts&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#gibbering-at-algoraves---js-in-live-audiovisual-performances-by-charlie-roberts&quot; aria-label=&quot;gibbering at algoraves   js in live audiovisual performances by charlie roberts permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=2BIOINFSbMg&quot;&gt;Gibbering at Algoraves - JS in Live Audiovisual Performances&lt;/a&gt; by &lt;a href=&quot;http://gibber.mat.ucsb.edu/&quot;&gt;Charlie Roberts&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Possess certain skills like the ability to play music and you have the chance to perform it live in front of an audience. But writing code, especially JavaScript isn&apos;t that way. That&apos;s what we thought before this talk. Charlie introduces &lt;a href=&quot;http://gibber.mat.ucsb.edu/&quot;&gt;Gibber&lt;/a&gt;, a creative coding environment that lets you create music and visuals on the fly. Be ready for a trippy ride of a JavaScript live coding performance towards the end of the talk!&lt;/p&gt;
&lt;p&gt;It might seem like I&apos;ve described every talk at both the events, but the truth is that the quality of the talks was so impressive that it is hard to not praise the speakers for the efforts they have put in to prepare a stellar presentation. Looking forward to the next installment of DevFest Asia in 2015!&lt;/p&gt;</content:encoded><author>Himanshu Kapoor</author></item><item><title><![CDATA[JSFoo Delhi Run-up Event @ Wingify]]></title><description><![CDATA[Last week, we announced that Wingify would be sponsoring the JSFoo 2014 conference in Bangalore. We have always been looking out for…]]></description><link>https://engineering.wingify.com//posts/jsfoo-run-up-event-details/</link><guid isPermaLink="false">https://engineering.wingify.com//posts/jsfoo-run-up-event-details/</guid><pubDate>Sun, 07 Sep 2014 18:30:00 GMT</pubDate><content:encoded>&lt;p&gt;Last week, we announced that Wingify would be sponsoring the &lt;a href=&quot;http://engineering.wingify.com/posts/jsfoo-run-up-event/&quot;&gt;JSFoo 2014&lt;/a&gt; conference in Bangalore. We have always been looking out for opportunities to give back to the community, and what could have been better than hosting a run-up event for JSFoo in Delhi. We got in touch with HasGeek and expressed interest in hosting the Delhi run-up event. They were more than happy to let us do so.&lt;/p&gt;
&lt;p&gt;Since it was the first time we hosted such a big event, we were both excited and nervous. We had started preparing for the event about a month in advance. To market the event, we spread out information about the event on meetup groups we were connected with, and also created a &lt;a href=&quot;https://www.facebook.com/events/1464410987176966/&quot;&gt;Facebook event&lt;/a&gt; for it. In total, we received about 100-120 signups for the event. Of all the signups, we expected about one-third of them to actually turn up for the event, for whom we started to arrange for food and logistics.&lt;/p&gt;
&lt;p&gt;What’s exciting is that more than 50 external guests from 30 different companies and colleges showed up. We were really humbled with such great turnout and would like to thank each one of you who joined us for the event.&lt;/p&gt;
&lt;p&gt;The event started on time (10:30am) with &lt;a href=&quot;https://twitter.com/suchitpuri&quot;&gt;Suchit Puri&lt;/a&gt; taking the stage. He welcomed us to the event and introduced the first speaker &lt;a href=&quot;https://github.com/rudimk&quot;&gt;Rudi M.K.&lt;/a&gt;, who was about to speak on &lt;strong&gt;“A new approach to scientific computing using JavaScript“&lt;/strong&gt;. He talked about the possibilities of using JavaScript for mathematical and scientific computing. He had a few examples of using JavaScript on the server side for complex mathematical computation. It was really enlightening to see so many libraries coming up in support of scientific computing in the  JavaScript ecosystem.&lt;/p&gt;
&lt;div style=&quot;text-align:center; margin: 10px;&quot;&gt;
  &lt;img src=&quot;/images/2014/09/0.jpg&quot;&gt;
  &lt;div style=&quot;margin: 10px;&quot;&gt; Rudi speaking on “A new approach to scientific computing using JavaScript”
  &lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;Next was the workshop on &lt;strong&gt;“Learning JS concepts/techniques by implementing jQuery”&lt;/strong&gt; from our very own &lt;a href=&quot;https://github.com/chinchang&quot;&gt;Kushagra Gour&lt;/a&gt; . He had created a very interesting web based system specially for this workshop which he called “Prayas”. It allows the organizer to set JavaScript test cases and the participants to enter the JavaScript code which is evaluated against these test cases. It also has a very good UI which updates in real time giving you a good idea of how many of the participants have submitted in the code correctly.This made the workshop really interactive wherein the participants implemented some basic jquery methods in javascript.&lt;/p&gt;
&lt;div style=&quot;text-align:center; margin: 10px;&quot;&gt;
  &lt;img src=&quot;/images/2014/09/1.jpg&quot;&gt;
  &lt;div style=&quot;margin: 10px;&quot;&gt; Kushagra Gour taking workshop on “Learning JS concepts/techniques by implementing jQuery” with his awesome &quot;Prayas&quot; system on screen
  &lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;The workshop was followed by lunch after which we had &lt;a href=&quot;https://twitter.com/shwetank&quot;&gt;Shwetank Dixit&lt;/a&gt; talking on &lt;strong&gt;“Understanding WebRTC: A Whirlwind Tour”&lt;/strong&gt;. Shwetank introduced WebRTC and then went in-depth on the topic, explaining how the technology works and how are different network related problems addressed. He also showed some really cool WebRTC demos. &lt;a href=&quot;https://appear.in/&quot;&gt;Appear.in&lt;/a&gt; was one of them. We hope that attendees would have gone back and tried WebRTC.&lt;/p&gt;
&lt;div style=&quot;text-align:center; margin: 10px;&quot;&gt;
  &lt;img src=&quot;/images/2014/09/2.jpg&quot;&gt;
  &lt;div style=&quot;margin: 10px;&quot;&gt; Shwetank giving demo of WebRTC 
  &lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;Next was our very own &lt;a href=&quot;https://github.com/fleon/&quot;&gt;Himanshu Kapoor&lt;/a&gt; talking on &lt;strong&gt;“Managing API Resources and Their Relationships on the Front-end“&lt;/strong&gt;. This was indeed a very interesting talk wherein Himanshu talked about how we handle RESTFul resources on the front-end. The talk was primarily about our learnings of maintaining API resources and their relationships with using our internal project called ResourceManager for AngularJS (soon to be open sourced).&lt;/p&gt;
&lt;p&gt;The  last talk of the day was presented by Ankit Rastogi on &lt;strong&gt;“Ten Useful JavaScript Tips &amp;#x26; Best Practices”&lt;/strong&gt;. It was a very interesting interactive presentation on JavaScript optimizations tips and tricks. The presentation had a lot of questions which asked the audience to find whats wrong with the code, this made everyone really interested in the presentation. Everyone was really amazed by how implementing very simple things you can get many folds of processing/speed improvement in your code.&lt;/p&gt;
&lt;p&gt;The day ended on a high note with everyone really appreciating the speakers and the organizers for all the hard work everyone put in. There were a lot of discussion after the event on organizing more such events for different communities in Delhi NCR region. Wingify as a company believes in engaging and giving back to the community and we would be more than happy to host more such events in future. If you feel that there is any technology related  community which needs a place to host the event, please write to us at &lt;a href=&quot;mailto:engineering+community@wingify.com&quot;&gt;engineering+community@wingify.com&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&quot;presentation-slides-from-the-event&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#presentation-slides-from-the-event&quot; aria-label=&quot;presentation slides from the event permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Presentation slides from the event:&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href=&quot;http://slides.com/rudimk/jsmath#/&quot;&gt;A new approach to scientific computing using JavaScript&lt;/a&gt; - Rudi M. K.&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.slideshare.net/wingify_engineering/learn-js-concepts-by-implementing-jquery&quot;&gt;Learning JS concepts/techniques by implementing jQuery&lt;/a&gt; - Kushagra Gour&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.slideshare.net/wingify_engineering/resources-and-relationships-at-frontend&quot;&gt;Managing API Resources and Their Relationships on the Front-end&lt;/a&gt; -
Himanshu Kapoor&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://www.slideshare.net/ankit0rastogi/ten-useful-javascript-tips-best-practices&quot;&gt;Ten Useful JavaScript Tips &amp;#x26; Best Practices&lt;/a&gt; - Ankit Rastogi&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://shwetankdixit.com/downloads/jsfooRunnup.pdf&quot;&gt;Understanding WebRTC: A Whirlwind Tour&lt;/a&gt; - Shwetank Dixit&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&quot;wingify-engineering-on-twitter&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#wingify-engineering-on-twitter&quot; aria-label=&quot;wingify engineering on twitter permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Wingify Engineering on Twitter&lt;/h2&gt;
&lt;p&gt;Also, we are happy to announce that Wingify’s engineering team is now on Twitter! Follow us on &lt;a href=&quot;https://twitter.com/wingify_engg&quot;&gt;@wingify_engg&lt;/a&gt; to get updates on awesome things being cooked here.&lt;/p&gt;</content:encoded><author>Suchit Puri</author></item><item><title><![CDATA[JSFoo 2014 Delhi Run-up Event + JS Contest]]></title><description><![CDATA[The front-end has become the heart of today's web application development, and JavaScript drives a core part of it. New technologies…]]></description><link>https://engineering.wingify.com//posts/jsfoo-run-up-event/</link><guid isPermaLink="false">https://engineering.wingify.com//posts/jsfoo-run-up-event/</guid><pubDate>Sun, 24 Aug 2014 18:30:00 GMT</pubDate><content:encoded>&lt;p&gt;The front-end has become the heart of today&apos;s web application development, and JavaScript drives a core part of it. New technologies, libraries, frameworks and the likes come up each day, and the existing ones continue to grow and evolve as time goes by. There is so much to learn, and so many learnings of your own to share, that community involvement becomes indispensable.&lt;/p&gt;
&lt;p&gt;Our single-page application, &lt;a href=&quot;http://vwo.com&quot;&gt;VWO&lt;/a&gt;, is powered by a nifty combination of web technologies on the front-end, ranging from Grunt to AngularJS. The development process of the new version of the application was very rapid and full of challenges. We had dabbled into the previously unexplored territory of single-page application development at such a large scale, and having pulled it off in a relatively short span of time has been quite a feat.&lt;/p&gt;
&lt;h2 id=&quot;sponsoring-jsfoo&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#sponsoring-jsfoo&quot; aria-label=&quot;sponsoring jsfoo permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Sponsoring JSFoo&lt;/h2&gt;
&lt;p&gt;For the very reason of community involvement being indispensable for better development, we are sponsoring JSFoo 2014 in Bangalore this year. Our engineers will be present at the conference. Should you be interested in our work, and would like to know more about what we do, want to work with us, or just want to say Hi!, drop by our booth (B1), or catch any of our team members at the event.&lt;/p&gt;
&lt;h2 id=&quot;jsfoo-run-up-event-delhi&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#jsfoo-run-up-event-delhi&quot; aria-label=&quot;jsfoo run up event delhi permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;JSFoo Run-up Event (Delhi)&lt;/h2&gt;
&lt;p&gt;We&apos;re also hosting a run-up event at our office in Pitampura, Delhi on 6&lt;sup&gt;th&lt;/sup&gt; September 2014. There will be talks and a workshop too. &lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href=&quot;https://jsfoo.in/2014/runup-delhi&quot;&gt;Join us at the run-up event. RSVP here.&lt;/a&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;As a part of the run-up event, we&apos;re organising an online JavaScript competition.&lt;/p&gt;
&lt;h2 id=&quot;online-javascript-competition---visualize&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#online-javascript-competition---visualize&quot; aria-label=&quot;online javascript competition   visualize permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Online JavaScript Competition - Visualize&lt;/h2&gt;
&lt;p&gt;The premise of this competition is simple - to use JavaScript and HTML5 canvas to create something visually appealing. The theme of the competition is &lt;strong&gt;&lt;a href=&quot;http://en.wikipedia.org/wiki/Square&quot;&gt;Squares&lt;/a&gt;&lt;/strong&gt;. You are free to create anything with JavaScript, canvas and squares.&lt;/p&gt;
&lt;p&gt;If visualizations, particle effects, fractals, interactivity, JavaScript and canvas are some of the words that excite you, this is the competition for you. Below are some examples of JS creativity:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://mrdoob.com/lab/javascript/effects/branching/01/&quot;&gt;Branching Visualization&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://cssdeck.com/labs/full/jelly-text&quot;&gt;Springy Jelly&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://cssdeck.com/labs/full/html5-canvas-particles-web-matrix&quot;&gt;Particles Web Matrix&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://xplsv.com/prods/demos/xplsv_orsotheysay/&quot;&gt;Or So They Say...&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Below are some valid sample entries:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://cssdeck.com/labs/full/tunnel-of-squares&quot;&gt;Tunnel of Squares&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://cssdeck.com/labs/full/shattering-text-effect-in-canvas&quot;&gt;Shattering text&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;making-submissions&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#making-submissions&quot; aria-label=&quot;making submissions permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Making Submissions&lt;/h3&gt;
&lt;p&gt;Submissions for the competition need to be done as a deck on &lt;a href=&quot;http://cssdeck.com/&quot;&gt;CSSDeck&lt;/a&gt;. &lt;a href=&quot;http://cssdeck.com/post/67/guest-creations&quot;&gt;Read here&lt;/a&gt; to know about submitting on CSSDeck. Optionally, you can also submit your entry via another code submission site like &lt;a href=&quot;http://codepen.io&quot;&gt;Codepen&lt;/a&gt;, or by uploading it on your server.
Once you are ready with your submission, please tweet it using the following template:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;I submitted an entry for Wingify-JSFoo online competition: &amp;#x3C;CSSDeck link here&gt; @wingify @jsfooindia #wingifyjsfoocompo #js&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Let the submissions begin!&lt;/p&gt;
&lt;h3 id=&quot;rules&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#rules&quot; aria-label=&quot;rules permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Rules&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;The deadline for the competition is 20th September 2014, 23:59 IST.&lt;/li&gt;
&lt;li&gt;Your entry should use Javascript, HTML5 Canvas and Squares to create something visually appealing.&lt;/li&gt;
&lt;li&gt;CoffeeScript is allowed.&lt;/li&gt;
&lt;li&gt;Judgement will primarily be based on visual appeal. Secondary parameters include code quality and smoothness.&lt;/li&gt;
&lt;li&gt;Multiple entries by a single participant are allowed.&lt;/li&gt;
&lt;li&gt;Bonus points for using &lt;a href=&quot;http://vanilla-js.com/&quot;&gt;vanilla JS&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;The results will be announced after 20th September 2014 here on the blog as well as on our twitter account: &lt;a href=&quot;https://twitter.com/wingify&quot;&gt;@wingify&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;You &lt;strong&gt;must be living in India&lt;/strong&gt; to be eligible for this competition.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;If you have any questions or suggestions, comment on this post or &lt;a href=&quot;mailto:engineering@wingify.com&quot;&gt;send us an email&lt;/a&gt;.&lt;/p&gt;
&lt;h3 id=&quot;rewards&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#rewards&quot; aria-label=&quot;rewards permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Rewards&lt;/h3&gt;
&lt;p&gt;The best two entries in the competition will be rewarded with prizes. There are three consolation prizes as well.&lt;/p&gt;
&lt;h4 id=&quot;winner-prize&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#winner-prize&quot; aria-label=&quot;winner prize permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Winner Prize&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://developer.mozilla.org/en-US/Firefox_OS/Developer_phone_guide/Flame&quot;&gt;Firefox OS Flame Device&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&quot;runner-up-prize&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#runner-up-prize&quot; aria-label=&quot;runner up prize permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Runner-up Prize&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://www.mozilla.org/en-US/firefox/os/devices/#zte_open&quot;&gt;Firefox OS ZTE Open Device&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&quot;consolation-prizes&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#consolation-prizes&quot; aria-label=&quot;consolation prizes permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Consolation Prizes&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;Software licenses of Sublime Text or JetBrains WebStorm.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;wingify--jsfoo&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#wingify--jsfoo&quot; aria-label=&quot;wingify  jsfoo permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Wingify @ JSFoo&lt;/h2&gt;
&lt;p&gt;Our engineers will be present at the conference. If you are &lt;a href=&quot;http://github.com/wingify&quot;&gt;interested in our work&lt;/a&gt;, want to know more about what we are doing, want to work with us (&lt;a href=&quot;http://wingify.com/careers&quot;&gt;we&apos;re hiring&lt;/a&gt;), get some cool goodies or just want to say Hi!, please visit our booth (B1) or catch any of our team members. We’d love to talk to you!&lt;/p&gt;
&lt;p&gt;We look forward to meeting in Delhi for the run-up event and in Bangalore for the conference!&lt;/p&gt;
&lt;h4 id=&quot;edit---23rd-september-2014&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#edit---23rd-september-2014&quot; aria-label=&quot;edit   23rd september 2014 permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Edit - 23rd September 2014&lt;/h4&gt;
&lt;p&gt;Results for our JS competition are out!&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;1st prize - Amanpreet Singh - &lt;a href=&quot;http://anixir.com/projects/squares/index.htm&quot;&gt;View entry&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;2nd prize - Shubham Jain - &lt;a href=&quot;http://cssdeck.com/labs/swdgqeai5m&quot;&gt;View entry&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;3rd prize - Mahima Sivasankar - &lt;a href=&quot;http://cssdeck.com/labs/full/xeg8hfex&quot;&gt;View entry&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;You will be contacted individually for further process. Congratulations!&lt;/p&gt;</content:encoded><author>Himanshu Kapoor</author></item><item><title><![CDATA[Open Sourcing DOM Comparator]]></title><description><![CDATA[DOM Comparator is a JavaScript library that analyzes and compares two HTML strings, and returns back a diff object. It returns an output…]]></description><link>https://engineering.wingify.com//posts/open-sourcing-dom-comparator/</link><guid isPermaLink="false">https://engineering.wingify.com//posts/open-sourcing-dom-comparator/</guid><pubDate>Sun, 10 Aug 2014 18:30:00 GMT</pubDate><content:encoded>&lt;p&gt;DOM Comparator is a JavaScript library that analyzes and compares two HTML strings, and returns back a diff object. It returns an output which is an array of operation objects.&lt;/p&gt;
&lt;div style=&quot;text-align: center;&quot;&gt;
	&lt;a href=&quot;https://github.com/wingify/dom-comparator&quot; style=&quot;padding: 20px 40px; font-size: 24px;&quot; class=&quot;btn btn-primary&quot;&gt;DOM Comparator on Github&lt;/a&gt;
&lt;/div&gt;
&lt;p&gt;Here&apos;s a simple example:&lt;/p&gt;
&lt;p&gt;{% highlight js %}
var stringA = &apos;&lt;ul&gt;&lt;li class=&quot;active&quot;&gt;list item 1&lt;/li&gt;&lt;li&gt;list item 2&lt;/li&gt;&lt;/ul&gt;&apos;;
var stringB = &apos;&lt;ul&gt;&lt;li&gt;list item 1&lt;/li&gt;&lt;li&gt;list item 2&lt;/li&gt;&lt;/ul&gt;&apos;;&lt;/p&gt;
&lt;p&gt;// Compare the two strings
var result = VWO.DOMComparator.create({
stringA: stringA,
stringB: stringB
});&lt;/p&gt;
&lt;p&gt;// Expect an array of VWO.Operation objects to be returned,
// the first one of which looks like below:
expect(result[0]).toEqual({
name: &apos;removeAttr&apos;,
selectorPath: &apos;UL:first-child &gt; LI:first-child&apos;,
content: {
class: &apos;active&apos;
}
});
{% endhighlight %}&lt;/p&gt;
&lt;h2 id=&quot;motivation&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#motivation&quot; aria-label=&quot;motivation permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Motivation&lt;/h2&gt;
&lt;p&gt;&lt;a href=&quot;https://vwo.com/knowledge/about-vwo-campaign-builder&quot;&gt;The Campaign Builder&lt;/a&gt; is one of the core components of our A/B testing software &lt;a href=&quot;http://vwo.com&quot;&gt;VWO&lt;/a&gt;. It allows you to make changes to any website on the fly. Assuming the target website has a small snippet of &lt;a href=&quot;https://vwo.com/knowledge/folder-vwo-smart-code&quot;&gt;VWO Smart Code&lt;/a&gt; (Javascript) inserted, the changes made by the user are applied when the A/B test is run. These changes are little snippets of jQuery operations that are applied on the client-end.&lt;/p&gt;
&lt;p&gt;One of the major problems faced when applying such changes that they did not regard for dynamic content that might have been rendered by the client&apos;s website&apos;s backend. Let us consider a simple example:&lt;/p&gt;
&lt;p&gt;Imagine somebody wanting to run an A/B test on all the product pages of an eCommerce website. He wants to modify the &quot;Buy Now&quot; button on all such pages and make it appear bigger and bolder, so that it captures the end-user&apos;s attention better. He navigates to some product page, selects the button and tries to edit it. Assume that that button has markup that looks like below:&lt;/p&gt;
&lt;p&gt;{% highlight html %}
&lt;a href=&quot;javascript:addToCart(16);&quot; class=&quot;add_to_cart&quot;&gt;Add to Cart&lt;/a&gt;
{% endhighlight %}&lt;/p&gt;
&lt;p&gt;The Campaign Builder provides an &quot;Edit&quot; operation, that opens up a rich text editor for the user to make changes to any element with ease. Assuming, he makes the text of the button bolder and changes the color to a bright red, here&apos;s what the resulting markup would look like:&lt;/p&gt;
&lt;p&gt;{% highlight html %}
&lt;a href=&quot;javascript:addToCart(16);&quot; class=&quot;add_to_cart&quot; style=&quot;font-weight:bold;color:red;&quot;&gt;Add to Cart&lt;/a&gt;
{% endhighlight %}&lt;/p&gt;
&lt;p&gt;Internally, an Edit operation is identified by the element the operation is applied on, and the new markup provided by the user, which in this case is the above code. It means that if a Buy Now button is found on any page, it will be replaced with the above code. The jQuery code for such an operation would look something like this:&lt;/p&gt;
&lt;p&gt;{% highlight js %}
// A unique selector path to identify the element
var selector = &apos;#product&lt;em&gt;description &gt; P:first-child + P &gt; A:first-child&apos;;
$(selector).replaceWith(&apos;&amp;#x3C;a href=&quot;javascript:addToCart(16);&quot; class=&quot;add&lt;/em&gt;to_cart&quot; style=&quot;font-weight:bold;color:red;&quot;&gt;Add to Cart&lt;/a&gt;&apos;);
{% endhighlight %}&lt;/p&gt;
&lt;p&gt;Notice how this would not only add the styles to that element, but also change its &lt;code class=&quot;language-text&quot;&gt;href&lt;/code&gt; to always execute &lt;code class=&quot;language-text&quot;&gt;addToCart(16);&lt;/code&gt; regardless of the product page the user is on. Essentially, the dynamic content rendered by the client&apos;s backend has now been replaced with static content.&lt;/p&gt;
&lt;h2 id=&quot;dom-comparator-to-the-rescue&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#dom-comparator-to-the-rescue&quot; aria-label=&quot;dom comparator to the rescue permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;DOM Comparator to the Rescue&lt;/h2&gt;
&lt;p&gt;With DOM Comparator in place, the initial markup of the Edit operation above will be compared with the final one, and a difference would be returned. The difference would contain the minimal changes necessary to be made to the target element, thereby impacting dynamic content as less as possible.&lt;/p&gt;
&lt;p&gt;For the above example, here&apos;s what the list of resulting operations would look like:&lt;/p&gt;
&lt;p&gt;{% highlight json %}
[{
&quot;name&quot;: &quot;css&quot;,
&quot;selectorPath&quot;: &quot;#product_description &gt; P:first-child + P &gt; A:first-child&quot;,
&quot;content&quot;: {
&quot;font-weight&quot;: &quot;bold&quot;,
&quot;color&quot;: &quot;red&quot;
}
}]
{% endhighlight %}&lt;/p&gt;
&lt;h2 id=&quot;live-demo&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#live-demo&quot; aria-label=&quot;live demo permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Live Demo&lt;/h2&gt;
&lt;p&gt;&lt;a href=&quot;http://engineering.wingify.com/dom-comparator/live-demo.html&quot;&gt;Click here&lt;/a&gt; to view a live demo.&lt;/p&gt;
&lt;h2 id=&quot;whats-next&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#whats-next&quot; aria-label=&quot;whats next permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;What&apos;s Next&lt;/h2&gt;
&lt;p&gt;The library is currently in a pre-alpha state. It works well for a good number of cases, but does not for a lot of others. And for certain complex cases, it might not be performant enough.&lt;/p&gt;
&lt;p&gt;Our current plans are focused on improving the library as per the below priority list:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;Correctness&lt;/strong&gt;: For almost all the cases, the first priority is to get the output as correct as possible to the expectation. This has been our prime focus thus far.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Performance&lt;/strong&gt;: Once we ensure the cases perform correctly, the next task is to profile and optimize for performance. Since tree comparison is a pretty complex operation, we will be looking into possibilities like spawning a worker for performing tasks, or delegating to a Node.js server for comparison.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Readability&lt;/strong&gt;: For a complex algorithm, it is equally important for the code to be readable. In the coming versions, certain complex logic, especially in the classes &lt;code class=&quot;language-text&quot;&gt;VWO.DOMMatchFinder&lt;/code&gt; and &lt;code class=&quot;language-text&quot;&gt;VWO.StringComparator&lt;/code&gt; will be refactored from the point of view of readability.&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Documentation&lt;/strong&gt;: Writing a documentation is as hard as writing code, if not more, is what I have realized when documenting this project. Over time, we will spend some time improving the documentation, and also release a reference manual for the classes used.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;contributing&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#contributing&quot; aria-label=&quot;contributing permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Contributing&lt;/h2&gt;
&lt;p&gt;If you are interested in contributing to the project, we would love to hear from you. Just &lt;a href=&quot;https://github.com/wingify/dom-comparator/fork&quot;&gt;fork the repository&lt;/a&gt; and &lt;a href=&quot;https://github.com/wingify/dom-comparator/pulls&quot;&gt;submit a pull request&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&quot;further-reading&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#further-reading&quot; aria-label=&quot;further reading permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Further Reading&lt;/h2&gt;
&lt;p&gt;Head over to &lt;a href=&quot;http://engineering.wingify.com/dom-comparator/&quot;&gt;the documentation&lt;/a&gt; if you&apos;d like to know more.&lt;/p&gt;</content:encoded><author>Himanshu Kapoor</author></item><item><title><![CDATA[Wingify at The Fifth Elephant]]></title><description><![CDATA[The Fifth Elephant is a popular conference in India around the Big Data ecosystem. It happened last week in Bangalore. And we were proud to…]]></description><link>https://engineering.wingify.com//posts/wingify-at-the-fifth-elephant/</link><guid isPermaLink="false">https://engineering.wingify.com//posts/wingify-at-the-fifth-elephant/</guid><pubDate>Fri, 01 Aug 2014 18:30:00 GMT</pubDate><content:encoded>&lt;p&gt;[The Fifth Elephant][1] is a popular conference in India around the Big Data ecosystem. It happened last week in Bangalore. And we were proud to sponsor the conference. To represent Wingify at the event, [Ankit][2], [Varun][3] and [I (Vaidik)][4] attended the event. This blog post is an account of what we did at the event and what we learned by sponsoring, attending and being present at the conference as an organization.&lt;/p&gt;
&lt;script&gt;Galleria.run(&apos;#fifth-elephant-gallery&apos;);&lt;/script&gt;
&lt;div id=&quot;fifth-elephant-gallery&quot; style=&quot;height: 600px;&quot;&gt;
    &lt;img src=&quot;/images/2014/08/0.jpg&quot;&gt;
    &lt;img src=&quot;/images/2014/08/3.jpg&quot;&gt;
    &lt;img src=&quot;/images/2014/08/1.jpg&quot;&gt;
    &lt;img src=&quot;/images/2014/08/2.jpg&quot;&gt;
    &lt;img src=&quot;/images/2014/08/4.jpg&quot;&gt;
    &lt;img src=&quot;/images/2014/08/5.jpg&quot;&gt;
    &lt;img src=&quot;/images/2014/08/6.jpg&quot;&gt;
    &lt;img src=&quot;/images/2014/08/7.jpg&quot;&gt;
    &lt;img src=&quot;/images/2014/08/8.jpg&quot;&gt;
&lt;/div&gt;
&lt;h2 id=&quot;the-conference&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#the-conference&quot; aria-label=&quot;the conference permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;The conference&lt;/h2&gt;
&lt;p&gt;The organizers reported that there were 960 registrations for the conference - quite a big number for a conference around something like Big Data. It seems most of the attendees were from Bangalore and not many had come from Delhi. There were talks around infrastructure for big data systems, machine learning, data mining, etc. A few talks out of the ones we attended were really good. There were a few that we wanted to attend but couldn&apos;t because we were busy talking to people who wanted to talk to us and know more about us. Well that&apos;s what conferences are about - attend a few good talks and meet a lot of people. Fortunately, HasGeek will put out the [recorded videos][5] of those sessions soon. Some talks were around interesting topics and some not so much. Shailesh&apos;s talk on [The Art of Data Mining][6] was certainly the best talk out of all the talks that I managed to attend (personal opinion).&lt;/p&gt;
&lt;p&gt;There were poster sessions for talks that the editorial panel found interesting but not interesting enough to select them for sessions. My proposal for [Using Elasticsearch for Analytics][7] ([presentation slides][8]) was selected for a poster session, which I presented on the 2nd day of the conference. It was interesting to see that multiple teams within Flipkart, Red Hat, a couple of other product startups and services companies were interested in doing the same. So we ended up having long discussions about how are using [Elasticsearch][9] for analytics it at Wingify and how they can use [Elasticsearch][10] to solve similar problems.&lt;/p&gt;
&lt;div style=&quot;text-align:center; margin: 5px;&quot;&gt;
  &lt;a href=&quot;https://flic.kr/p/ovqdx8&quot;&gt;
    &lt;img src=&quot;/images/2014/08/7.jpg&quot;&gt;
  &lt;/a&gt;
&lt;/div&gt;
&lt;h2 id=&quot;our-presence-at-the-conference&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#our-presence-at-the-conference&quot; aria-label=&quot;our presence at the conference permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Our presence at the conference&lt;/h2&gt;
&lt;p&gt;We had a desk/booth which we managed to prepare nicely to catch everyone&apos;s attention. We got a display next to our desk on which we played our super cool video that we put on [vwo.com][11] (a few people expressed that they really liked the video). I think that caught a lot of people&apos;s attention. We also strategically placed our standees at places where it was clearly visible. Looking at other standees, I think ours was one of the best in design if not the best. We distributed our t-shirts and stickers, which seemed to attract a lot of people (more than once for the free t-shirt). A few people gave us compliments for the A-4 insert we distributed to all the participants at the time of registration. Thanks to Paras for helping out with the content and the design.&lt;/p&gt;
&lt;p&gt;On the first day, an overwhelming number of people walked up to our booth. They were mostly unaware of our and our product&apos;s existence. Many were blown away by the idea. Some not so much. But after talking to so many people, we figured that we were not absolutely correct about ignoring this conference as a place to promote the product and get prospective clients. Other than engineers, there were decision makers from large companies like Amazon, Citibank, Ebay and Lenovo who Ankit got a chance to speak with.&lt;/p&gt;
&lt;p&gt;We were primarily at Fifth Elephant for the purpose of establishing the Wingify engineering brand and hiring. We were able to spread the word about what we do and got people interested about product and work. So on the front of establishing our engineering brand, we were somewhat successful - this was evident from the kind of conversations we had with people at our booth and the number of people who shared their contact details with us (this is not always very conclusive as free goodies attract people and the number can be deceiving). A lot of people were interested in understanding what kind of roles we are hiring for. These people were interested in data science and software engineering. Fingers crossed - we might get some applications soon and opportunity to work with some amazing people. People found our product cool - many did not know that something of this sort existed. I think this was one of the things that got them interested. However, some were sad to know that we are based out of Delhi instead of Bangalore, as I initially said that it seemed like most of the attendees were from Bangalore. That just says that the community in Delhi needs to work together to make Delhi more exciting for engineers.&lt;/p&gt;
&lt;h2 id=&quot;community&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#community&quot; aria-label=&quot;community permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Community&lt;/h2&gt;
&lt;p&gt;We engaged with the community through our booth and at other moments like lunch during the conference. We got the opportunity to make connections with different startups and individuals like Jabong, BloomReach, SupportBee, Inmobi, Flipkart, GlusterFS (and Red Hat), Qubole, Myntra, Aerospike and Slideshare. I might have missed some unintentionally. We got to learn about what they are doing and we shared what we are doing. Discussions were usually about the product, engineering, our tech stack, specific engineering problems, the team, work culture, community in Delhi, etc. People were exited to know our stack and what we are doing with it. We always knew that our tech stack is not the conventional stack but we realized that it&apos;s uncommon and cool.&lt;/p&gt;
&lt;p&gt;In the process, we had good some good discussions and connected with good people who we think will hopefully help us with solving some problems we are trying to solve - making friends of Wingify :)&lt;/p&gt;
&lt;h2 id=&quot;we-learned-about-new-things&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#we-learned-about-new-things&quot; aria-label=&quot;we learned about new things permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;We learned about new things&lt;/h2&gt;
&lt;p&gt;We have not always been very focussed at doing a lot with collected data. With our latest release, we have come up with a number of features that make use of large amount of data our systems collect and our solutions to these problems were rather unconventional. With the latest release and our plans, we will be making more and more use of collected data for deriving useful insights for our customers and building new features that will help our customers optimize and increase their conversions. Since we have plans to work with data, The Fifth Elephant was an important conference for us to learn about what exactly is going on in the Big Data universe and how we can make use of all that at Wingify. Aerospike NoSQL Database, Cachebox, Imobi&apos;s Grill project are just a few things that we got introduced to and we may explore them in the future for our varied use-cases. It was interesting to see people are trying to leverage SSDs for solving different kind of problems. Aerospike is a NoSQL database optimized for SSD disks and claims to be extremely performant (200,000 QPS per node). CacheBox is an advanced caching solution that leverages flash storage for improving performance for databases.&lt;/p&gt;
&lt;p&gt;Other than these systems, there were some learning around building big data infrastructure, real-time data pipelines and data mining. There was a talk on [Lessons from Elasticsearch in Production][12] by [Swaroop CH][13] from [Helpshift][14]. We have been using Elasticsearch at Wingify and it was interesting to see that we were not facing similar problems as they were. We took that as a sign to be cautious and be prepared for firefighting such problems. These were around using Elasticsearch&apos;s Snapshot and Restore API (they say it doesn&apos;t work) and performing rolling upgrades (which is the recommended way of doing upgrades). We never had such problems but we are now aware that others have had such problems and we can be better prepared.&lt;/p&gt;
&lt;h2 id=&quot;to-sum-up&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#to-sum-up&quot; aria-label=&quot;to sum up permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;To sum up&lt;/h2&gt;
&lt;p&gt;It was a great experience being at this conference. It was for the first time we attended a Big Data conference. This ecosystem in India seems to be big and growing and hopefully there will be better content at conferences like these in the future. Thanks to [HasGeek][15] for taking the initiative. We hope that the conference will continue to happen in the years to come.&lt;/p&gt;
&lt;p&gt;If you were present at the conference and met us there, please do not hesitate to connect with us. If you have any questions to ask regarding our experiences, go ahead and leave comments and we will get back to you. If you like what we do at Wingify and want to join the force, we will be happy to work with you. [We are hiring!][16]&lt;/p&gt;
&lt;h3 id=&quot;photo-credits&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#photo-credits&quot; aria-label=&quot;photo credits permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Photo Credits&lt;/h3&gt;
&lt;p&gt;The beautiful photographs in this post have been provided by [HasGeek][17]. You can find more photographs of The Fifth Elephant at the following links:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;[Conference Day 1][18]&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;[Conference Day 2][19]&lt;/p&gt;
&lt;p&gt;[1]: &lt;a href=&quot;http://fifthelephant.in&quot;&gt;http://fifthelephant.in&lt;/a&gt;
[2]: &lt;a href=&quot;http://twitter.com/ankneo&quot;&gt;http://twitter.com/ankneo&lt;/a&gt;
[3]: &lt;a href=&quot;http://github.com/softvar&quot;&gt;http://github.com/softvar&lt;/a&gt;
[4]: &lt;a href=&quot;http://github.com/vaidik&quot;&gt;http://github.com/vaidik&lt;/a&gt;
[5]: &lt;a href=&quot;http://hasgeek.tv&quot;&gt;http://hasgeek.tv&lt;/a&gt;
[6]: &lt;a href=&quot;https://funnel.hasgeek.com/fifthel2014/1166-the-art-of-data-mining-practical-learnings-from-re&quot;&gt;https://funnel.hasgeek.com/fifthel2014/1166-the-art-of-data-mining-practical-learnings-from-re&lt;/a&gt;
[7]: &lt;a href=&quot;https://funnel.hasgeek.com/fifthel2014/1143-using-elasticsearch-for-analytics&quot;&gt;https://funnel.hasgeek.com/fifthel2014/1143-using-elasticsearch-for-analytics&lt;/a&gt;
[8]: &lt;a href=&quot;https://speakerdeck.com/vaidik/using-elasticsearch-for-analytics&quot;&gt;https://speakerdeck.com/vaidik/using-elasticsearch-for-analytics&lt;/a&gt;
[9]: &lt;a href=&quot;http://elasticsearch.org&quot;&gt;http://elasticsearch.org&lt;/a&gt;
[10]: &lt;a href=&quot;http://elasticsearch.org&quot;&gt;http://elasticsearch.org&lt;/a&gt;
[11]: &lt;a href=&quot;https://vwo.com&quot;&gt;https://vwo.com&lt;/a&gt;
[12]: &lt;a href=&quot;https://funnel.hasgeek.com/fifthel2014/1181-lessons-from-elasticsearch-in-production&quot;&gt;https://funnel.hasgeek.com/fifthel2014/1181-lessons-from-elasticsearch-in-production&lt;/a&gt;
[13]: &lt;a href=&quot;https://twitter.com/swaroopch&quot;&gt;https://twitter.com/swaroopch&lt;/a&gt;
[14]: &lt;a href=&quot;http://helpshift.com&quot;&gt;http://helpshift.com&lt;/a&gt;
[15]: &lt;a href=&quot;http://hasgeek.in&quot;&gt;http://hasgeek.in&lt;/a&gt;
[16]: &lt;a href=&quot;http://wingify.com/careers&quot;&gt;http://wingify.com/careers&lt;/a&gt;
[17]: &lt;a href=&quot;http://hasgeek.in&quot;&gt;http://hasgeek.in&lt;/a&gt;
[18]: &lt;a href=&quot;https://www.flickr.com/photos/hasgeek/sets/72157645996766474/&quot;&gt;https://www.flickr.com/photos/hasgeek/sets/72157645996766474/&lt;/a&gt;
[19]: &lt;a href=&quot;https://www.flickr.com/photos/hasgeek/sets/72157645599451387/&quot;&gt;https://www.flickr.com/photos/hasgeek/sets/72157645599451387/&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;</content:encoded><author>Vaidik Kapoor</author></item><item><title><![CDATA[Dynamic CDN]]></title><description><![CDATA[We, at Wingify, handle not just our own traffic, but also the traffic of
major websites such as Microsoft, AMD, Groupon, and WWF that…]]></description><link>https://engineering.wingify.com//posts/dynamic-cdn/</link><guid isPermaLink="false">https://engineering.wingify.com//posts/dynamic-cdn/</guid><pubDate>Tue, 22 Jul 2014 18:30:00 GMT</pubDate><content:encoded>&lt;p&gt;We, at Wingify, handle not just our own traffic, but also the traffic of
major websites such as &lt;a href=&quot;http://www.microsoft.com/&quot;&gt;Microsoft&lt;/a&gt;, &lt;a href=&quot;http://www.amd.com/&quot;&gt;AMD&lt;/a&gt;, &lt;a href=&quot;http://www.groupon.com/&quot;&gt;Groupon&lt;/a&gt;, and &lt;a href=&quot;http://www.worldwildlife.org/&quot;&gt;WWF&lt;/a&gt; that implement
&lt;a href=&quot;https://vwo.com&quot;&gt;Visual Website Optimizer (VWO)&lt;/a&gt; for their website optimization. VWO allows
users to A/B test their websites and optimize conversions. With an intuitive
WYSIWYG editor, you can easily make changes to your website and create multiple
variations you can A/B test.  When a visitor lands on your website, VWO selects
one of the variations created in the running campaign(s) and the JavaScript
library does the required modifications to generate the selected variation
based on the URL visited seen by the visitor. Furthermore, VWO collects
analytics data for every visitor interaction with the website and generates
detailed reports to help you understand your audience behavior and provide
deeper insight of your business results.&lt;/p&gt;
&lt;p&gt;Here is a very high-level overview of what goes on behind the scenes:&lt;/p&gt;
&lt;div style=&quot;text-align:center; margin: 5px&quot;&gt;
	&lt;img src=&quot;/images/2014/07/0.png&quot;&gt;
&lt;/div&gt;
&lt;h2 id=&quot;how-it-started&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#how-it-started&quot; aria-label=&quot;how it started permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;How it started&lt;/h2&gt;
&lt;p&gt;Back in the days, we deployed one server in the United States that had the
standard LAMP stack running on it. The server stored all changes made to a
website using VWO app, served our static JS library, collected analytics data,
captured visitor data, and saved it in a MySQL database.&lt;/p&gt;
&lt;div style=&quot;text-align:center; margin: 5px&quot;&gt;
	&lt;img src=&quot;/images/2014/07/1.png&quot;&gt;
&lt;/div&gt;
&lt;p&gt;This implementation worked perfectly for us initially, when we were serving a
limited number of users. However, as our user base kept growing, we had to
deploy additional Load Balancers and Varnish cache servers (each having 32GB
of RAM and we had 8 such servers to meet our requirements) to make sure that
we cache the content for every requested URL and serve back the content in the
least possible time.&lt;/p&gt;
&lt;div style=&quot;text-align:center; margin: 5px&quot;&gt;
	&lt;img src=&quot;/images/2014/07/2.png&quot;&gt;
&lt;/div&gt;
&lt;p&gt;Gradually, we started using these servers only for serving JS settings and
collecting analytics data, and started using Amazon&apos;s CloudFront CDN for
serving static JS library.&lt;/p&gt;
&lt;h2 id=&quot;issues-we-faced&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#issues-we-faced&quot; aria-label=&quot;issues we faced permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Issues we faced&lt;/h2&gt;
&lt;p&gt;This worked great for a while till we hit our traffic to more than 1k requests
per sec. With so much of traffic coming in and the increasing number of unique
URLs being tested, the system started failing. We experienced frequent cache
misses and Varnish required more RAM to cope up with the new requirements. We
knew we had hit the bottom-end there and quickly realized that it was time for
us to stop everything and get our thinking caps back on to redesign the
architecture. We now needed a scalable system that was easier to maintain, and
would cater to the needs of our users from various geo locations.&lt;/p&gt;
&lt;h2 id=&quot;the-new-requirements&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#the-new-requirements&quot; aria-label=&quot;the new requirements permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;The new requirements&lt;/h2&gt;
&lt;p&gt;Today, VWO uses a Dynamic CDN built in-house that can cater to users based in
any part of the world. The current implementation offers us with the following
advantages in comparison with other available CDNs:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Capability of handling almost any amount of requests at average response
times of 50ms&lt;/li&gt;
&lt;li&gt;Handles 10k+ request/sec per node (8GB RAM). We have benchmarked this system
to handle 50k requests/sec per node in our current production scenario&lt;/li&gt;
&lt;li&gt;100% uptime&lt;/li&gt;
&lt;li&gt;Improved response time and data acquisition as the servers are closer to the
user, thus minimizing the latency and increasing the chances of successful
delivery of data&lt;/li&gt;
&lt;li&gt;Considerable cost savings as compared to the previous system&lt;/li&gt;
&lt;li&gt;Freedom to add new nodes without any dependencies on other nodes&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;implementation-challenges-and-technicalities&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#implementation-challenges-and-technicalities&quot; aria-label=&quot;implementation challenges and technicalities permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Implementation challenges and technicalities&lt;/h3&gt;
&lt;p&gt;The core issue we had to resolve was to avoid sending the same response for all
the requests coming from a domain or a particular account. In the old
implementation, we were serving JSON for all the campaigns running in an
account, irrespective of a campaign running on that URL. This loaded
unnecessary JS code, which might not be useful for a particular URL, thereby
increasing load time of the website. We knew how page-load time is crucial for
online businesses and how it directly impacts their revenue. In the marketing
world, the users are less likely to make purchases from a slow loading website
as compared to a fast loading website.&lt;/p&gt;
&lt;div style=&quot;text-align:center; margin:5px&quot;&gt;
	&lt;img src=&quot;/images/2014/07/3.png&quot;&gt;
&lt;/div&gt;
&lt;p&gt;It is important to make sure that we only serve relevant content based on the
URL of the page. There are two ways to do this:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Cache JSON for all the URLs and use cache like Varnish (the old system).&lt;/li&gt;
&lt;li&gt;Cache each campaign running in an account and then build/combine the settings
dynamically for each URL. This approach is the fastest possible way of
implementation with least amount of resources.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;With the approach identified, we started looking for nodes that could do
everything for us - generate dynamic JSON on the basis of request, serve static
JS library, and handle data acquisition. Another challenge was to make these
nodes a part of distributed system that spreads across different geographies,
with no dependency on each other while making sure that the request is served
from the closest location instead of nodes only in the US. We had written a
blog post earlier to explain this to our customers. &lt;a href=&quot;https://vwo.com/blog/geo-distributed-architecture/&quot;&gt;Read it here&lt;/a&gt;.&lt;/p&gt;
&lt;div style=&quot;text-align:center; margin:5px&quot;&gt;
	&lt;img src=&quot;/images/2014/07/4.png&quot;&gt;
&lt;/div&gt;
&lt;p&gt;&lt;a href=&quot;http://openresty.org/&quot;&gt;OpenResty (aka. ngx_openresty)&lt;/a&gt; our current workhorse, is a full-fledged web
application server created by bundling the standard Nginx core with different
&lt;a href=&quot;http://wiki.nginx.org/3rdPartyModules&quot;&gt;3rd-party Nginx modules&lt;/a&gt; and their external dependencies. It also bundles Lua
modules to allow writing URL handlers in Lua, and the Lua code runs within the
web server.&lt;/p&gt;
&lt;p&gt;From 1 server running Apache + PHP to multiple nodes involving Nginx (load
balancer) -&gt; Varnish (cache) -&gt; Apache + PHP (for cache miss + data
collection), to the current system where each node in itself is capable of
handling all types of requests. We serve our static JS library, JSON settings
for every campaign and also use these servers for analytics data acquisition.&lt;/p&gt;
&lt;p&gt;The following section describes briefly the new architecture of our CDN and how
VWO servers handle requests:&lt;/p&gt;
&lt;div style=&quot;text-align:center; margin:5px&quot;&gt;
	&lt;img src=&quot;/images/2014/07/5.png&quot;&gt;
&lt;/div&gt;
&lt;ol&gt;
&lt;li&gt;We use &lt;a href=&quot;http://wiki.nginx.org/HttpLuaModule#ngx.shared.DICT&quot;&gt;Nginx-Lua Shared Dictionary&lt;/a&gt;, an in-memory
store shared among all the Nginx worker processes to store campaign specific
data. Memcached is used as the first fallback if we have to restart the
OpenResty server (it resets the shared dictionary). Our second fallback is
our central MySQL database. If any request fails at any level, [the system]
fetches it from the lower layer and responses are saved in all the above
levels to make them available for the next request.&lt;/li&gt;
&lt;li&gt;Once the request hits our server to fetch JSON for the campaigns running on
a webpage, VWO runs a regex match for the requested URL with the list of URL
regex patterns stored in the Nginx-Lua shared dictionary (key being Account
ID, O(1) lookup, FAST!). This returns the list of campaign IDs valid for the
requested URL. All the regex patterns are compiled and cached in
worker-process level and shared among all requests.&lt;/li&gt;
&lt;li&gt;Next, VWO looks up for the campaign IDs (returned after matching the
requested URL) in the Nginx-Lua shared dictionary, with Account ID and
Campaign ID as key (again an O(1) lookup). This returns the settings for all
campaigns, which are then combined and sent with some additional data in
response based on requests such as geo-location data, 3rd party integrations
specific code, etc. We ensure that the caching layer does not have stale
data and is updated within a few milliseconds. This offers us advantage in
terms of validation time taken by most CDNs available.&lt;/li&gt;
&lt;li&gt;To ensure that the request is served from the closest server to the visitor,
we use managed DNS services from DynECT that keeps a check on the response
times from various POPs and replies with the best possible server IPs (both
in terms of health and distance). This helps us ensure a failsafe delivery
network.&lt;/li&gt;
&lt;li&gt;To ensure that the system captures analytics data, all data related to
visitors, conversions and heatmaps is sent to these servers. We use
Openresty with Lua for collecting all incoming data. All the data received
at Openresty end is pushed to a Redis server running on all these machines.
The Redis server writes the data as fast as possible, thereby reducing the
chance of data loss. Next, we move data from the Redis servers to central
RabbitMQ. This incoming data is then used by multiple consumers in various
ways and stored at multiple places for different purposes. You can check our
previous post &lt;a href=&quot;http://engineering.wingify.com/scaling-with-queues/&quot;&gt;Scaling with Queues&lt;/a&gt; to understand more about our data
acquisition setup.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;As our customers keep growing and our traffic keeps growing, we will be able to
judge better about our system, how well it scales and what problems it has. And
as VWO grows and becomes a better and better, we will keep working on our
current infrastructure to improve it and adjust it for our needs. We would like
to thank &lt;a href=&quot;http://agentzh.org/&quot;&gt;agentzh (YichunZhang)&lt;/a&gt; for building OpenResty and for helping us
out whenever we were stuck with our implementation.&lt;/p&gt;
&lt;p&gt;We work in a dynamic environment where we collaborate and work towards
architecting scalable and fault-tolerant systems like these. If these kind of
problems and challenges interest you, we will be happy to work with you. &lt;a href=&quot;https://wingify.com/careers&quot;&gt;We
are hiring!&lt;/a&gt;&lt;/p&gt;</content:encoded><author>Ankit Jain</author></item><item><title><![CDATA[We are sponsoring The Fifth Elephant 2014]]></title><description><![CDATA[We are excited to announce our sponsorship of
The Fifth Elephant - a popular conference around
the Big Data ecosystem. The conference will…]]></description><link>https://engineering.wingify.com//posts/sponsoring-fifth-elephant/</link><guid isPermaLink="false">https://engineering.wingify.com//posts/sponsoring-fifth-elephant/</guid><pubDate>Sun, 20 Jul 2014 18:30:00 GMT</pubDate><content:encoded>&lt;p&gt;We are excited to announce our sponsorship of
&lt;a href=&quot;https://fifthelephant.in&quot;&gt;The Fifth Elephant&lt;/a&gt; - a popular conference around
the Big Data ecosystem. The conference will be held in Bangalore, India
from 23rd to 26th July.&lt;/p&gt;
&lt;p&gt;Our engineers will be present at the conference. If you are &lt;a href=&quot;http://github.com/wingify&quot;&gt;interested in our
work&lt;/a&gt;, want to know more about what we are doing,
want to work with us (&lt;a href=&quot;http://wingify.com/careers&quot;&gt;we&apos;re hiring&lt;/a&gt;), get some
cool goodies or just want to say Hi!, please visit our booth (B7) or catch any
of our team members. We’d love to talk to you!&lt;/p&gt;
&lt;p&gt;We look forward to meeting you in Bangalore!&lt;/p&gt;</content:encoded><author>Vaidik Kapoor</author></item><item><title><![CDATA[Fast Storage with RocksDB]]></title><description><![CDATA[In November last year, I started developing an infrastructure that would allow us to
collect, store, search and retrieve high volume data…]]></description><link>https://engineering.wingify.com//posts/fast-storage-with-rocksdb/</link><guid isPermaLink="false">https://engineering.wingify.com//posts/fast-storage-with-rocksdb/</guid><pubDate>Thu, 12 Jun 2014 18:30:00 GMT</pubDate><content:encoded>&lt;p&gt;In November last year, I started developing an infrastructure that would allow us to
collect, store, search and retrieve high volume data. The idea was
to collect all the URLs on which our &lt;a href=&quot;https://visualwebsiteoptimizer.com/split-testing-blog/geo-distributed-architecture/&quot;&gt;homegrown CDN&lt;/a&gt;
would serve JS content. Based on our current traffic, we were looking to collect some 10k URLs per
second across four major geographic regions where we run our servers.&lt;/p&gt;
&lt;p&gt;In the beginning we tried MySQL, Redis, Riak, CouchDB, MongoDB, ElasticSearch but
nothing worked out for us with that kind of high speed writes. We also wanted our
system to respond very quickly, under 40ms between
internal servers on private network. This post talks about how we were able to
make such a system using C++11, &lt;a href=&quot;http://rocksdb.org&quot;&gt;RocksDB&lt;/a&gt; and &lt;a href=&quot;http://thrift.apache.org&quot;&gt;Thrift&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;First, let me start by sharing the use cases of such a system in VWO; the
following screenshot shows a feature where users can enter a URL to check if VWO
Smart Code was installed on it.&lt;/p&gt;
&lt;div style=&quot;text-align:center; margin:5px&quot;&gt;
&lt;img src=&quot;/images/2014/06/0.png&quot;&gt;&lt;br&gt;
&lt;p&gt;VWO Smart Code checker&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;The following screenshot shows another feature where users can see a list of URLs
matching a complex wildcard pattern, regex pattern, string rule etc. while
creating a campaign.&lt;/p&gt;
&lt;div style=&quot;text-align:center; margin:5px&quot;&gt;
&lt;img src=&quot;/images/2014/06/1.png&quot;&gt;&lt;br&gt;
&lt;p&gt;VWO URL Matching Helper&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;I &lt;a href=&quot;http://kkovacs.eu/cassandra-vs-mongodb-vs-couchdb-vs-redis&quot;&gt;reviewed&lt;/a&gt;
several opensource databases but none of them would fit our requirements except
Cassandra. In clustered deployment, reads from Cassandra were too slow and slower
when data size would grew. After understanding how Cassandra worked under the
hood such as its log structured storage like LevelDB I started playing with opensource
embeddable databases that would use similar approach such as LevelDB and Kyoto Cabinet.
At the time, I found an embeddable persistent key-value store
library built on LevelDB called &lt;a href=&quot;http://rocksdb.org&quot;&gt;RocksDB&lt;/a&gt;.
It was opensourced by Facebook and had a fairly active developer community so I
started &lt;a href=&quot;https://github.com/facebook/rocksdb/tree/master/examples&quot;&gt;playing&lt;/a&gt;
with it. I read the &lt;a href=&quot;https://github.com/facebook/rocksdb/wiki&quot;&gt;project wiki&lt;/a&gt;,
wrote some working code and joined their Facebook group to ask questions around
prefix lookup. The community was helpful, especially Igor and
Siying who gave me &lt;a href=&quot;https://www.facebook.com/groups/rocksdb.dev/permalink/506160312815821/&quot;&gt;enough hints&lt;/a&gt;
around &lt;a href=&quot;https://github.com/facebook/rocksdb/wiki/Prefix-Seek-API-Changes&quot;&gt;prefix lookup&lt;/a&gt;,
using custom &lt;a href=&quot;https://github.com/facebook/rocksdb/wiki/Hash-based-memtable-implementations&quot;&gt;extractors&lt;/a&gt;
and &lt;a href=&quot;http://en.wikipedia.org/wiki/Bloom_filter&quot;&gt;bloom filters&lt;/a&gt; which helped me
write something that actually worked in our production environment for the first time.
Explaining the technology and jargons is out of scope of this post but I would like
to encourage the readers to read
&lt;a href=&quot;http://google-opensource.blogspot.in/2011/07/leveldb-fast-persistent-key-value-store.html&quot;&gt;about&lt;/a&gt;
&lt;a href=&quot;https://code.google.com/p/leveldb/&quot;&gt;LevelDB&lt;/a&gt; and to read the RocksDB &lt;a href=&quot;https://github.com/facebook/rocksdb/wiki&quot;&gt;wiki&lt;/a&gt;.&lt;/p&gt;
&lt;div style=&quot;text-align:center; margin:5px&quot;&gt;
&lt;img src=&quot;/images/2014/06/2.png&quot;&gt;&lt;br&gt;
&lt;p&gt;RocksDB FB Group&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;For capturing the URLs with peak velocity up to 10k serves/s, I reused our
&lt;a href=&quot;/scaling-with-queues/&quot;&gt;distributed queue based infrastructure&lt;/a&gt;.
For storage, search and retrieval of URLs I wrote a custom datastore service
using C++, RocksDB and Thrift called &lt;em&gt;HarvestDB&lt;/em&gt;. &lt;a href=&quot;http://thrift.apache.org/&quot;&gt;Thrift&lt;/a&gt;
provided the &lt;a href=&quot;http://en.wikipedia.org/wiki/Remote_procedure_call&quot;&gt;RPC&lt;/a&gt; mechanism
for implementing this system as a distributed service accessible by various
backend sub-systems. The backend sub-systems use client libraries
&lt;a href=&quot;http://thrift.apache.org/tutorial&quot;&gt;generated by Thrift compiler&lt;/a&gt; for communicating
with the &lt;em&gt;HarvestDB&lt;/em&gt; server.&lt;/p&gt;
&lt;p&gt;The &lt;em&gt;HarvestDB&lt;/em&gt; service implements five remote procedures - ping, get,
put, search and purge. The following &lt;a href=&quot;http://thrift.apache.org/docs/idl&quot;&gt;Thrift IDL&lt;/a&gt;
describes this service.&lt;/p&gt;
&lt;p&gt;{% highlight cpp %}&lt;/p&gt;
&lt;p&gt;namespace cpp harvestdb
namespace go harvestdb
namespace py harvestdb
namespace php HarvestDB&lt;/p&gt;
&lt;p&gt;struct Url {
1: required i64    timestamp;
2: required string url;
3: required string version;
}&lt;/p&gt;
&lt;p&gt;typedef list&lt;Url&gt; UrlList&lt;/p&gt;
&lt;p&gt;struct UrlResult {
1: required i32          prefix;
2: required i32          found;
3: required i32          total;
4: required list&lt;string&gt; urls;
}&lt;/p&gt;
&lt;p&gt;service HarvestDB {
bool ping(),
Url get(1:i32 prefix, 2:string url),
bool put(1:i32 prefix, 2:Url url),
UrlResult search(1:i32 prefix,
2:string includeRegex,
3:string excludeRegex,
4:i32 size,
5:i32 timeout),
bool purge(1:i32 prefix, 2:i64 timestamp)
}
{% endhighlight %}&lt;/p&gt;
&lt;p&gt;Clients use &lt;code class=&quot;language-text&quot;&gt;ping&lt;/code&gt; to check &lt;em&gt;HarvestDB&lt;/em&gt; server connectivity before executing
other procedures. RabbitMQ consumers consume collected URLs and &lt;code class=&quot;language-text&quot;&gt;put&lt;/code&gt; them to
&lt;em&gt;HarvestDB&lt;/em&gt;. The PHP based application backend uses custom Thrift based client
library to &lt;code class=&quot;language-text&quot;&gt;get&lt;/code&gt; (read) and to &lt;code class=&quot;language-text&quot;&gt;search&lt;/code&gt; URLs.
A Python program runs as a periodic cron job and uses &lt;code class=&quot;language-text&quot;&gt;purge&lt;/code&gt; procedure to purge old entries
based on timestamp which makes sure we don&apos;t exhaust our storage
resources. The system is in production for more than five months now and is
capable of handling (benchmarked) workload of up to 24k writes/second while consuming
less than 500MB RAM. Our future work will be on replication, sharding and fault
tolerance of this service. The following diagram illustrates this architecture.&lt;/p&gt;
&lt;div style=&quot;text-align:center; margin:5px&quot;&gt;
&lt;img src=&quot;/images/2014/06/3.png&quot;&gt;&lt;br&gt;
&lt;p&gt;Overall architecture&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;&lt;a href=&quot;https://news.ycombinator.com/item?id=7899353&quot;&gt;Discussion on Hacker News&lt;/a&gt;&lt;/p&gt;</content:encoded><author>Rohit Yadav</author></item><item><title><![CDATA[Automated e2e testing- WebDriverJS, Jasmine and Protractor]]></title><description><![CDATA[e2e or end-to-end or UI testing is a methodology used to test whether the flow of an application is performing as designed from start to…]]></description><link>https://engineering.wingify.com//posts/e2e-testing-with-webdriverjs-jasmine/</link><guid isPermaLink="false">https://engineering.wingify.com//posts/e2e-testing-with-webdriverjs-jasmine/</guid><pubDate>Mon, 25 Nov 2013 18:30:00 GMT</pubDate><content:encoded>&lt;p&gt;e2e or end-to-end or UI testing is a methodology used to test whether the flow of an application is performing as designed from start to finish. In simple words, it is testing of your application from the user endpoint where the whole system is a blackbox with only the UI exposed to the user.&lt;/p&gt;
&lt;p&gt;It can become quite an overhead if done manually and if your application has a large number of interactions/pages to test.&lt;/p&gt;
&lt;p&gt;In the rest of the article I&apos;ll talk about webdriverJS and Jasmine to automate your e2e testing, a combination which isn&apos;t talked about much on the web.&lt;/p&gt;
&lt;h2 id=&quot;what-is-webdriverjs&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#what-is-webdriverjs&quot; aria-label=&quot;what is webdriverjs permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;What is WebDriverJS?&lt;/h2&gt;
&lt;p&gt;This was something which took me quite sometime to put my head around and I feel this was more or less due to the various available options for everything related to WebDriver.&lt;/p&gt;
&lt;p&gt;So let&apos;s take it from the top and see what its all about.&lt;/p&gt;
&lt;h3 id=&quot;selenium&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#selenium&quot; aria-label=&quot;selenium permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Selenium&lt;/h3&gt;
&lt;p&gt;As mentioned on the &lt;a href=&quot;http://www.seleniumhq.org/&quot;&gt;selenium website&lt;/a&gt;, Selenium automates browsers. That&apos;s it.&lt;/p&gt;
&lt;p&gt;This having support for almost all major browsers, is a very good alternative to automate our tests in the browser.
So whatever you do in the browser while testing your application, like navigating to pages, clicking a button, writing text in input boxes, submitting forms etc, can be automated using Selenium.&lt;/p&gt;
&lt;h3 id=&quot;webdriver&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#webdriver&quot; aria-label=&quot;webdriver permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;WebDriver&lt;/h3&gt;
&lt;p&gt;WebDriver (or Selenium 2) basically refers to the language bindings and the implementations of the individual browser controlling code.&lt;/p&gt;
&lt;p&gt;WebDriver introduces a &lt;a href=&quot;https://code.google.com/p/selenium/wiki/JsonWireProtocol&quot;&gt;JSON wire protocol&lt;/a&gt; for various language bindings to communicate with the browser controller.&lt;/p&gt;
&lt;p&gt;For example, to click an element in the browser, the binding will send POST request on &lt;code class=&quot;language-text&quot;&gt;/session/:sessionId/element/:id/click&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;So, at one end there is the language binding and a server, known as Selenium server, on the other. Both communicate using the JSON wire protocol.&lt;/p&gt;
&lt;h3 id=&quot;webdriverjs&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#webdriverjs&quot; aria-label=&quot;webdriverjs permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;WebDriverJS&lt;/h3&gt;
&lt;p&gt;As mentioned, WebDriver has a number of bindings for various languages like Ruby, Python etc. JavaScript being the language of choice for the web, is the latest one to make it to the list. Enter &lt;a href=&quot;https://code.google.com/p/selenium/wiki/WebDriverJs&quot;&gt;WebDriverJS&lt;/a&gt;!&lt;/p&gt;
&lt;p&gt;So as you might guess, WebDriverJS is simply a wrapper over the JSON wire protocol exposing high level functions to make our life easy.&lt;/p&gt;
&lt;p&gt;Now if you search &lt;strong&gt;webdriver JS&lt;/strong&gt; on the web, you&apos;ll come across 2 different bindings namely &lt;a href=&quot;https://code.google.com/p/selenium/wiki/WebDriverJs&quot;&gt;&lt;em&gt;selenium-webdriver&lt;/em&gt;&lt;/a&gt; and &lt;a href=&quot;https://github.com/camme/webdriverjs&quot;&gt;&lt;em&gt;webdriverjs&lt;/em&gt;&lt;/a&gt; (yeah, lots of driver), both available as node modules. You can use anyone you like, though we&apos;ll stick to the official one i.e. &lt;em&gt;selenium-webdriver&lt;/em&gt;.&lt;/p&gt;
&lt;p&gt;Say you have a JavaScript project you want to automate e2e testing on. Installing the bindings is as simple as doing:&lt;/p&gt;
&lt;p&gt;{% highlight bash %}
npm install selenium-webdriver
{% endhighlight %}&lt;/p&gt;
&lt;p&gt;Done! You can now require the package and with a lil&apos; configuration you can open any webpage in the browser:&lt;/p&gt;
&lt;p&gt;{% highlight javascript %}
var webdriver = require(&apos;selenium-webdriver&apos;);&lt;/p&gt;
&lt;p&gt;var driver = new webdriver.Builder().
withCapabilities(webdriver.Capabilities.chrome()).
build();&lt;/p&gt;
&lt;p&gt;driver.get(&apos;&lt;a href=&quot;http://www.wingify.com&amp;#x27;&quot;&gt;http://www.wingify.com&apos;&lt;/a&gt;);
{% endhighlight %}&lt;/p&gt;
&lt;p&gt;To run your test file, all you do is:&lt;/p&gt;
&lt;p&gt;{% highlight bash %}
node testfile.js
{% endhighlight %}&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Note&lt;/strong&gt;: In addition to the npm package, you will need to download the WebDriver implementations you wish to utilize. As of 2.34.0, selenium-webdriver natively supports the &lt;a href=&quot;https://code.google.com/p/selenium/wiki/ChromeDriver&quot;&gt;ChromeDriver&lt;/a&gt;. Simply &lt;a href=&quot;http://chromedriver.storage.googleapis.com/index.html&quot;&gt;download a copy&lt;/a&gt; and make sure it can be found on your PATH. The other drivers (e.g. Firefox, Internet Explorer, and Safari), still require the &lt;a href=&quot;http://selenium.googlecode.com/files/selenium-server-standalone-2.37.0.jar&quot;&gt;standalone Selenium server&lt;/a&gt;.&lt;/p&gt;
&lt;h3 id=&quot;difference-from-other-language-bindings&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#difference-from-other-language-bindings&quot; aria-label=&quot;difference from other language bindings permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Difference from other language bindings&lt;/h3&gt;
&lt;p&gt;WebDriverJS has an important difference from other bindings in any other language - &lt;strong&gt;It is asynchronous&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;So if you had done the following in python:
{% highlight javascript %}
// pseudo code
driver.get(page1);
driver.click(E1);
{% endhighlight %}&lt;/p&gt;
&lt;p&gt;Both statements would have executed synchronously as the Python (as every other language) API is blocking. But that isn&apos;t the case with JavaScript. To maintain the required sequence between various actions, WebDriverJS uses &lt;a href=&quot;https://code.google.com/p/selenium/source/browse/javascript/webdriver/promise.js&quot;&gt;Promises&lt;/a&gt;. In short, a promise is an object that can execute whatever you give it after it has finished.&lt;/p&gt;
&lt;p&gt;But it doesn&apos;t stop here. Even with promises, the above code would have become:&lt;/p&gt;
&lt;p&gt;{% highlight javascript %}
// pseudo code
driver.get(page1).then(function () {
driver.click(E1);
});
{% endhighlight %}&lt;/p&gt;
&lt;p&gt;Do you smell callback hell in there? To make it more neat, WebDriverJS has a wrapper for Promise called as &lt;a href=&quot;https://code.google.com/p/selenium/wiki/WebDriverJs#Control_Flows&quot;&gt;&lt;strong&gt;ControlFlow&lt;/strong&gt;&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;In simple words, this is how &lt;em&gt;ControlFlow&lt;/em&gt; prevents callback hell:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;It maintains a list of schedule actions.&lt;/li&gt;
&lt;li&gt;The exposed functions in WebDriverJS do not actually do their stuff, instead they just push the required action into the above mentioned list.&lt;/li&gt;
&lt;li&gt;&lt;em&gt;ControlFlow&lt;/em&gt; puts every new entry in the &lt;code class=&quot;language-text&quot;&gt;then&lt;/code&gt; callback of the last entry of the list, thus ensuring the sequence between them.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;And so, it enables us to simply do:&lt;/p&gt;
&lt;p&gt;{% highlight javascript %}
// pseudo code
driver.get(page1);
// Implicitly add to previous action&apos;s then()
driver.click(E1);
{% endhighlight %}&lt;/p&gt;
&lt;p&gt;Isn&apos;t that awesome!&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Controlflow&lt;/em&gt; also provides an &lt;code class=&quot;language-text&quot;&gt;execute&lt;/code&gt; function to push your custom function inside the execution list and the return value of that function is used to resolve/reject that particular execution. So you can use promises and do any asynchronous thing in your custom code:&lt;/p&gt;
&lt;p&gt;{% highlight javascript %}
var flow = webdriver.promise.controlFlow();&lt;/p&gt;
&lt;p&gt;flow.execute(function () {
var d = webdriver.promise.defer();
do&lt;em&gt;anything&lt;/em&gt;async().then(function (val) {
d.fulfill(val);
})
return d.promise;
});
{% endhighlight %}&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Quick tip&lt;/strong&gt;: Documentation for JavaScript bindings isn&apos;t that readily available (atleast I couldn&apos;t find it), so the best thing I found to be useful was the actual &lt;a href=&quot;https://code.google.com/p/selenium/source/browse/javascript/webdriver/&quot;&gt;WebDriverJS code&lt;/a&gt;. It heavily commented and is very handy while looking for specific methods on the driver.&lt;/p&gt;
&lt;h2 id=&quot;combining-webdriverjs-with-jasmine&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#combining-webdriverjs-with-jasmine&quot; aria-label=&quot;combining webdriverjs with jasmine permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Combining WebDriverJS with Jasmine&lt;/h2&gt;
&lt;p&gt;Our browser automation is setup with selenium. Now we need a testing framework to handle our tests. That is where &lt;a href=&quot;http://pivotal.github.io/jasmine/&quot;&gt;Jasmine&lt;/a&gt; comes in.&lt;/p&gt;
&lt;p&gt;You can install jasmine for your JavaScript project through npm:
{% highlight bash %}
npm install jasmine-node
{% endhighlight %}&lt;/p&gt;
&lt;p&gt;If we were to convert our earlier &lt;code class=&quot;language-text&quot;&gt;testfile.js&lt;/code&gt; to check for correct page title, here is what it might look like:&lt;/p&gt;
&lt;p&gt;{% highlight javascript %}
var webdriver = require(&apos;selenium-webdriver&apos;);&lt;/p&gt;
&lt;p&gt;var driver = new webdriver.Builder().
withCapabilities(webdriver.Capabilities.chrome()).
build();&lt;/p&gt;
&lt;p&gt;describe(&apos;basic test&apos;, function () {
it(&apos;should be on correct page&apos;, function () {
driver.get(&apos;&lt;a href=&quot;http://www.wingify.com&amp;#x27;&quot;&gt;http://www.wingify.com&apos;&lt;/a&gt;);
driver.getTitle().then(function(title) {
expect(title).toBe(&apos;Wingify&apos;);
});
});
});
{% endhighlight %}&lt;/p&gt;
&lt;p&gt;Now the above file needs to be run with &lt;a href=&quot;https://github.com/mhevery/jasmine-node&quot;&gt;jasmine-node&lt;/a&gt;, like so:&lt;/p&gt;
&lt;p&gt;{% highlight bash %}
jasmine-node testfile.js
{% endhighlight %}&lt;/p&gt;
&lt;p&gt;This will fire the browser and do the mentioned operations, but you&apos;ll notice that Jasmine won&apos;t give any results for the test. Why?&lt;/p&gt;
&lt;p&gt;Well...that happens because Jasmine has finished executing and no &lt;code class=&quot;language-text&quot;&gt;expect&lt;/code&gt; statement ever executed because of the expectation being inside an asynchronous callback of &lt;code class=&quot;language-text&quot;&gt;getTitle&lt;/code&gt; function.&lt;/p&gt;
&lt;p&gt;To solve such asynchronicity in our tests, jasmine-node provides a way to tell that a particular &lt;code class=&quot;language-text&quot;&gt;it&lt;/code&gt; block is asynchronous. It is done by accepting a done callback in the specification (&lt;code class=&quot;language-text&quot;&gt;it&lt;/code&gt; function) which makes Jasmine wait for the &lt;code class=&quot;language-text&quot;&gt;done()&lt;/code&gt; to be executed. So here is how we fix the above code:&lt;/p&gt;
&lt;p&gt;{% highlight javascript %}
var webdriver = require(&apos;selenium-webdriver&apos;);&lt;/p&gt;
&lt;p&gt;var driver = new webdriver.Builder().
withCapabilities(webdriver.Capabilities.chrome()).
build();&lt;/p&gt;
&lt;p&gt;describe(&apos;basic test&apos;, function () {
it(&apos;should be on correct page&apos;, function (done) {
driver.get(&apos;&lt;a href=&quot;http://www.wingify.com&amp;#x27;&quot;&gt;http://www.wingify.com&apos;&lt;/a&gt;);
driver.getTitle().then(function(title) {
expect(title).toBe(&apos;Wingify&apos;);
// Jasmine waits for the done callback to be called before proceeding to next specification.
done();
});
});
});
{% endhighlight %}&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Quick tip&lt;/strong&gt;: You might want to tweak the time allowed for tests to complete in Jasmine like so:&lt;/p&gt;
&lt;p&gt;{% highlight javascript %}
jasmine.getEnv().defaultTimeoutInterval = 10000; // in microseconds.
{% endhighlight %}&lt;/p&gt;
&lt;h2 id=&quot;bonus-for-angular-apps&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#bonus-for-angular-apps&quot; aria-label=&quot;bonus for angular apps permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Bonus for Angular apps&lt;/h2&gt;
&lt;p&gt;Angular framework has been very testing focused since the very beginning. Needless to say, they have devoted a lot of time on e2e testing as well.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/angular/protractor&quot;&gt;Protractor&lt;/a&gt; is a library by the Angular team which is a wrapper on WebDriverJS and Jasmine and is specifically tailored to make testing of Angular apps a breeze.&lt;/p&gt;
&lt;p&gt;Checkout some of the neat addons it gives you:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Apart from querying element based on id, css selector, xpath etc, it lets you query on basis of binding, model, repeater etc. Sweet!&lt;/li&gt;
&lt;li&gt;It has Jasmine&apos;s &lt;code class=&quot;language-text&quot;&gt;expect&lt;/code&gt; function patched to accept promises. So, for example, in our previous test where we were checking for title:&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;{% highlight javascript %}
driver.getTitle().then(function (title) {
expect(title).toBe(&apos;Wingify&apos;);
});
{% endhighlight %}&lt;/p&gt;
&lt;p&gt;can be refactored to a much cleaner:&lt;/p&gt;
&lt;p&gt;{% highlight javascript %}
expect(driver.getTitle()).toBe(&apos;Wingify&apos;);
{% endhighlight %}&lt;/p&gt;
&lt;p&gt;And more such cool stuff to make end-to-end testing for Angular apps super-easy.&lt;/p&gt;
&lt;h2 id=&quot;in-the-end&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#in-the-end&quot; aria-label=&quot;in the end permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;In the end&lt;/h2&gt;
&lt;p&gt;e2e testing is important for the apps being written today and hence it becomes important for it to be automated and at the same time fun and easy to perform. There are numerous tools available for you to choose and this article talks about one such tool combination.&lt;/p&gt;
&lt;p&gt;Hope this helps you get started. So what are you waiting for, lets write some end-to-end tests!&lt;/p&gt;
&lt;p&gt;Using an e2e testing stack you want to share? Let us know in the comments.&lt;/p&gt;
&lt;h2 id=&quot;links--references&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#links--references&quot; aria-label=&quot;links  references permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Links &amp;#x26; references&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;WebDriverJS user guide: &lt;a href=&quot;https://code.google.com/p/selenium/wiki/WebDriverJs&quot;&gt;https://code.google.com/p/selenium/wiki/WebDriverJs&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;WebDriverJS source: &lt;a href=&quot;https://code.google.com/p/selenium/source/browse/javascript/webdriver/&quot;&gt;https://code.google.com/p/selenium/source/browse/javascript/webdriver/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;JSON wire protocol: &lt;a href=&quot;https://code.google.com/p/selenium/wiki/JsonWireProtocol&quot;&gt;https://code.google.com/p/selenium/wiki/JsonWireProtocol&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Jasmine: &lt;a href=&quot;http://pivotal.github.io/jasmine/&quot;&gt;http://pivotal.github.io/jasmine/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;jasmine-node: &lt;a href=&quot;https://github.com/mhevery/jasmine-node&quot;&gt;https://github.com/mhevery/jasmine-node&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Protractor: &lt;a href=&quot;https://github.com/angular/protractor&quot;&gt;https://github.com/angular/protractor&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content:encoded><author>Kushagra Gour</author></item><item><title><![CDATA[Scaling with Queues]]></title><description><![CDATA[Our home-grown geo-distributed architecture
based CDN allows us to delivery dynamic javascript content with minimum
latencies possible…]]></description><link>https://engineering.wingify.com//posts/scaling-with-queues/</link><guid isPermaLink="false">https://engineering.wingify.com//posts/scaling-with-queues/</guid><pubDate>Sun, 01 Sep 2013 18:30:00 GMT</pubDate><content:encoded>&lt;p&gt;Our home-grown &lt;a href=&quot;http://visualwebsiteoptimizer.com/split-testing-blog/geo-distributed-architecture/&quot;&gt;geo-distributed architecture&lt;/a&gt;
based CDN allows us to delivery dynamic javascript content with minimum
latencies possible. Using the same architecture we do data acquisition as well.
Over the years we&apos;ve done a lot of changes to our backend, this post talks
about some scaling and reliability aspects and our recent work on making fast and
reliable data acquisition system using message queues which is in production for
about three months now. I&apos;ll start by giving some background on our previous
architecture.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://en.wikipedia.org/wiki/Web_bug&quot;&gt;Web beacons&lt;/a&gt; are widely used to do data
acquisition, the idea is to have a webpage send us data using an HTTP request
and the server sends some valid object. There are many ways to do this. To keep
the size of the returned object small, for every HTTP request we
return a tiny 1x1 pixel gif image and our geo-distributed architecture along with
our managed Anycast DNS service helps us to do this with very low latencies,
we aim for less than 40ms. When an HTTP request hits one of our data acquisition servers, &lt;a href=&quot;http://openresty.org&quot;&gt;OpenResty&lt;/a&gt;
handles it and our Lua based code processes the request in the same process thread.
OpenResty is a &lt;code class=&quot;language-text&quot;&gt;nginx&lt;/code&gt; mod which among many things bundles &lt;code class=&quot;language-text&quot;&gt;luajit&lt;/code&gt; that allows
us to write URL handlers in Lua and the code runs within the web server. Our Lua code
does some quick checks, transformations and writes the data to a &lt;a href=&quot;http://redis.io&quot;&gt;Redis&lt;/a&gt;
server which is used as fast in-memory data sink. The data stored in Redis is
later moved, processed and stored in our database servers.&lt;/p&gt;
&lt;div style=&quot;text-align:center; margin:5px&quot;&gt;
&lt;img src=&quot;/images/2013/09/0.png&quot;&gt;&lt;br&gt;
&lt;p&gt;Previous Architecture&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;This was the architecture when I had &lt;a href=&quot;http://team.wingify.com/friday-engineering-talks-at-wingify&quot;&gt;joined&lt;/a&gt;
Wingify couple of months ago. Things were going smooth but the problem was we were
not quite sure about data accuracy and scalability. We used Redis as a fast
in-memory data storage sink, which our custom written PHP based queue infrastructure
would read from, our backend would process it and write to our database servers.
The PHP code was not scalable and after about a week of hacking, exploring options
we found few bottlenecks and decided to re-do the backend queue infrastructure.&lt;/p&gt;
&lt;p&gt;We explored many &lt;a href=&quot;http://queues.io&quot;&gt;options&lt;/a&gt; and decided to use &lt;a href=&quot;http://www.rabbitmq.com&quot;&gt;RabbitMQ&lt;/a&gt;.
We wrote a few proof-of-concept backend programs in Go, Python and PHP and
did a lot of testing, benchmarking and real-world &lt;a href=&quot;http://loader.io&quot;&gt;load testing&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Ankit, Sparsh and I discussed how we should move forward and we finally
decided to explore two models in which we would replace the home-grown PHP queue
system with RabbitMQ. In the first model, we wrote directly to RabbitMQ from the
Lua code. In the second model, we wrote a transport agent which moved data from Redis
to RabbitMQ. And we wrote RabbitMQ consumers in both cases.&lt;/p&gt;
&lt;p&gt;There was no Lua-resty library for RabbitMQ, so I wrote one using &lt;code class=&quot;language-text&quot;&gt;cosocket&lt;/code&gt; APIs
which could publish messages to a RabbitMQ broker over STOMP protocol. The library
&lt;a href=&quot;https://github.com/wingify/lua-resty-rabbitmqstomp&quot;&gt;lua-resty-rabbitmqstomp&lt;/a&gt; was
opensourced for the hacker &lt;a href=&quot;https://groups.google.com/forum/?fromgroups#!forum/openresty-en&quot;&gt;community&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Later, I rewrote our Lua handler code using this library and ran a &lt;a href=&quot;http://loader.io&quot;&gt;loader.io&lt;/a&gt;
load test. It failed this model due to very &lt;a href=&quot;http://ldr.io/154Xf1h&quot;&gt;low throughput&lt;/a&gt;,
we performed a load test on a small 1G DigitalOcean instance for both models.
For us, the STOMP protocol
and slow RabbitMQ STOMP adapter were performance bottlenecks. RabbitMQ was not
as fast as Redis, so we decided to keep it and work on the second
model. For our requirements, we wrote a proof-of-concept Redis to RabbitMQ transport
agent called &lt;code class=&quot;language-text&quot;&gt;agentredrabbit&lt;/code&gt; to leverage Redis as a fast in-memory storage sink and
use RabbitMQ as a reliable broker. The &lt;em&gt;POC&lt;/em&gt; worked well in terms of performance,
throughput, scalability and failover. In next few weeks we were able to write a
production level queue based pipeline for our data acquisition system.&lt;/p&gt;
&lt;p&gt;For about a month, we ran the new pipeline in production against the existing one,
to A/B test our backend :) To do that we modified our Lua code to write to two
different Redis lists, the original list was consumed by the existing pipeline, the other was
consumed by the new RabbitMQ based pipeline. The consumer would process and write
data to a new database. This allowed us to compare realtime data from the two
pipelines. During this period we tweaked our implementation a lot, rewrote the
producers and consumers thrice and had two major phases of refactoring.&lt;/p&gt;
&lt;div style=&quot;text-align:center; margin:5px&quot;&gt;
&lt;img src=&quot;/images/2013/09/1.png&quot;&gt;&lt;br&gt;
&lt;p&gt;A/B testing of existing and new architecture&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;Based on &lt;a href=&quot;http://ldr.io/1565jPu&quot;&gt;results&lt;/a&gt; against a 1G DigitalOcean instance like
for the first model and against the A/B comparison of existing pipeline in realtime,
we migrated to the new pipeline based on RabbitMQ. Other issues of HA,
redundancy and failover were addressed in this migration as well.
The new architecture ensures no single point of failure and has mechanisms to
recover from failure and fault.&lt;/p&gt;
&lt;div style=&quot;text-align:center; margin:5px&quot;&gt;
&lt;img src=&quot;/images/2013/09/2.png&quot;&gt;&lt;br&gt;
&lt;p&gt;Queue (RabbitMQ) based architecture in production&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;We&apos;ve &lt;a href=&quot;https://github.com/wingify/agentredrabbit&quot;&gt;opensourced &lt;code class=&quot;language-text&quot;&gt;agentredrabbit&lt;/code&gt;&lt;/a&gt;
which can be used as a general purpose fast and reliable transport agent for
moving data in chunks from Redis lists to RabbitMQ with some assumptions and queue
name conventions. The flow diagram below has hints on how it works, checkout the
&lt;a href=&quot;https://github.com/wingify/agentredrabbit&quot;&gt;README for details&lt;/a&gt;.&lt;/p&gt;
&lt;div style=&quot;text-align:center; margin:5px&quot;&gt;
&lt;img src=&quot;/images/2013/09/3.png&quot;&gt;&lt;br&gt;
&lt;p&gt;Flow diagram of &quot;agentredrabbit&quot;&lt;/p&gt;
&lt;/div&gt;
&lt;br&gt;
[Discussion on Hacker News](https://news.ycombinator.com/item?id=6359786)</content:encoded><author>Rohit Yadav</author></item><item><title><![CDATA[Internship experience @Wingify]]></title><description><![CDATA[When I got an opportunity of interning with the engineering team at Wingify it made me ecstatic because of an exciting office with…]]></description><link>https://engineering.wingify.com//posts/internship-experience-at-wingify/</link><guid isPermaLink="false">https://engineering.wingify.com//posts/internship-experience-at-wingify/</guid><pubDate>Sun, 04 Aug 2013 18:30:00 GMT</pubDate><content:encoded>&lt;p&gt;When I got an opportunity of interning with the engineering team at Wingify it made me ecstatic because of an exciting office with fascinating transparent walls full of geeky stuff, I came across on my first visit for an interview — and of course Wingify is a becoming a buzz word in IT industry.&lt;/p&gt;
&lt;p&gt;On my first day I was a bit nervous, dressed and prepared as I believed anyone working from 10:00 am to 7:00 pm would. When I reached the office only the office boy was present — honestly speaking I had a feeling that I am at a wrong place because there was no way a software company should look like at 10:30 in the morning on a working day. After a while I was surrounded by people in shorts, denims, t-shirts with smiling faces having friendly chats.&lt;/p&gt;
&lt;p&gt;Working at Wingify provided me with an entirely new set of skills like software development design patterns and maintenance that is going to be invaluable for my future. My work here mainly included front-end optimization and internationalization.&lt;/p&gt;
&lt;h3 id=&quot;frontend-optimization-of-visual-website-optimizer-website&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#frontend-optimization-of-visual-website-optimizer-website&quot; aria-label=&quot;frontend optimization of visual website optimizer website permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Frontend optimization of &lt;a href=&quot;http://visualwebsiteoptimizer.com/&quot;&gt;Visual Website Optimizer&lt;/a&gt; website.&lt;/h3&gt;
&lt;div class=&quot;img-wrapper&quot;&gt;
&lt;video width=&quot;500&quot; height=&quot;320&quot; controls=&quot;true&quot;&gt;
&lt;source src=&quot;/videos/vwo-optimize.mp4&quot; type=&quot;video/mp4&quot;&gt;&lt;/source&gt;
&lt;source src=&quot;/videos/vwo-optimize.ogg&quot; type=&quot;video/ogg&quot;&gt;&lt;/source&gt;
Your browser does not support the video tag.
&lt;/video&gt;
&lt;/div&gt;
&lt;p&gt;Reduced the loading time by 62.16%.&lt;/p&gt;
&lt;h3 id=&quot;translation-of-visual-website-optimizer-website&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#translation-of-visual-website-optimizer-website&quot; aria-label=&quot;translation of visual website optimizer website permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Translation of &lt;a href=&quot;http://visualwebsiteoptimizer.com/&quot;&gt;Visual Website Optimizer&lt;/a&gt; website.&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://visualwebsiteoptimizer.jp&quot; title=&quot;Japanese&quot;&gt;日本語&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://visualwebsiteoptimizer.nl&quot; title=&quot;Dutch&quot;&gt;Nederlands&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://visualwebsiteoptimizer.cn&quot; title=&quot;Chinese&quot;&gt;中国的&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Worked on template based engine for the translation of web pages in different languages.&lt;/p&gt;
&lt;p&gt;I worked along with the marketing team, and this added an additional dimension to my work by interdependent relationship. I also spent my time researching and learning different methods and technologies for various things such as process automation. All these roles and responsibilities taught me to manage time, being attentive and organized, and enhanced problem-solving abilities.&lt;/p&gt;
&lt;p&gt;At Wingify you have the solidarity and independence of your own space and an atmosphere where interns like myself would not hesitate to ask questions as they are answered and explained by highly skilled and dedicated engineering team sitting next to you, which makes it easy to get work done. Awesome appreciation mails boost you up with confidence. Personally, I couldn&apos;t have imagined a better internship experience.&lt;/p&gt;
&lt;p&gt;Interning with Wingify provides you with a wonderful learning experience. In a nutshell, it is a great place to work and party \m/&lt;/p&gt;</content:encoded><author>Vivek Kishore</author></item><item><title><![CDATA[Getting 60 FPS using Chrome devtools]]></title><description><![CDATA[This post is about making your web page perform better using a
real world example. As you know, we recently launched a very cool animated…]]></description><link>https://engineering.wingify.com//posts/getting-60fps-using-devtools/</link><guid isPermaLink="false">https://engineering.wingify.com//posts/getting-60fps-using-devtools/</guid><pubDate>Sun, 28 Jul 2013 18:30:00 GMT</pubDate><content:encoded>&lt;p&gt;This post is about making your web page perform better using a
real world example. As you know, we recently launched a very cool &lt;a href=&quot;https://visualwebsiteoptimizer.com/what-is-ab-testing/&quot;&gt;animated
comic on A/B Testing&lt;/a&gt;.
It is scroll animation describing what is A/B testing. I&apos;ll talk about
it as an example and walk you through its performance issues, how we
debugged them and finally what we did to extract 60 FPS out of it.&lt;/p&gt;
&lt;p&gt;The process we see in following text will applies more or less to all web pages in
general. Here&apos;s what you need to get started:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;A &lt;a href=&quot;http://jankfree.org/&quot;&gt;janky&lt;/a&gt; web page.&lt;/li&gt;
&lt;li&gt;Google Chrome with its awesome devtools.&lt;/li&gt;
&lt;li&gt;Determination to make it run as smooth as a hot knife through butter :)&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Worry not if you are missing any of the above, you can still read on. Let us begin.&lt;/p&gt;
&lt;h2 id=&quot;what-is-causing-the-issue&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#what-is-causing-the-issue&quot; aria-label=&quot;what is causing the issue permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;WHAT is causing the issue?&lt;/h2&gt;
&lt;p&gt;All we know now is that our page is janky. When you scroll up/down
you&apos;ll notice that the animation is quite choppy. There are sudden jumps
occasionally while scrolling which is really irritating and obviously a bad user
experience. We don&apos;t know what is causing this. The very first step we take here
is profile the page using Chrome devtool&apos;s
&lt;a href=&quot;https://developers.google.com/chrome-developer-tools/docs/timeline&quot;&gt;Timeline&lt;/a&gt;
feature. So I went on and fired up my devtools.&lt;/p&gt;
&lt;h3 id=&quot;open-the-devtools&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#open-the-devtools&quot; aria-label=&quot;open the devtools permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Open the devtools&lt;/h3&gt;
&lt;div class=&quot;img-wrapper&quot;&gt;
  &lt;img src=&quot;/images/2013/07/devtools.png&quot; alt=&quot;Chrome devtools&quot;&gt;
&lt;/div&gt;
&lt;p&gt;Devtools in chrome can be fired either going to &lt;strong&gt;Tools &gt; Developer Tools&lt;/strong&gt; or
using the shortcut &lt;strong&gt;Ctrl + Shift + I&lt;/strong&gt; on Windows/Linux and &lt;strong&gt;Cmd + Opt + I&lt;/strong&gt;
on Mac.&lt;/p&gt;
&lt;h3 id=&quot;select-frames-tab&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#select-frames-tab&quot; aria-label=&quot;select frames tab permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Select frames tab&lt;/h3&gt;
&lt;div class=&quot;img-wrapper&quot;&gt;
    &lt;img src=&quot;/images/2013/07/devetools-frames-tab.png&quot; alt=&quot;Frames tab&quot;&gt;
&lt;/div&gt;
&lt;p&gt;Frames tab basically will let us visualize each frame individually showing how much time was taken by that frame and for what tasks.&lt;/p&gt;
&lt;h3 id=&quot;filter-out-events-taking-more-than-15ms&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#filter-out-events-taking-more-than-15ms&quot; aria-label=&quot;filter out events taking more than 15ms permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Filter out events taking more than 15ms&lt;/h3&gt;
&lt;div class=&quot;img-wrapper&quot;&gt;
  &lt;img src=&quot;/images/2013/07/devtools-15ms.png&quot; alt=&quot;Chrome devtools&quot;&gt;
&lt;/div&gt;
&lt;p&gt;Note that we are targeting 60 FPS here. A little math here gives us the number
&lt;em&gt;16.666 ms&lt;/em&gt; (&lt;code class=&quot;language-text&quot;&gt;1 / 60 * 1000&lt;/code&gt;). This is the time budget available per frame to
do its thing if we want a consistent 60 FPS.&lt;/p&gt;
&lt;p&gt;Therefore, we essentially want to investigate those frames which are crossing
this time limit. To do so, select the &lt;strong&gt;&gt;= 15ms&lt;/strong&gt; option from bottom bar as
shown.&lt;/p&gt;
&lt;h3 id=&quot;record&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#record&quot; aria-label=&quot;record permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Record&lt;/h3&gt;
&lt;div class=&quot;img-wrapper&quot;&gt;
  &lt;img src=&quot;/images/2013/07/devtools-record.png&quot; alt=&quot;Chrome devtools&quot;&gt;
&lt;/div&gt;
&lt;p&gt;Press the &apos;Record&apos; button at the bottom to start devtools record what&apos;s happening
on the page. Once you do that, go back to the page and interact with the page
as one would normally do exposing the issues we are trying to debug.&lt;/p&gt;
&lt;p&gt;In my case, the page was feeling choppy while scrolling between slides. So I
simply kept scrolling on the page like a normal user. After interacting for a
while with the page, I get back to the devtools window and press the same button
to stop the recording.&lt;/p&gt;
&lt;h3 id=&quot;notice-the-frames&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#notice-the-frames&quot; aria-label=&quot;notice the frames permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Notice the frames&lt;/h3&gt;
&lt;div class=&quot;img-wrapper&quot;&gt;
  &lt;img src=&quot;/images/2013/07/devtools-initial.png&quot; alt=&quot;Chrome devtools&quot;&gt;
&lt;/div&gt;
&lt;p&gt;You now see the frame data for your page... something like in the snapshot
above. In the image you&apos;ll notice a vertical limit with the label 60 FPS just
below the label for 30 FPS. These limits are for the frames under which they
need to do their stuff if the respective framerate is to be achieved. Once you
know this, you&apos;ll straight away conclude that almost all of our frames our
crossing that limit like hell! This is the point where we have actually
visualized and confirmed the issue. Lets find out the cause.&lt;/p&gt;
&lt;h3 id=&quot;script-events-taking-more-than-15ms&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#script-events-taking-more-than-15ms&quot; aria-label=&quot;script events taking more than 15ms permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Script events taking more than 15ms&lt;/h3&gt;
&lt;div class=&quot;img-wrapper&quot;&gt;
  &lt;img src=&quot;/images/2013/07/devtools-initial-script-time.png&quot; alt=&quot;Chrome devtools&quot;&gt;
&lt;/div&gt;
&lt;p&gt;Every frame&apos;s bar is made of different colour components. In the above
snapshots we see only yellow and green ones. A quick look at the color legend
in the bottom bar tells us that yellow is script time and green is painting. A
closer analysis tells us that most frames are in majority made up of yellow
component. This means that most of the frame&apos;s time is spent in executing
script.&lt;/p&gt;
&lt;p&gt;Moreover if you hover over any small horizontal yellow bars below, as show in
the snapshot above, you&apos;ll also see the exact time that our scripts are taking
per frame along with the corresponding event that triggered it. In my case, it&apos;s
the scroll event (we expected that...no?). Some of those scroll events are
taking upto &lt;em&gt;27 ms&lt;/em&gt; which is much much more than our budget of 16ms per frame.&lt;/p&gt;
&lt;h3 id=&quot;issue-detected-scroll-event-script&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#issue-detected-scroll-event-script&quot; aria-label=&quot;issue detected scroll event script permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Issue detected: Scroll event script&lt;/h3&gt;
&lt;p&gt;After all this analysis using the devtools we hence come to the conclusion that
it&apos;s the script executing for every scroll event that is the cause of issue
here. Next step in our debug process is finding &lt;em&gt;WHY&lt;/em&gt; it is causing it.&lt;/p&gt;
&lt;h2 id=&quot;why-is-it-causing-an-issue&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#why-is-it-causing-an-issue&quot; aria-label=&quot;why is it causing an issue permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;WHY is it causing an issue?&lt;/h2&gt;
&lt;h3 id=&quot;lets-investigate-the-code&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#lets-investigate-the-code&quot; aria-label=&quot;lets investigate the code permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Let&apos;s investigate the code&lt;/h3&gt;
&lt;p&gt;Our code for the callback bound to the Scroll event is as follows:&lt;/p&gt;
&lt;p&gt;{% highlight js %}
$(window).scroll(function() {
var currentScroll = $(this).scrollTop();&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;text&quot;&gt;&lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;// Set the position to current slide if the user scrolls manually.
checkpoints.forEach(function(checkpoint, index) {
  if(currentScroll &amp;lt;= checkpoints[index] &amp;amp;&amp;amp; currentScroll &amp;gt; checkpoints[index - 1])
    i = index;

  if(currentScroll &amp;lt; checkpoints[1])
    i = 0;

  if(i == checkpoints.length - 1) {
    $(&amp;quot;#main_form, .social-icons&amp;quot;).css(&amp;quot;visibility&amp;quot;, &amp;quot;visible&amp;quot;);

    $(&amp;quot;a#scrollDown&amp;quot;).fadeOut();
    $(&amp;quot;a#autoscroll&amp;quot;).fadeOut();
  }
  else {
    $(&amp;quot;#main_form, .social-icons&amp;quot;).css(&amp;quot;visibility&amp;quot;, &amp;quot;hidden&amp;quot;);

    $(&amp;quot;a#scrollDown&amp;quot;).fadeIn();
    $(&amp;quot;a#autoscroll&amp;quot;).fadeIn();
  }

  if(currentScroll &amp;gt; 0)
    $(&amp;quot;a#scrollUp&amp;quot;).fadeIn();
  else
    $(&amp;quot;a#scrollUp&amp;quot;).fadeOut();
});&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;});
{% endhighlight %}&lt;/p&gt;
&lt;p&gt;This callback function will be our target from now on.&lt;/p&gt;
&lt;h3 id=&quot;scroll-event-is-too-frequent-to-handle-scripts-taking-time&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#scroll-event-is-too-frequent-to-handle-scripts-taking-time&quot; aria-label=&quot;scroll event is too frequent to handle scripts taking time permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Scroll event is too frequent to handle scripts taking time&lt;/h3&gt;
&lt;p&gt;First thing that striked me was that the Scroll event is fired too frequently.
Every time you scroll on a page, that event is fired multiple times within
seconds. Therefore any code that is attached to the Scroll event will be fired
with the same frequency. And if that code is computation heavy, we are done!&lt;/p&gt;
&lt;h2 id=&quot;fix&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#fix&quot; aria-label=&quot;fix permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;FIX&lt;/h2&gt;
&lt;p&gt;To improve the situation here, we have 2 ways:&lt;/p&gt;
&lt;p&gt;A. Make the Scroll event fire less frequently
B. Optimize the callback&apos;s code to take less execution time&lt;/p&gt;
&lt;h3 id=&quot;fix-a-make-the-scroll-event-fire-less-frequently&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#fix-a-make-the-scroll-event-fire-less-frequently&quot; aria-label=&quot;fix a make the scroll event fire less frequently permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;FIX A. Make the Scroll event fire less frequently&lt;/h3&gt;
&lt;p&gt;I could make the Scroll code fire less frequently in our case as it did not had
any usability hit. In fact mostly the code thats required to be executed on
Scroll event can be run on little longer intervals without any user experience
loss.&lt;/p&gt;
&lt;p&gt;This thing was easy to do. &lt;a href=&quot;http://benalman.com/&quot;&gt;Ben Alman&lt;/a&gt; has an &lt;a href=&quot;http://benalman.com/projects/jquery-throttle-debounce-plugin/&quot;&gt;awesome
jQuery plugin&lt;/a&gt;
written for throttling/debouncing functions. Its very easy to use too. Simply
get the plugin into your page and pass the throttled function to Scroll event
like so:&lt;/p&gt;
&lt;p&gt;{% highlight js %}
var callback = function () {
...
}&lt;/p&gt;
&lt;p&gt;$(window).scroll( $.throttle(350, callback));
{% endhighlight %}&lt;/p&gt;
&lt;p&gt;As you see in above code, I have made my callback to fire atmost once within
&lt;em&gt;350 ms&lt;/em&gt;. In other words, there will be atleast an interval of &lt;em&gt;350 ms&lt;/em&gt; between
2 calls to that function. This should probably keep those adjacent long yellow
bar at some distant from each. We&apos;ll see.&lt;/p&gt;
&lt;h3 id=&quot;test&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#test&quot; aria-label=&quot;test permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;TEST!&lt;/h3&gt;
&lt;p&gt;We made a small change from our side. But remember, there is no point of it
without actually testing the page and getting a performance boost. So lets
repeat the profiling procedure again.&lt;/p&gt;
&lt;p&gt;Here is what we got this time:&lt;/p&gt;
&lt;div class=&quot;img-wrapper&quot;&gt;
  &lt;img src=&quot;/images/2013/07/devtools-iter1-a.png&quot; alt=&quot;Result&quot;&gt;
&lt;/div&gt;
&lt;p&gt;Seems to have worked quite a bit! We have lesser frames overshooting the 16ms budget.&lt;/p&gt;
&lt;h3 id=&quot;fix-b-optimize-the-callbacks-code-to-take-less-execution-time&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#fix-b-optimize-the-callbacks-code-to-take-less-execution-time&quot; aria-label=&quot;fix b optimize the callbacks code to take less execution time permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;FIX B. Optimize the callback&apos;s code to take less execution time&lt;/h3&gt;
&lt;p&gt;Secondly, its also important to optimize the code inside that callback at that is what is causing the frames to go beyond our 16ms budget.&lt;/p&gt;
&lt;p&gt;If you look closely inside the callback&apos;s code and have a basic understanding of what not do while jQuery, you&apos;ll see some horrible things happening there. I&apos;ll not go in much details on why those things are bad as our focus is on using devtools in this article. Lets list out what all jQuery menace we see in it:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Cache jQuery objects&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;At many places, jQuery is being used to reference element by passing their selectors again and again in the callback. That is BAD. Unless these references will change in future, its wise to calculate them once and cache for future use.&lt;/p&gt;
&lt;p&gt;Some of the lines where jQuery is being used unnecessarily: &lt;/p&gt;
&lt;p&gt;{% highlight js %}
var currentScroll = $(this).scrollTop(); // this is always window object
{% endhighlight %}&lt;/p&gt;
&lt;p&gt;{% highlight js %}
$(&quot;#main_form, .social-icons&quot;).css(&quot;visibility&quot;, &quot;visible&quot;);&lt;/p&gt;
&lt;p&gt;  $(&quot;a#scrollDown&quot;).fadeOut();
$(&quot;a#autoscroll&quot;).fadeOut();
{% endhighlight %}&lt;/p&gt;
&lt;p&gt;{% highlight js %}
$(&quot;a#scrollUp&quot;).fadeIn();
{% endhighlight %}&lt;/p&gt;
&lt;p&gt;{% highlight js %}
$(&quot;a#scrollUp&quot;).fadeOut();
{% endhighlight %}&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Unnecessary animation&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Have a look at the following code snippet:&lt;/p&gt;
&lt;p&gt;{% highlight js %}
if(i == checkpoints.length - 1) {
socialIcons.css(&quot;visibility&quot;, &quot;visible&quot;);&lt;/p&gt;
&lt;p&gt;  scrollDownBtn.fadeOut();
scrollAutoBtn.fadeOut();
}
else {
socialIcons.css(&quot;visibility&quot;, &quot;hidden&quot;);&lt;/p&gt;
&lt;p&gt;  scrollDownBtn.fadeIn();
scrollAutoBtn.fadeIn();
}
{% endhighlight %}&lt;/p&gt;
&lt;p&gt;The first &lt;code&gt;if&lt;/code&gt; checks if we are on the last iteration of the loop or not. If not, then the &lt;code&gt;else&lt;/code&gt; part executes. Which means if the loop runs 100 times, 99 times the &lt;code&gt;else&lt;/code&gt; part executes. Moreover if you see carefully the code in the &lt;code&gt;else&lt;/code&gt; block, it will keep fading in/out certain elements on each iteration, even when it has done the same thing in past iteration. Taking account the heavy animation account cost in jQuery, this is absolutely unnecessary work being done here.&lt;/p&gt;
&lt;p&gt;We could simply do that stuff once and set a flag which will be checked next time and we only do it again if the flag is unset somehow.&lt;/p&gt;
&lt;h3 id=&quot;final-code&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#final-code&quot; aria-label=&quot;final code permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Final code&lt;/h3&gt;
&lt;p&gt;After the above 2 fixes, here is how our Scroll event callback looks like:&lt;/p&gt;
&lt;p&gt;{% highlight js %}
function scrollHandling() {
var currentScroll = $window.scrollTop();&lt;/p&gt;
&lt;p&gt;  // Set the position to current slide if the user scrolls manually.
checkpoints.forEach(function(checkpoint, index) {
if(currentScroll &amp;#x3C;= checkpoints[index] &amp;#x26;&amp;#x26; currentScroll &gt; checkpoints[index - 1])
i = index;&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;text&quot;&gt;&lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;if(currentScroll &amp;lt; checkpoints[1])
  i = 0;

if(i == checkpoints.length - 1) {
  socialIcons.css(&amp;quot;visibility&amp;quot;, &amp;quot;visible&amp;quot;);

  scrollDownBtn.fadeOut();
  scrollAutoBtn.fadeOut();
  lastSlideUIapplied = true;
}
else if (lastSlideUIapplied) {
  socialIcons.css(&amp;quot;visibility&amp;quot;, &amp;quot;hidden&amp;quot;);

  scrollDownBtn.fadeIn();
  scrollAutoBtn.fadeIn();
  lastSlideUIapplied = false;
}

if (currentScroll &amp;gt; 0) {
  scrollUpBtn[0].style.display == &amp;#39;none&amp;#39; &amp;amp;&amp;amp; scrollUpBtn.fadeIn();
}
else {
  scrollUpBtn.fadeOut();
}&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;  });
}&lt;/p&gt;
&lt;p&gt;$window.scroll( $.throttle(250, scrollHandling));
{% endhighlight %}&lt;/p&gt;
&lt;h2 id=&quot;test-again&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#test-again&quot; aria-label=&quot;test again permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;TEST AGAIN!&lt;/h2&gt;
&lt;p&gt;Needless to say, our next step is to test the changes made. Here is what the
timeline says now:&lt;/p&gt;
&lt;div class=&quot;img-wrapper&quot;&gt;
  &lt;img src=&quot;/images/2013/07/devtools-iter1-b.png&quot; alt=&quot;Final result&quot;&gt;
&lt;/div&gt;
&lt;p&gt;Bingo!&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;We hardly have any frames overshooting the target line of 60 FPS.&lt;/li&gt;
&lt;li&gt;We get an average execute time of &lt;em&gt;11.71 ms&lt;/em&gt; per frame with a standard deviation of around &lt;em&gt;4.97 ms&lt;/em&gt;.&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;going-further&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#going-further&quot; aria-label=&quot;going further permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Going further&lt;/h2&gt;
&lt;p&gt;We still see paint (green) events which are causing some frames to overshoot
the border. It is basically on slides where large image are being animated on
the screen. Its not that we can scale down the images or stop them from being
painted. The solution still needs to be figured out to optimize the painting
going on here. Suggestions?&lt;/p&gt;
&lt;h2 id=&quot;last-words&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#last-words&quot; aria-label=&quot;last words permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Last words&lt;/h2&gt;
&lt;p&gt;As Chrome folks say it, &lt;strong&gt;don’t guess it, test it!&lt;/strong&gt;&lt;/p&gt;</content:encoded><author>Kushagra Gour</author></item><item><title><![CDATA[please.js - A simple PostMessage based communication library]]></title><description><![CDATA[In one of our previous posts, we talked about the problems we faced when communicating with frames on a different domain in our application…]]></description><link>https://engineering.wingify.com//posts/please-js-release/</link><guid isPermaLink="false">https://engineering.wingify.com//posts/please-js-release/</guid><pubDate>Sun, 14 Jul 2013 18:30:00 GMT</pubDate><content:encoded>&lt;p&gt;In &lt;a href=&quot;http://engineering.wingify.com/posts/jquery-promises-with-postmessage/&quot;&gt;one of our previous posts&lt;/a&gt;, we talked about the problems we faced when communicating with frames on a different domain in our application &lt;a href=&quot;http://visualwebsiteoptimizer.com/&quot;&gt;Visual Website Optimizer&lt;/a&gt;, and highlighted the possible solutions to each of those problems.&lt;/p&gt;
&lt;p&gt;We are proud to announce &lt;a href=&quot;https://github.com/wingify/please.js&quot;&gt;please.js&lt;/a&gt;, a Request/Response based cross-domain communication. If you&apos;ve ever faced problems in cross-domain frame communication, fear not - just say please!&lt;/p&gt;
&lt;div style=&quot;text-align: center;&quot;&gt;
	&lt;a href=&quot;https://github.com/wingify/please.js&quot; style=&quot;padding: 20px 40px; font-size: 24px;&quot; class=&quot;btn btn-primary&quot;&gt;please.js on Github&lt;/a&gt;
&lt;/div&gt;
&lt;h2 id=&quot;what-is-pleasejs&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#what-is-pleasejs&quot; aria-label=&quot;what is pleasejs permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;What is please.js&lt;/h2&gt;
&lt;p&gt;please.js is a Request/Response based wrapper around the PostMessage API that makes use of jQuery Promises. Here&apos;s a quick example to load an iframe window&apos;s location:&lt;/p&gt;
&lt;p&gt;{% highlight js %}
var frameWindow = $(&apos;iframe&apos;).get(0).contentWindow;&lt;/p&gt;
&lt;p&gt;please(frameWindow).call(&apos;window.location.reload&apos;);
{% endhighlight %}&lt;/p&gt;
&lt;p&gt;please.js is based on top of jQuery and the jQuery Promise API. jQuery version 1.6 or above is preferred. To make the communication between two windows on different domains work, both of them must be injected with the same version of jQuery and please.js.&lt;/p&gt;
&lt;p&gt;Currently, please.js is an alpha release (0.1.0). Down the line, we would like to add features like support for communication in Chrome Extensions and improving the documentation to make it easier for all users to get started easily.&lt;/p&gt;
&lt;h2 id=&quot;how-it-works&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#how-it-works&quot; aria-label=&quot;how it works permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;How it works&lt;/h2&gt;
&lt;p&gt;The underlying concept is simple. Two frames need to communicate with each other asynchronously. To access one of the child frames on a page, the parent frame sends a &lt;code class=&quot;language-text&quot;&gt;please.Request&lt;/code&gt; to the child frame. The &lt;code class=&quot;language-text&quot;&gt;Request&lt;/code&gt; object is a lot like the request sent by the browser to a server. It contains information on what needs to be done in the child frame (call a function, get/set a property or a variable, or access a DOM node using jQuery). The child frame sends a &lt;code class=&quot;language-text&quot;&gt;please.Response&lt;/code&gt; back to the parent frame with the result of what the parent frame asked. For a function call request, it is the return value of that function, and for a get request, the value of the variable/property is returned.&lt;/p&gt;
&lt;h2 id=&quot;contributing&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#contributing&quot; aria-label=&quot;contributing permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Contributing&lt;/h2&gt;
&lt;p&gt;If you would like to contribute, you can &lt;a href=&quot;https://github.com/wingify/please.js/issues&quot;&gt;submit an issue&lt;/a&gt; on GitHub. Will be great if accompanied by a failing test case and/or a pull request.&lt;/p&gt;</content:encoded><author>Himanshu Kapoor</author></item><item><title><![CDATA[How We Made The Animated A/B Testing Guide]]></title><description><![CDATA[Recently, we launched our first ever animated guide to A/B testing which made it to the top of HN homepage (Yay!).  In this post, I'll go…]]></description><link>https://engineering.wingify.com//posts/making-of-abtesting-scrollmation/</link><guid isPermaLink="false">https://engineering.wingify.com//posts/making-of-abtesting-scrollmation/</guid><pubDate>Sun, 07 Jul 2013 18:30:00 GMT</pubDate><content:encoded>&lt;div style=&quot;text-align:center; margin:5px&quot;&gt;
&lt;img src=&quot;/images/posts/hn-bob-post.png&quot;&gt;
&lt;/div&gt;
&lt;p&gt;Recently, we launched our first ever &lt;a href=&quot;https://visualwebsiteoptimizer.com/what-is-ab-testing/&quot;&gt;animated guide to A/B testing&lt;/a&gt; which made it to the top of &lt;a href=&quot;https://news.ycombinator.com/item?id=5993914&quot;&gt;HN homepage&lt;/a&gt; (Yay!). &lt;/p&gt;
&lt;div style=&quot;text-align:center; margin:5px&quot;&gt;
&lt;img src=&quot;https://phaven-prod.s3.amazonaws.com/files/image_part/asset/956765/Xq0eqxVYXbzyZmOwI4nN5LDsLAw/medium_what.jpg&quot;&gt;
&lt;/div&gt;
&lt;p&gt;In this post, I&apos;ll go through the process of how I created the page using HTML5 and JS. Let&apos;s get started! &lt;/p&gt;
&lt;h2 id=&quot;setting-up-things&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#setting-up-things&quot; aria-label=&quot;setting up things permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Setting up things&lt;/h2&gt;
&lt;p&gt;I searched about some existing parallax scrolling JS scripts and came across &lt;a href=&quot;https://github.com/Prinzhorn/skrollr&quot;&gt;Skrollr.js&lt;/a&gt; which made my work a piece of cake! If you are going to create your own parallax scrolling page, then I would recommend you to use this library. Apart from that, I also used &lt;a href=&quot;https://github.com/yckart/jquery.scrollto.js&quot;&gt;scrollTo.js&lt;/a&gt; and &lt;a href=&quot;https://github.com/brandonaaron/jquery-mousewheel&quot;&gt;mousewheel.js&lt;/a&gt; for scroll handling.&lt;/p&gt;
&lt;p&gt;Also, I wanted to make the images used in that page look sharp on retina screens so I used a little LESS mixin from &lt;a href=&quot;http://retinajs.com/&quot;&gt;RetinaJS&lt;/a&gt; to make sure that retina screens show the images @2x.&lt;/p&gt;
&lt;h2 id=&quot;getting-started&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#getting-started&quot; aria-label=&quot;getting started permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Getting started&lt;/h2&gt;
&lt;p&gt;After looking at some examples of Skrollr, I was ready to start building up the page. The best thing about Skrollr is that it automatically set things up for you and also handles the parallax scrolling on mobile devices. &lt;/p&gt;
&lt;p&gt;Now, I saved two versions (1x and 2x, for retina) of all the images and searched for a good &lt;em&gt;comic&lt;/em&gt; font. Each slide on that page is a mixture of some text and image elements. I gave each slide an &lt;code class=&quot;language-text&quot;&gt;absolute&lt;/code&gt; positioning and &lt;code class=&quot;language-text&quot;&gt;100%&lt;/code&gt; width and height. Also, each element in the slides are &lt;code class=&quot;language-text&quot;&gt;fixed&lt;/code&gt; positioned are made to appear and disappear using the &lt;code class=&quot;language-text&quot;&gt;opacity&lt;/code&gt; property. Here&apos;s the code for the first slide:&lt;/p&gt;
&lt;p&gt;{% highlight html %}&lt;/p&gt;
  &lt;!-- Slide 1 --&gt;
  &lt;div class=slide id=slide1&gt;
    &lt;div class=bob
      data-0=left: 0%; opacity:0;
      data-1000=left: 50%; opacity:1;
      data-3600=left: 50%; opacity:1;
      data-4800=left: 50%; opacity:0;&gt;
    &lt;/div&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;text&quot;&gt;&lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;&amp;lt;div class=text
  data-1200=opacity:0; bottom:0%; margin-bottom: 0 
  data-2400=opacity:1; bottom:50%; margin-bottom: -46px
  data-3600=opacity:1; bottom:50%; margin-bottom: -46px; right: 50%
  data-4800=opacity: 0; bottom: 50%; margin-bottom: -48px; right: 0%&amp;gt;

  Meet &amp;lt;strong&amp;gt;Bob&amp;lt;/strong&amp;gt;
&amp;lt;/div&amp;gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
  &lt;/div&gt;
{% endhighlight %}
&lt;p&gt;The only thing that Skrollr needs is the &lt;code class=&quot;language-text&quot;&gt;data-px&lt;/code&gt; attribute with some CSS properties passed in that attribute. Here, Bob will be at 0% left having 0 opacity at the start. Now if the user scrolls to 1000px, s/he would see Bob&apos;s image appearing from left to the center with increasing opacity. Thats how it works, you just need to time your animations in terms of pixels and Skrollr will handle it for you. Here, both &lt;code class=&quot;language-text&quot;&gt;bob&lt;/code&gt; and &lt;code class=&quot;language-text&quot;&gt;text&lt;/code&gt; are fixed positioned. To make things responsive, I first positioned everything to center using this:&lt;/p&gt;
&lt;p&gt;{% highlight css %}
.element {
width: 100px; height: 100px;
left: 50%; top: 50%;
margin-left: -50px;
margin-top: -50px;
}
{% endhighlight %}&lt;/p&gt;
&lt;p&gt;After this, I altered the margins to position it perfectly so that on any resolution it will start from the center. I did the same thing for all the elements in each slide. Most of the elements are animated using CSS3 transforms while others are just faded in and out using &lt;code class=&quot;language-text&quot;&gt;opacity&lt;/code&gt; property. &lt;/p&gt;
&lt;h2 id=&quot;scroll-handling&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#scroll-handling&quot; aria-label=&quot;scroll handling permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Scroll handling&lt;/h2&gt;
&lt;p&gt;All this completed 80% of the page. Now, the only thing left was the scroll handling. I had to make sure that on each scroll, a slide should finish the animation properly and should not be left in between. To do this, I created checkpoints of the scroll position where each slide starts/ends. Now on each scroll, I incremented/decremented a counter based on the scroll direction. Based on that counter&apos;s current value the page is scrolled to the position from the checkpoints array and any other scroll event is ignored in that duration. Here&apos;s the code for this:&lt;/p&gt;
&lt;p&gt;{% highlight js %}
var i = 0;
var checkpoints = [0, 3600, 6000, 11200, 14800, 17200];
var timer = [0, 1000, 1000, 1500, 1500, 1500];&lt;/p&gt;
&lt;p&gt;  function scrollDown() {
if(i &amp;#x3C; checkpoints.length - 1 &amp;#x26;&amp;#x26; percentage == 100) {
i++;&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;text&quot;&gt;&lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;  $(html, body).scrollTo(0, checkpoints[i], {
    animation: {
      easing: linear,
      duration: timer[i]
    }
  });
}&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;  }&lt;/p&gt;
&lt;p&gt;  function scrollUp() {
if(i &gt; 0)
i--;&lt;/p&gt;
&lt;div class=&quot;gatsby-highlight&quot; data-language=&quot;text&quot;&gt;&lt;pre class=&quot;language-text&quot;&gt;&lt;code class=&quot;language-text&quot;&gt;$htmlAndBody.scrollTo(0, checkpoints[i], {
  animation: {
    easing: linear,
    duration: timer[i]
  }
});&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;  }
{% endhighlight %}&lt;/p&gt;
&lt;p&gt;I also added keyboard navigation, and put some arrows on the page for easier navigation. Also, after getting reviews from some non-technical people, I added the auto-play option so that all the lazy people would still be able to watch the whole presentation without moving a finger :P&lt;/p&gt;
&lt;p&gt;This almost completed the whole page. Last additions were creating a preloader for the page which loaded the images of first 5 slides with a progress bar and then rest of the images are loaded in the background. If you want, you can take a look at the &lt;a href=&quot;http://visualwebsiteoptimizer.com/what-is-ab-testing/js/preloader.js&quot;&gt;preloader.js&lt;/a&gt; to see how I did the preloading. Another thing was the share buttons and showing the count which was retrieved using PHP. &lt;/p&gt;
&lt;p&gt;I hope this covered everything but if you get stuck anywhere, then feel free to add your comments! :)&lt;/p&gt;</content:encoded><author>Kushagra Agarwal</author></item><item><title><![CDATA[jQuery Promises: The answer to PostMessage's asynchrony]]></title><description><![CDATA[Visual Website Optimizer's editor component loads a website for editing using a
proxy tunnel. It put a big restriction on what kind of…]]></description><link>https://engineering.wingify.com//posts/jquery-promises-with-postmessage/</link><guid isPermaLink="false">https://engineering.wingify.com//posts/jquery-promises-with-postmessage/</guid><pubDate>Sun, 16 Jun 2013 18:30:00 GMT</pubDate><content:encoded>&lt;p&gt;&lt;a href=&quot;http://visualwebsiteoptimizer.com/&quot;&gt;Visual Website Optimizer&lt;/a&gt;&apos;s editor component loads a website for editing using a
proxy tunnel. It put a big restriction on what kind of websites could be loaded
in it. Websites behind a firewall, the ones on a local network, or behind HTTP
authentication could not be loaded using the tunnel. Other than those, even if
the website did load in the editor, chances were that it could break on the
frontend due to issues with JavaScript or AJAX communication.&lt;/p&gt;
&lt;p&gt;You&apos;d ask: why is there a proxy in the first place? Because, if a page contains
an iframe on another domain, it cannot access its properties or functions. It is
a security feature that browser vendors offer users to protect their privacy.&lt;/p&gt;
&lt;h2 id=&quot;the-problem&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#the-problem&quot; aria-label=&quot;the problem permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;The Problem&lt;/h2&gt;
&lt;p&gt;So, our task at the frontend recently was to eliminate this troublesome
middleman and find a solution for cross-domain iframe communication. We knew
what the answer was: the &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/API/window.postMessage&quot;&gt;PostMessage API&lt;/a&gt;.
Provided a customer had VWO tracking
code integrated on their website, we could load the iframe directly without a
proxy and communicate with it using this API. The bigger question, however, was
how to do it. The Editor had a lot of parent-child communication going under the
hood for every task the user performed.  When attempting to use PostMessage for
this communication, we were faced with a couple of issues: &lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Our legacy code had direct communication between the parent frame and the
child frame at all places, i.e. the objects and functions in the child were
accessed synchronously. PostMessage API, on the other hand, is completely
asynchronous, and implementing such an API on the existing codebase would almost
mean rethinking the entire logic and program flow all over again.  We could
foresee this asynchronous transition become a cause of a lot of race conditions
within the Editor.&lt;/li&gt;
&lt;li&gt;Often, after sending a message to the other frame, we wanted to hear back a
reply, for which we needed a decent two-way communication. A kind that would
keep track of the sender and the receiver and could be identified across iframes
using a unique identifier (to tie up the requests and responses).&lt;/li&gt;
&lt;li&gt;Since PostMessage uses string messages for communication (or &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Web/Guide/DOM/The_structured_clone_algorithm&quot;&gt;structurally
cloneable&lt;/a&gt;
objects in the recent browsers), it put a big limit on what kind of
data we could send during this communication. Directly accessing DOM nodes and
sending around certain cyclic objects was no longer possible.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;For instance, when you select an element in the child frame, it creates a new
&lt;code class=&quot;language-text&quot;&gt;VWO.Element&lt;/code&gt; instance in the parent frame and asks it to open a context menu. The
code looked something like this:&lt;/p&gt;
&lt;p&gt;{% highlight js %}
$(elementSelectorPath).click(function() {
var element = parent.VWO.Element.create(elementSelectorPath);
parent.VWO.ContextMenu.showForElement(element);
});
{% endhighlight %}&lt;/p&gt;
&lt;p&gt;While, it might seem like a trivial problem to solve on the cover, deep
underneath, we were faced with a race condition. The &lt;code class=&quot;language-text&quot;&gt;Element.create&lt;/code&gt; method
asked the child frame to add a class to that element, and the
&lt;code class=&quot;language-text&quot;&gt;ContextMenu.showForElement&lt;/code&gt; expected the class to have been applied by the time
it was executed.&lt;/p&gt;
&lt;h2 id=&quot;the-solution&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#the-solution&quot; aria-label=&quot;the solution permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;The Solution&lt;/h2&gt;
&lt;p&gt;We concluded that refactoring the code to adapt to the asynchrony would be one
hell of a task and we had to find another way. We decided to write a wrapper
around the PostMessage API to solve the above three problems. We called it
&lt;code class=&quot;language-text&quot;&gt;please.js&lt;/code&gt;. We are currently giving it some finishing touches before we push it
out to the community. Here&apos;s how we did it:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;We decided to build this library on top of jQuery Deferred API. While
deferred objects and promises don&apos;t exactly eliminate the asynchrony, they
somehow bridge the gap between the two, making asynchronous code feel more
linear and flattened. So, using that base, any piece of code that expected code
prior to it to have been executed fully, could now be made possible without
giving a lot of thought. In the above example, the transition to &lt;code class=&quot;language-text&quot;&gt;please.js&lt;/code&gt;
looked like this:&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;{% highlight js %}
$(elementSelectorPath).click(function() {
please(parent)
.call(&apos;VWO.Element.create&apos;, elementSelectorPath)
.then(function (element) {
please(parent)
.call(&apos;VWO.ContextMenu.showForElement&apos;, element);
});
});
{% endhighlight %}&lt;/p&gt;
&lt;p&gt;Although this seems hackish at the first glance, it was a way to rapidly
iterate over synchronous code and convert it to use promises and callbacks
without giving much thought on the logic.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;To establish a good two-way communication, we thought of thinking of each
communication as a pair of messages: a request and a response. Under the hood,
we identified each message using a timestamp it was initiated on, and created a
request object with that identifier. We then send the request to the other
frame, whilst storing it in the current frame in a hashmap. The other frame
would then receive the request, perform an appropriate action and send back a
response. After a response is received, the request would be deleted from the
hashmap. To make things easier for us, we created a set of functions to make
certain frequent tasks easier. For instance, getting / setting a property and
calling a function were the most common tasks we performed. The code for these
tasks now looked like this:&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;{% highlight js %}
please(parent).get(&apos;window.location&apos;).then(function(location) {
// use location here
});&lt;/p&gt;
&lt;p&gt;  please(parent).set(&apos;foo&apos;, &apos;bar&apos;).then(function () {
// do something here
});&lt;/p&gt;
&lt;p&gt;  // reload the child window.
var childWindow = $(&apos;iframe#child&apos;).get(0).contentWindow;
please(childWindow).call(&apos;window.location.reload&apos;);
{% endhighlight %}&lt;/p&gt;
&lt;p&gt;A paradigm shift, yet the logic remained unaffected. Exactly what we wanted.&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;The last task was a big one. We had a lot of code in the parent frame
directly accessing the child frame&apos;s DOM. While this is not advocated as a good
practice, such problems are often faced when building upon and improving legacy
code. With PostMessage, you can no longer access the child&apos;s DOM in any way.
But we came up with a smart solution. We know that jQuery is a wrapper around
the traditional DOM. We created a PostMessage wrapper around jQuery itself!
Which makes impossible turn possible:&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;{% highlight js %}
// set #bar&apos;s height in child = foo&apos;s height in child
var pls = please($(&apos;iframe#child&apos;).get(0).contentWindow);
pls.$(&apos;div#foo&apos;).height().then(function (fooHeight) {
pls.$(&apos;div#bar&apos;).height(fooHeight);
});&lt;/p&gt;
&lt;p&gt;  // DOM elements are returned back as please.UnserializableObject
// which can then be passed back to please.$ to do more stuff
pls.$(&apos;&lt;div&gt;hello world&lt;/div&gt;&apos;).then(function (newDiv) {
pls.$(newDiv).appendTo(&apos;body&apos;);
});
{% endhighlight %}&lt;/p&gt;
&lt;p&gt;This was something that I thought of during one of the &lt;a href=&quot;http://team.wingify.com/friday-engineering-talks-at-wingify&quot;&gt;hackathons&lt;/a&gt;
we host at Wingify. Turned out to be very fruitful!&lt;/p&gt;
&lt;h2 id=&quot;conclusion&quot; style=&quot;position:relative;&quot;&gt;&lt;a href=&quot;#conclusion&quot; aria-label=&quot;conclusion permalink&quot; class=&quot;anchor before&quot;&gt;&lt;svg aria-hidden=&quot;true&quot; focusable=&quot;false&quot; height=&quot;16&quot; version=&quot;1.1&quot; viewBox=&quot;0 0 16 16&quot; width=&quot;16&quot;&gt;&lt;path fill-rule=&quot;evenodd&quot; d=&quot;M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z&quot;&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/a&gt;Conclusion&lt;/h2&gt;
&lt;p&gt;In my personal opinion, I believe using promises for such a large transition
has greatly impacted the way I think about frontend web development. It is a
way forward for rapid asynchronous development, and yet having a flattened
synchronous-like code structure.&lt;/p&gt;
&lt;p&gt;&lt;code class=&quot;language-text&quot;&gt;please.js&lt;/code&gt; will be opensourced soon, so keep an eye out on the blog for updates!&lt;/p&gt;</content:encoded><author>Himanshu Kapoor</author></item><item><title><![CDATA[Introduction: Engineering @ Wingify]]></title><description><![CDATA[I clearly remember the summer of 2010 when we were about to launch our
product Visual Website Optimizer out
of beta and almost all the…]]></description><link>https://engineering.wingify.com//posts/introduction/</link><guid isPermaLink="false">https://engineering.wingify.com//posts/introduction/</guid><pubDate>Tue, 21 May 2013 18:30:00 GMT</pubDate><content:encoded>&lt;p&gt;I clearly remember the summer of 2010 when we were about to launch our
product &lt;a href=&quot;http://visualwebsiteoptimizer.com&quot;&gt;Visual Website Optimizer&lt;/a&gt; out
of beta and almost all the conversations I and &lt;a href=&quot;http://twitter.com/paraschopra&quot;&gt;Paras&lt;/a&gt; had were either around acquiring our
initial customers or about the ever increasing load on our single &lt;a href=&quot;http://linode.com&quot;&gt;Linode&lt;/a&gt; 512MB VPS. Three years down, we still end up
discussing about the same things but at a completely different magnitude.
The customer base has increased to 2600+ accounts across 75+ countries and
our &lt;a href=&quot;http://visualwebsiteoptimizer.com/split-testing-blog/geo-distributed-architecture/&quot;&gt;geo distributed architecture&lt;/a&gt;
on a set of 30+ servers currently serve close to 8,000 requests per second.&lt;/p&gt;
&lt;p&gt;In this amazing journey what we also managed to do is try our hands on a
bunch of different technologies, tools and libraries. Many a times, the
available stuff didn&apos;t fit our scaling needs and we had to craft our own
versions. With the medium of this blog (which was long due),
my team will try to talk about all the learning we keep
having in our day-to-day engineering work at &lt;a href=&quot;http://wingify.com&quot;&gt;Wingify&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;In the next few posts, we will walk though the evolution in our
architecture (from standard LAMP to a delicately configured &lt;a href=&quot;http://openresty.org&quot;&gt;openresty&lt;/a&gt; CDN &amp;#x26; DA (Content distribution &amp;#x26; data acquisition
network) environment; from a single data center stack to a distributed
system across the globe), code rewrites / refactors we had to do, various
benchmarks we relied on and of course all the learning we had from this
exercise. We will showcase and write about the small / big tools and
libraries we wrote to scratch our own itch.&lt;/p&gt;
&lt;p&gt;If you ever have any question, suggestion, feedback or you want to discuss
anything or just want to drop a hello; I would love to hear from you. Please feel
free to get in touch with me &lt;a href=&quot;mailto:sparsh@wingify.com&quot;&gt;sparsh@wingify.com&lt;/a&gt;
or with our engineering team &lt;a href=&quot;mailto:%0Aengineering@wingify.com&quot;&gt;engineering@wingify.com&lt;/a&gt; directly or via comments section in this blog.&lt;/p&gt;
&lt;p&gt;Hope to see you again soon when we post our first engineering article on this blog.
Please &lt;a href=&quot;/atom.xml&quot;&gt;subscribe&lt;/a&gt; the blog to stay updated. We&apos;re out to change the way software is written,
so come along and &lt;a href=&quot;http://visualwebsiteoptimizer.com/careers.php&quot;&gt;share our journey&lt;/a&gt;!&lt;/p&gt;
&lt;p&gt;-- Engineering @ &lt;a href=&quot;http://wingify.com&quot;&gt;Wingify&lt;/a&gt;&lt;/p&gt;</content:encoded><author>Sparsh Gupta</author></item></channel></rss>